[tox]
envlist =
    py-orange-{latest, released}
    pylint-ci
    build_doc
    add-ons
skip_missing_interpreters = true
isolated_build = true

[testenv]
# must use latest pip (version 20.3.1 enables Big Sur support - https://github.com/pypa/pip/issues/9138)
pip_version = pip
passenv = *
# we MUST changedir to avoid installed being shadowed by working dir
# https://github.com/tox-dev/tox/issues/54
# https://github.com/tox-dev/tox/issues/514
changedir =
    {envsitepackagesdir}
setenv =
    # Raise deprecations as errors in our tests
    ORANGE_DEPRECATIONS_ERROR=y
    # Need this otherwise unittest installs a warning filter that overrides
    # our desire to have OrangeDeprecationWarnings raised
    PYTHONWARNINGS=module
    # trace memory allocations
    PYTHONTRACEMALLOC=1
    # Skip loading of example workflows as that inflates coverage
    SKIP_EXAMPLE_WORKFLOWS=True
    # set coverage output and project config
    COVERAGE_FILE = {toxinidir}/.coverage
    COVERAGE_RCFILE = {toxinidir}/.coveragerc
deps =
    pyqt5==5.12.*
    pyqtwebengine==5.12.*
    -r {toxinidir}/requirements-opt.txt
    coverage
    psycopg2-binary
    # no wheels for mac
    pymssql<3.0;platform_system!='Darwin' and python_version<'3.8'
    latest: git+git://github.com/pyqtgraph/pyqtgraph.git#egg=pyqtgraph
    latest: git+git://github.com/biolab/orange-canvas-core.git#egg=orange-canvas-core
    latest: git+git://github.com/biolab/orange-widget-base.git#egg=orange-widget-base

commands_pre =
    # Verify installed packages have compatible dependencies
    pip check
    # freeze environment
    pip freeze
commands =
    coverage run -m unittest -v Orange.tests Orange.widgets.tests Orange.canvas.tests
    coverage run -m unittest discover -v Orange.canvas.tests
    coverage combine
    coverage report

[testenv:add-ons]
deps =
    {[testenv]deps}
    Orange3-Educational
    Orange3-Geo
    Orange3-ImageAnalytics
    Orange3-Text
commands =
    python -m unittest discover --verbose --start-directory {envsitepackagesdir}/orangecontrib

[testenv:pylint-ci]
changedir = {toxinidir}
skip_install = true
whitelist_externals = bash
deps = pylint
commands =
    bash .github/workflows/check_pylint_diff.sh

[testenv:build_doc]
changedir = {toxinidir}
usedevelop = true
whitelist_externals = bash
deps =
    {[testenv]deps}
    -r {toxinidir}/requirements-doc.txt
commands =
    bash doc/build_doc.sh
