__init__.py:
    orange.addons: false
    classification: false
    clustering: false
    distance: false
    ensembles: false
    evaluation: false
    misc: false
    modelling: false
    preprocess: false
    projection: false
    regression: false
    statistics: false
    version: false
    widgets: false
    pyqt5: false
    pyqt4: false
    libGL.so.1: false
base.py:
    Learner: false
    Model: false
    SklLearner: false
    SklModel: false
    ReprableWithPreprocessors: false
    class `ReprableWithPreprocessors`:
        def `_reprable_omit_param`:
            preprocessors: false
    class `Learner`:
        def `fit`:
            Descendants of Learner must overload method fit or fit_storage: false
        def `__call__`:
            Preprocessing...: Predprocesiranje...
            "A keyword argument 'progress_callback' has been ": false
            'added to the preprocess() signature. Implementing ': false
            'the method without the argument is deprecated and ': false
            will result in an error in the future.: false
            %s doesn't support multiple class variables: false
            Fitting...: Učenje...
            domain: false
        def `name`:
            Learner: false
            Fitter: false
            Skl: false
            learner: false
            ([a-z0-9])([A-Z]): false
            \1 \2: false
            (.)([A-Z][a-z]+): false
    class `Model`:
        def `predict`:
            Descendants of Model must overload method predict: false
        def `predict_storage`:
            Unrecognized argument (instance of '{}'): false
        def `get_backmappers`:
            Mismatching number of model's classes and data classes: false
            "Model for '{modelclass.name}' ": false
            cannot predict '{dataclass.name}': false
            "Variables '{modelclass.name}' in the model is ": false
            'incompatible with the variable of the same name ': false
            in the data.: false
        def `data_to_model_domain`:
            domain transformation produced no defined values: false
        def `__call__`:
            invalid value of argument 'ret': false
            cannot predict continuous distributions: false
            Unrecognized argument (instance of '{}'): false
            model returned a {prediction.ndim}-dimensional array: false
        def `__getstate__`:
            original_data: false
    class `SklModel`:
        def `predict`:
            probability: false
            predict_proba: false
        def `__repr__`:
            '  # params=': false
    class `SklLearner`:
        def `_get_sklparams`:
            self: false
            Wrapper does not define '__wraps__': false
        def `preprocess`:
            'Wrapped scikit-learn methods do not support ': false
            multinomial variables.: false
        def `supports_weights`:
            'SklLearner.supports_weights property is deprecated. All ': false
            'subclasses should redefine the supports_weights attribute. ': false
            The property will be removed in 3.39.: false
            __wrapped__: false
            sample_weight: false
    class `KNNBase`:
        def `__init__`:
            euclidean: false
            uniform: false
            auto: false
        def `fit`:
            metric_params: false
            metric: false
            mahalanobis: false
            V: false
    class `NNBase`:
        def `__init__`:
            relu: false
            adam: false
            auto: false
            constant: false
    class `CatGBModel`:
        def `predict`:
            predict_proba: false
        def `__repr__`:
            '  # params=': false
tree.py:
    class `MappedDiscreteNode`:
        def `branches_from_mapping`:
            {:>0{}b}: false
        def `_set_child_descriptions`:
            (unreachable): (nedosegljivo)
            {} or {}: {} ali {}
            ', ': false
    class `NumericNode`:
        def `_set_child_descriptions`:
            {} {}: false
            ≤>: false
    class `TreeModel`:
        def `rule`:
            {} > {}: false
            {} ≤ {}: false
            {} < {} ≤ {}: false
            '{}: {}': false
        def `print_tree`:
            {:>20} {}{} {}\n: false
            '    ': false
util.py:
    default: false
    ORANGE_DEPRECATIONS_ERROR: false
    error: false
    def `log_warnings`:
        nested log_warnings: false
    def `resource_filename`:
        Orange: false
    def `deprecated`:
        ; use {obj} instead: false
        def `decorator`:
            def `wrapper`:
                __self__: false
                {func.__self__.__class__}.{name}: false
                Call to deprecated {name}{alternative}: false
    class `allot`:
        def `call`:
            skippable function cannot return a result: false
    def `literal_eval`:
        set(): false
    ==: false
    >=: false
    <=: false
    >: false
    <: false
    _Requirement: false
    name: false
    op: false
    value: false
    True: false
    true: false
    False: false
    false: false
    def `requirementsSatisfied`:
        'Invalid requirement specification: %s': false
    class `Registry`:
        def `__new__`:
            registry: false
        def `__str__`:
            {cls.__name__}({{{", ".join(cls.registry)}}}): false
    def `namegen`:
        _: false
    def `export_globals`:
        __name__: false
        _: false
    def `color_to_hex`:
        '#{:02X}{:02X}{:02X}': false
    def `Reprable_repr_pretty`:
        {name}(...): false
        def `printitem`:
            =: false
        def `printsep`:
            ,: false
        {name}(: false
        ): false
    class `_Undef`:
        def `__repr__`:
            <?>: false
    class `Reprable`:
        def `_reprable_fields`:
            self: false
        def `_reprable_items`:
            error: false
        def `_repr_pretty_`:
            .: false
        def `__repr__`:
            .: false
            ', ': false
            {f}={repr(v)}: false
            {name}({items}): false
    def `frompyfunc`:
        DTypeLike: false
        def `funcv`:
            unsafe: false
version.py:
    3.37.0: false
    3.37.0.dev0+f49e020: false
    f49e020957eaf15fea4bab426141dd2942f9deac: false
    .dev: false
canvas/__main__.py:
    ORANGE_STATISTICS_API_URL: false
    https://orange.biolab.si/usage-statistics: false
    def `ua_string`:
        Continuum: false
        conda: false
        Orange{orange_version}:Python{py_version}:{platform}:{conda}: false
        .: false
        Anaconda: false
    def `make_sql_logger`:
        sql_log: false
        sql.log: false
    def `check_for_updates`:
        startup/check-updates: false
        startup/last-update-check-time: false
        class `GetLatestVersion`:
            def `run`:
                https://orange.biolab.si/version/: false
                Accept: false
                text/plain: false
                Accept-Encoding: false
                gzip, deflate: false
                Connection: false
                close: false
                User-Agent: false
                Failed to check for updates: false
        def `compare_versions`:
            startup/latest-skipped-version: false
            Orange Update Available: Na voljo je nova različica
            'Current version: <b>{}</b><br>': Trenutna različica: <b>{}</b><br>
            'Latest version: <b>{}</b>': Najnovejša različica: <b>{}</b><br>
            Download: Namesti
            Skip this Version: Preskoči to različico
            canvas/icons/update.png: false
            def `handle_click`:
                startup/latest-skipped-version: false
                https://orange.biolab.si/download/: false
    def `open_link`:
        orange: false
        enable-statistics: false
        reporting/send-statistics: false
        reporting/machine-id: false
    !Notification: false
    def `pull_notifications`:
        notifications/check-notifications: false
        -1: false
        notifications/displayed: false
        set(): false
        class `GetNotifFeed`:
            def `run`:
                https://orange.biolab.si/notification-feed: false
                Accept: false
                text/plain: false
                Connection: false
                close: false
                User-Agent: false
                Cache-Control: false
                no-cache: false
                Pragma: false
                Failed to pull notification feed: false
        def `parse_yaml_notification`:
            notifications/announcements: false
            notifications/blog: false
            notifications/new-features: false
            announcement: false
            blog: false
            new-features: false
            installed: false
            local_config: false
            canvas/icons/: false
            .png: false
            def `remember_notification`:
                notifications/displayed: false
    def `send_usage_statistics`:
        def `send_statistics`:
            reporting/send-statistics: false
            Not sending usage statistics (preferences setting).: false
            Not sending usage statistics (disabled).: false
            reporting/machine-id: false
            Continuum: false
            conda: false
            Orange Version: false
            Application Version: false
            Anaconda: false
            UUID: false
            file: false
            'Error communicating with server while attempting to send ': false
            usage statistics. Status code %d: false
            Usage statistics sent.: false
            w: false
            utf-8: false
            Connection error while attempting to send usage statistics.: false
            Failed to send usage statistics.: false
        class `SendUsageStatistics`:
            def `run`:
                Failed to send usage statistics.: false
    class `OMain`:
        Orange.canvas.config.Config: false
        def `run`:
            exitCleanup: false
        def `argument_parser`:
            --clear-widget-settings: false
            store_true: false
            Clear stored widget setting/defaults: false
            --clear-all: false
            Clear all settings and caches: false
        def `_rm_tree`:
            rmtree '%s': false
        def `clear_widget_settings`:
            Clearing widget settings: false
        def `clear_caches`:
            Clearing caches: false
            Clearing data: false
        def `clear_application_settings`:
            Clearing application settings: false
            clear '%s': false
        def `setup_application`:
            DELETE_ON_START: false
            startup/launch-count: false
            reporting/send-statistics: false
            def `onPaletteChange`:
                Setting pyqtgraph background to %s: false
                background: false
                Setting pyqtgraph foreground to %s: false
                foreground: false
                darkMode: false
        def `show_splash_message`:
            '#FFFFFF': false
    __main__: false
canvas/config.py:
    https://orange.biolab.si/addons/list: false
    orange.widgets: false
    startup/check-updates: false
    Check for updates: false
    startup/launch-count: false
    reporting/machine-id: false
    reporting/send-statistics: false
    reporting/permission-requested: false
    notifications/check-notifications: false
    Check for notifications: false
    notifications/announcements: false
    Show notifications about Biolab announcements: false
    notifications/blog: false
    Show notifications about blog posts: false
    notifications/new-features: false
    Show notifications about new features: false
    notifications/displayed: false
    set(): false
    Serialized set of notification IDs which have already been displayed: false
    class `Config`:
        biolab.si: false
        Orange: false
        Biolab.Orange: false
        def `init`:
            widget_settings_dir: false
            canvas_settings_dir: false
        def `application_icon`:
            icons/orange-256.png: false
            png: false
        def `splash_screen`:
            icons/orange-splash-screen-{splash_n:02}.png: false
            png: false
            .: false
            Helvetica: false
            '#000000': false
        def `widgets_entry_points`:
            orange3: false
        def `core_packages`:
            Orange3 >=3.20,<4.0a: false
        def `examples_entry_points`:
            000-Orange3: false
            Orange.canvas.workflows: false
            orange.widgets.tutorials: false
        Bug Report: false
        https://github.com/biolab/orange3/issues: false
        Quick Start: false
        https://orange.biolab.si/getting-started/: false
        Documentation: false
        https://orange.biolab.si/widget-catalog/: false
        Screencasts: false
        https://www.youtube.com/watch: false
        ?v=HXjnDIgGDuI&list=PLmNPvQr9Tf-ZSDLwOzxpvY-HrE0yv-8Fy&index=1: false
        Feedback: false
        https://orange.biolab.si/survey/long.html: false
    def `init`:
        This is not the init you are looking for.: false
    def `data_dir`:
        canvas: false
    def `cache_dir`:
        canvas: false
    def `log_dir`:
        darwin: false
        ~/Library/Logs: false
        log_dir: false
    def `widget_settings_dir`:
        "'{__name__}.widget_settings_dir' is deprecated.": false
canvas/mainwindow.py:
    class `OUserSettingsDialog`:
        def `__init__`:
            Automatically check for updates: Samodejno preverjaj, ali je na voljo novejša različica
            Updates: Nove različice
            checked: false
            startup/check-updates: false
            Reporting: Poročanje
            Settings related to reporting: Nastavitve, povezane s poročanjem
            text: false
            reporting/machine-id: false
            Machine ID:: ID računalnika:
            Share: Pošiljaj
            Share anonymous usage statistics to improve Orange: Pošiljaj anonimizirano statistiko, koristno za izboljšave programa
            reporting/send-statistics: false
            Anonymous Statistics: Anonimizirana statistika
            '<a ': false
            href=\"https://orange.biolab.si/statistics-more-info\">: false
            More info...: Več informacij...
            </a>: false
            Notifications: Obvestila
            Settings related to notifications: Nastavitve, povezane z obvestili
            Enable notifications: Vključi obvestila
            Pull and display a notification feed.: Prejemaj in kaži obvestila
            notifications/check-notifications: false
            On startup: Ob zagonu
            notifications-group: false
            Announcements: Najave
            Show notifications about Biolab announcements.\n: Pokaži obvestila o naših najavah.\n
            'This entails events and courses hosted by the developers of ': 'To vključuje dogodke in tečaje, ki jih gostimo '
            Orange.: razvijalci programa Orange.
            Blog posts: Objave v blogu
            Show notifications about blog posts.\n: Pokaži obvestila o objavah v blogu.\n
            We'll only send you the highlights.: Pošiljali bomo le izbrane objave.
            New features: Nove zmožnosti
            'Show notifications about new features in Orange when a new ': 'Pokaži obvestila o novih zmožnostih programa '
            version is downloaded and installed,\n: po namestitvi novejše različice.
            should the new version entail notable updates.: ""
            notifications/announcements: false
            notifications/blog: false
            notifications/new-features: false
            Show notifications about: Pokaži obvestila o
    class `MainWindow`:
        def `__init__`:
            orange.canvas.drophandler: false
        def `open_canvas_settings`:
            Preferences: Nastavitve
canvas/report.py:
    "'{__name__}' is deprecated and will be removed in the future.\n": false
    "The contents of this package were moved to 'Orange.widgets.report'. ": false
    Please update the imports accordingly.: false
canvas/run.py:
    def `main`:
        'Run an orange workflow without showing a GUI and exit ': false
        when it completes.\n\n: false
        'WARNING: This is experimental as Orange is not designed to run ': false
        non-interactive.: false
        --log-level: false
        -l: false
        LEVEL: false
        log_level: false
        --config: false
        Orange.canvas.config.Config: false
        file: false
        basedir: false
        rb: false
    __main__: false
canvas/utils/environ.py:
    "'{__name__}' is deprecated and will be removed on the future. ": false
    Use 'Orange.misc.environ' instead: false
classification/base_classification.py:
    LearnerClassification: false
    ModelClassification: false
    SklModelClassification: false
    SklLearnerClassification: false
    class `LearnerClassification`:
        def `incompatibility_reason`:
            Too many target variables.: Preveč ciljnih spremenljivk.
            Categorical class variable expected.: Pričakujem kategorično ciljno spremenljivko.
classification/calibration.py:
    ThresholdClassifier: false
    ThresholdLearner: false
    CalibratedLearner: false
    CalibratedClassifier: false
    class `ThresholdClassifier`:
        def `__init__`:
            ThresholdClassifier requires a binary class: ThresholdClassifier pričakuje dvojiški razred.
            {base_model.name}, thresh={threshold:.2f}: false
        def `__call__`:
            ignore: false
    class `ThresholdLearner`:
        def `fit_storage`:
            ThresholdLearner requires a binary class: ThresholdLearner pričakuje dvojiški razred.
    class `CalibratedClassifier`:
        def `__init__`:
            CalibratedClassifier requires a discrete target: ThresholdClassifier pričakuje kategorično ciljno spremenljivko.
            {base_model.name}, calibrated: false
        def `calibrated_probs`:
            ignore: false
    class `CalibratedLearner`:
        def `get_model`:
            clip: false
classification/catgb.py:
    CatGBClassifier: false
classification/gb.py:
    GBClassifier: false
    class `GBClassifier`:
        def `__init__`:
            log_loss: false
            friedman_mse: false
            deprecated: false
classification/knn.py:
    KNNLearner: false
classification/logistic_regression.py:
    LogisticRegressionLearner: false
    class `LogisticRegressionLearner`:
        def `__init__`:
            l2: false
            auto: false
        def `_initialize_wrapped`:
            solver: false
            penalty: false
            auto: false
            l1: false
            liblinear: false
            lbfgs: false
classification/majority.py:
    MajorityLearner: false
    class `MajorityLearner`:
        def `fit_storage`:
            'classification.MajorityLearner expects a domain ': false
            with a (single) categorical variable: false
    class `ConstantModel`:
        def `__str__`:
            ConstantModel {}: false
classification/naive_bayes.py:
    NaiveBayesLearner: false
    class `NaiveBayesLearner`:
        naive bayes: false
        def `fit_storage`:
            Data is not a subclass of Orange.data.Storage.: false
            'Only categorical variables are ': Podprte so samo kategorične spremenljivke.
            supported.: ""
            Data has no defined target values.: Podatki nimajo ciljne spremenljivke.
classification/neural_network.py:
    NNClassificationLearner: false
    class `NNClassificationLearner`:
        def `_initialize_wrapped`:
            callback: false
classification/outlier_detection.py:
    LocalOutlierFactorLearner: false
    IsolationForestLearner: false
    EllipticEnvelopeLearner: false
    OneClassSVMLearner: false
    class `_OutlierModel`:
        def `__call__`:
            Predicting...: Napovedujem...
    class `_OutlierLearner`:
        def `_fit_model`:
            Outlier: Osamelec
            Yes: Da
            No: Ne
    class `OneClassSVMLearner`:
        One class SVM: Enorazredni SVM
        def `__init__`:
            rbf: false
            auto: false
    class `LocalOutlierFactorLearner`:
        Local Outlier Factor: Lokalni faktor odstopanja
        def `__init__`:
            auto: false
            minkowski: false
    class `IsolationForestLearner`:
        Isolation Forest: Izolacijski gozd
        def `__init__`:
            auto: false
            deprecated: false
    class `EllipticEnvelopeLearner`:
        Covariance Estimator: Ocena kovariance
        def `_fit_model`:
            Mahalanobis: false
classification/random_forest.py:
    RandomForestLearner: false
    class `RandomForestClassifier`:
        def `trees`:
            def `wrap`:
                {} - tree {}: {} - drevo {}
                instances: false
    class `RandomForestLearner`:
        def `__init__`:
            gini: false
            sqrt: false
classification/rules.py:
    CN2Learner: false
    CN2UnorderedLearner: false
    CN2SDLearner: false
    CN2SDUnorderedLearner: false
    def `argmaxrnd`:
        argmaxrnd only accepts arrays of up to 2 dim: false
    class `TopDownSearchStrategy`:
        def `find_new_selectors`:
            ==: false
            !=: false
            <=: false
            >=: false
    class `Selector`:
        Selector: false
        column, op, value: false
        ==: false
        !=: false
        <=: false
        >=: false
    class `Rule`:
        def `__str__`:
            ' AND ': ' IN '
            TRUE: SICER
            =: false
            _: false
            'IF {} THEN {} ': 'ČE {} POTEM {} '
    class `CN2UnorderedLearner`:
        CN2 unordered inducer: false
    class `CN2SDLearner`:
        CN2-SD inducer: false
    class `CN2SDUnorderedLearner`:
        CN2-SD unordered inducer: false
    def `main`:
        titanic: false
        iris.tab: false
    __main__: false
classification/sgd.py:
    SGDClassificationLearner: false
    class `SGDClassificationLearner`:
        sgd: false
        def `__init__`:
            hinge: false
            l2: false
            invscaling: false
classification/simple_random_forest.py:
    SimpleRandomForestLearner: false
    class `SimpleRandomForestLearner`:
        simple rf class: false
        def `__init__`:
            sqrt: false
classification/simple_tree.py:
    SimpleTreeLearner: false
    type: false
    children_size: false
    split_attr: false
    split: false
    children: false
    dist: false
    n: false
    sum: false
    class `SimpleTreeLearner`:
        simple tree: false
    class `SimpleTreeModel`:
        def `__init__`:
            'Number of classes should be 1: {}': Pričakujem eno ciljno razredno spremenljivko, ne {}
            'Only Continuous and Discrete ': Podprte so samo numerične in kategorične spremenljivke
            variables are supported: ""
            sqrt: false
            log2: false
            'skip_prob not valid: {}': false
        def `predict`:
            Invalid prediction type: false
        def `__del__`:
            node: false
        def `__getstate__`:
            node: false
        def `dumps_tree`:
            {: false
            {:.5f}: false
            {:.2f}: false
            {:.5f} {:.5f}: false
            }: false
            ' ': false
        def `to_string`:
            (null node): false
            '({self.domain.class_var.format_str}: %s)': false
            ' --> ': false
            '%s ': false
            ' --> %s (%s)': false
            \n: false
            '   ': false
            %s (%s): false
            <=: false
            >: false
            ': %s': false
classification/softmax_regression.py:
    SoftmaxRegressionLearner: false
    class `SoftmaxRegressionLearner`:
        softmax: false
        def `fit`:
            'Softmax regression does not support ': 'Softmax regresija ne podpira '
            multi-label classification: več ciljnih spremenljivk.
            unknown values: neznanih vrednosti.
    __main__: false
    iris: false
classification/svm.py:
    SVMLearner: false
    LinearSVMLearner: false
    NuSVMLearner: false
    class `SVMLearner`:
        def `__init__`:
            rbf: false
            auto: false
    class `LinearSVMLearner`:
        def `__init__`:
            l2: false
            squared_hinge: false
            ovr: false
    class `NuSVMLearner`:
        def `__init__`:
            rbf: false
            auto: false
    __main__: false
    iris: false
    'learner: {}\nCA: {}\n': false
classification/tree.py:
    SklTreeLearner: false
    TreeLearner: false
    class `TreeLearner`:
        def `__init__`:
            binarize: false
            min_samples_leaf: false
            min_samples_split: false
            sufficient_majority: false
            max_depth: false
        def `fit_storage`:
            'Exhaustive binarization does not handle ': 'Binarizacija ne zmore kategoričnih spremenljivk '
            attributes with more than {} values: z več kot {} različnimi vrednostmi.
    class `SklTreeLearner`:
        tree: false
        def `__init__`:
            gini: false
            best: false
classification/xgb.py:
    XGBClassifier: false
    XGBRFClassifier: false
    class `XGBClassifier`:
        def `__init__`:
            binary:logistic: false
            gain: false
    class `XGBRFClassifier`:
        def `__init__`:
            binary:logistic: false
            gain: false
clustering/clustering.py:
    class `ClusteringModel`:
        def `__call__`:
            domain transformation produced no defined values: false
            Unrecognized argument (instance of '{}'): false
        def `predict`:
            This clustering algorithm does not support predicting.: false
    class `Clustering`:
        def `__init__`:
            self: false
            preprocessors: false
            __class__: false
clustering/dbscan.py:
    DBSCAN: false
    class `DBSCAN`:
        def `__init__`:
            euclidean: false
            auto: false
    __main__: false
    iris: false
clustering/hierarchical.py:
    HierarchicalClustering: false
    single: false
    average: false
    complete: false
    weighted: false
    ward: false
    def `condensedform`:
        upper: false
        lower: false
        invalid mode: false
    def `squareform`:
        upper: false
        lower: false
    def `sample_clustering`:
        euclidean: false
    class `Tree`:
        __value: false
        __branches: false
        __hash: false
        def `__repr__`:
            {0.__name__}(value={1!r}, branches={2!r}): false
        _Tree__value: false
        _Tree__branches: false
    Cluster: false
    range: false
    height: false
    Singleton: false
    index: false
    def `tree_from_linkage`:
        linkage: false
    def `postorder`:
        branches: false
    def `preorder`:
        branches: false
    def `leaves`:
        branches: false
    def `prune`:
        At least one pruning argument must be supplied: false
    def `optimal_leaf_ordering`:
        "'progress_callback' parameter is deprecated and ignored. ": false
        Passing it will raise an error in the future.: false
clustering/kmeans.py:
    KMeans: false
    class `KMeansModel`:
        def `__init__`:
            n_clusters: false
    class `KMeans`:
        def `__init__`:
            k-means++: false
            'compute_silhouette_score is deprecated. Please use ': false
            sklearn.metrics.silhouette_score to compute silhouettes.: false
            compute_silhouette_score: false
    __main__: false
    iris: false
clustering/louvain.py:
    Louvain: false
    matrix_to_knn_graph: false
    def `matrix_to_knn_graph`:
        cosine: false
        euclidean: false
    class `LouvainMethod`:
        def `__init__`:
            l2: false
    class `Louvain`:
        def `__init__`:
            l2: false
    __main__: false
    iris: false
data/aggregate.py:
    class `OrangeTableGroupBy`:
        def `_compute_aggregation`:
            {col.name} - {name}: false
data/domain.py:
    DomainConversion: false
    Domain: false
    def `filter_visible`:
        hidden: false
    class `Domain`:
        def `__init__`:
            'descriptors must be instances of Variable, ': false
            not '%s': false
            All variables in the domain should have: false
            ' unique names.': false
            variables must be primitive: false
        def `__getstate__`:
            _variables: false
            _indices: false
            _hash: false
        def `from_numpy`:
            def `get_name`:
                {} {:0{}}: false
            X must be a 2-dimensional array: false
            Feature: false
            Y has invalid shape: false
            Class: false
            v1: false
            v2: false
            Target: false
            Meta: false
        def `__bool__`:
            Domain.__bool__ is ambiguous; use 'is None' or 'empty' instead: false
        def `__str__`:
            [: false
            ', ': false
            ' | ': false
            ]: false
            ' {': false
            }: false
        def `index`:
            "'%s' is not in domain": false
        def `convert`:
            invalid data length for domain: false
data/filter.py:
    IsDefined: false
    HasClass: false
    Random: false
    SameValue: false
    Values: false
    FilterDiscrete: false
    FilterContinuous: false
    FilterString: false
    FilterStringList: false
    FilterRegex: false
    class `Values`:
        def `__init__`:
            Filter with no conditions.: false
    class `FilterContinuous`:
        FilterContinuous: false
        Equal, NotEqual, Less, LessEqual, Greater,: false
        GreaterEqual, Between, Outside, IsDefined: false
        def `__call__`:
            invalid operator: false
        def `__str__`:
            feature({}): false
            =: false
            ≠: false
            <: false
            ≤: false
            >: false
            ≥: false
            {} {} {}: false
            {} ≤ {} ≤ {}: false
            not {} ≤ {} ≤ {}: false
            {} is defined: false
            invalid operator: false
    class `FilterString`:
        FilterString: false
        Equal, NotEqual, Less, LessEqual, Greater,: false
        GreaterEqual, Between, Outside, Contains, NotContain,: false
        StartsWith, NotStartsWith, EndsWith, NotEndsWith, IsDefined, NotIsDefined: false
        def `__init__`:
            min: false
            FilterContinuous got unexpected keyword arguments: false
        def `__call__`:
            invalid operator: false
data/instance.py:
    Instance: false
    class `Instance`:
        def `__setitem__`:
            Expected primitive value, got '%s': false
        def `str_values`:
            ', ': false
            , ...: false
        def `_str`:
            [: false
            ' | ': false
            ]: false
            ' {': false
            }: false
        def `__hash__`:
            "unhashable type: '{type(cls.__name__)}'": false
        def `_check_single_class`:
            Domain has no class variable: false
            Domain has multiple class variables: false
data/io.py:
    Flags: false
    FileFormat: false
    def `class_from_qualified_name`:
        .: false
    class `CSVReader`:
        .csv: false
        Comma-separated values: Vrednosti, ločene z ločilom
        ',;:\t$ ': false
        def `read`:
            us-ascii: false
            utf-8: false
            ignore: false
            rt: false
            'Skipped invalid byte(s) in position ': false
            {}{}: false
            -: false
            'Cannot parse dataset {}: {}': false
        def `write_file`:
            wt: false
            utf-8: false
    class `TabReader`:
        .tab: false
        .tsv: false
        Tab-separated values: Vrednosti, ločene s tabulatorjem
        \t: false
    class `PickleReader`:
        .pkl: false
        .pickle: false
        Pickled Orange data: Pickle s podatki
        def `read`:
            rb: false
            file does not contain a data table: Podatki ne vsebujejo tabele
        def `write_file`:
            wb: false
    class `BasketReader`:
        .basket: false
        .bsk: false
        Basket file: Datoteka s košarico
        def `read`:
            def `constr_vars`:
                utf-8: false
    class `_BaseExcelReader`:
        def `read`:
            -: false
            "Couldn't load spreadsheet from ": 'Ne morem prebrati preglednice iz '
    class `ExcelReader`:
        .xlsx: false
        Microsoft Excel spreadsheet: Excelova preglednica
        '#VALUE!': false
        '#DIV/0!': false
        '#REF!': false
        '#NUM!': false
        '#NULL!': false
        '#NAME?': false
        def `workbook`:
            ignore: false
            .*extension is not supported and will be removed.*: false
        def `write_file`:
            _w: false
    class `XlsReader`:
        .xls: false
        Microsoft Excel 97-2004 spreadsheet: Preglednica v Excelu 97-2004
    class `DotReader`:
        .dot: false
        .gv: false
        Dot graph description: false
        def `write_graph`:
            wt: false
        def `write`:
            tree: false
    class `UrlReader`:
        def `__init__`:
            http://: false
            def `quote_byte`:
                %{:02X}: false
            utf-8: false
        def `urlopen`:
            User-Agent: false
            Mozilla/5.0 (X11; Linux) Gecko/20100101 Firefox/: false
        def `read`:
            content-disposition: false
        def `_trim_googlesheet`:
            (?:https?://)?(?:www\.)?: false
            docs\.google\.com/spreadsheets/d/: false
            (?P<workbook_id>[-\w_]+): false
            (?:/.*?gid=(?P<sheet_id>\d+).*|.*)?: false
            workbook_id: false
            sheet_id: false
            https://docs.google.com/spreadsheets/d/{}/export?format=tsv: false
            &gid=: false
        def `_trim_googledrive`:
            drive.google.com: false
            /file/d/(?P<id>[^/]+).*: false
            id: false
            uc?export=download&id={id_}: false
        def `_trim_dropbox`:
            dropbox.com: false
            dl=1: false
        def `_suggest_filename`:
            [\\:/]: false
            _: false
            filename\*?=(?:\"|.{0,10}?'[^']*')([^\"]+): false
data/io_base.py:
    FileFormatBase: false
    Flags: false
    DataTableMixin: false
    PICKLE_PROTOCOL: false
    class `Flags`:
        ' ': false
        (?<!\\): false
        ^[a-zA-Z_]: false
        class: false
        c: false
        ignore: false
        i: false
        meta: false
        m: false
        weight: false
        w: false
        .+?=.*?: false
        ^({})$: false
        '|': false
        def `__init__`:
            =: false
            True: false
            False: false
            Invalid attribute flag \'{}\': false
        def `join`:
            \\: false
        def `split`:
            \\: false
    ^\s*[^\s]+(\s[^\s]+)+\s*$: false
    ^\s*({}|{}|)\s*$: false
    '|': false
    TYPE_HEADERS: false
    ^\s*( |{}|)*\s*$: false
    class `_TableHeader`:
        '#': false
    class `_TableBuilder`:
        def `__init__`:
            'Feature ': false
        def `_cont_column`:
            unsafe: false
            'Non-continuous value in (1-based) ': false
            line {row + offset + 1}, column {col + 1}: false
    class `DataTableMixin`:
        def `adjust_data_width`:
            F: false
            Columns with no headers were removed.: false
    class `_FileReader`:
        def `get_reader`:
            *: false
            No readers for file "{}": false
        def `set_table_metadata`:
            .metadata: false
            rb: false
            utf-8: false
            :: false
    class `_FileWriter`:
        def `write_table_metadata`:
            def `write_file`:
                w: false
                utf-8: false
                \n: false
                '{}: {}': false
                wb: false
            .metadata: false
            attributes: false
        def `header_names`:
            weights: false
        def `header_types`:
            continuous: false
        def `header_flags`:
            weight: false
            {}={}: false
            class: false
            meta: false
        def `write_data`:
            _w: false
    class `_FileFormatMeta`:
        def `__new__`:
            SUPPORT_COMPRESSED: false
            EXTENSIONS: false
            darwin: false
            win32: false
        def `_ext_to_attr_if_attr2`:
            EXTENSIONS: false
        def `names`:
            DESCRIPTION: false
            __class__: false
        def `writers`:
            write_file: false
        def `readers`:
            read: false
        def `img_writers`:
            "'{__name__}.FileFormat.img_writers' is no longer used and ": false
            'will be removed. Please use ': false
            "'Orange.widgets.io.FileFormat.img_writers' instead.": false
            write_image: false
        def `graph_writers`:
            write_graph: false
    class `FileFormatBase`:
        def `locate`:
            .: false
            *: false
            File "{}" was not found.: Datoteke "{}" ne najdem.
        def `qualified_name`:
            .: false
data/io_util.py:
    Compression: false
    open_compressed: false
    detect_encoding: false
    isnastr: false
    guess_data_type: false
    sanitize_variable: false
    update_origin: false
    class `Compression`:
        .gz: false
        .bz2: false
        .xz: false
    def `detect_encoding`:
        file: false
        --brief: false
        --mime-encoding: false
        utf-8: false
        us-ascii: false
        iso-8859-1: false
        utf-7: false
        utf-16le: false
        utf-16be: false
        ebcdic: false
        def `_from_file`:
            encoding: false
            confidence: false
            utf-8: false
        rb: false
        encoding: false
    def `isnastr`:
        unsafe: false
    def `guess_data_type`:
        unsafe: false
        _: false
    def `sanitize_variable`:
        def `get_number_of_decimals`:
            .: false
        def `mapvalues`:
            unsafe: false
        _: false
    def `_extract_new_origin`:
        origin: false
    def `update_origin`:
        origin: false
data/pandas_compat.py:
    table_from_frame: false
    table_to_frame: false
    class `OrangeDataFrame`:
        orange_variables: false
        orange_weights: false
        orange_attributes: false
        orange_role: false
        def `__init__`:
            orange_role: false
            _o: false
            csc: false
            copy: false
        def `__patch_constructor`:
            def `new_method`:
                pandas.DataFrame: false
        def `__finalize__`:
            concat: false
            merge: false
            orange_role: false
            orange_variables: false
            orange_weights: false
            orange_attributes: false
    def `_reset_index`:
        _o: false
    def `_convert_datetime`:
        def `col_type`:
            d: false
            now: false
        UTC: false
        now: false
        1s: false
        1970-01-01: false
    def `to_categorical`:
        category: false
    def `vars_from_df`:
        orange_role: false
        orange_variables: false
        category: false
        String variable must be in metas.: false
    def `table_from_frame`:
        orange_weights: false
        orange_attributes: false
        _o: false
    def `table_from_frames`:
        Indexes not equal. Make sure that all three dataframes have equal index: false
        'Leading dimension mismatch ': false
        (not {xdf.shape[0]} == {ydf.shape[0]} == {mdf.shape[0]}): false
        _o: false
    def `table_to_frame`:
        def `_column_to_series`:
            s: false
    def `amend_table_with_frame`:
        'Leading dimension mismatch ': false
        (not {arr.shape[0]} == {df.shape[0]}): false
data/table.py:
    dataset_dirs: false
    get_sample_datasets_dir: false
    RowInstance: false
    Table: false
    def `get_sample_datasets_dir`:
        ..: false
        datasets: false
    class `RowInstance`:
        def `__setitem__`:
            Expected primitive value, got '%s': false
        def `_str`:
            def `sp_values`:
                %s=%s: false
                ', ': false
                , ...: false
            [: false
            ' | ': false
            ]: false
            ' {': false
            }: false
    class `Columns`:
        def `__init__`:
            ' ': false
            _: false
    def `_compute_column`:
        {type(col)} must return a column, not {col.ndim}d array: false
    class `_ArrayConversion`:
        def `_can_copy_all`:
            X: false
            metas: false
            Y: false
        def `get_subarray`:
            X: false
            metas: false
            Y: false
        def `init_partial_results`:
            F: false
    class `_FromTableConversion`:
        def `__init__`:
            X: false
            Y: false
            metas: false
        def `convert`:
            X: false
            Y: false
            metas: false
    class `Table`:
        untitled: nepoimenovano
        def `_check_unlocked`:
            Table is read-only unless unlocked: false
        def `__setstate__`:
            X: false
            W: false
            metas: false
            _Y: false
            Y: false
        def `__getstate__`:
            X: false
            metas: false
            W: false
            _: false
            _Y: false
            _unlocked: false
        def `_lock_parts_val`:
            X: false
            Y: false
            metas: false
            weights: false
        def `_lock_parts_ref`:
            X: false
            Y: false
            metas: false
            weights: false
        def `_update_locks`:
            Unsupported sparse data type: false
        def `unlocked`:
            "'{name}' is a view into another table ": false
            and cannot be unlocked: false
        def `__new__`:
            def `warn_deprecated`:
                "Direct calls to Table's constructor are deprecated ": false
                'and will be removed. Replace this call with ': false
                Table.{method}: false
            Table() must not be called directly: false
            'Table(name: str) expects just one argument': false
            https://: false
            http://: false
            'Table(table: Table) expects just one argument': false
            from_domain: false
            from_table: false
            from_list: false
            'Omitting domain in a call to Table(X, Y, metas), is ': false
            'deprecated and will be removed. ': false
            Call Table.from_numpy(None, X, Y, metas) instead.: false
        def `from_table`:
            name: false
            attributes: false
        def `from_table_rows`:
            name: false
            attributes: false
        def `from_numpy`:
            float64: false
            Invalid number of variable columns ({} != {}): false
            'Invalid number of class columns ': false
            (1 != {len(domain.class_vars)}): false
            Invalid number of class columns ({} != {}): false
            Invalid number of meta attribute columns ({} != {}): false
            Parts of data contain different numbers of rows.: false
        def `from_list`:
            mismatching number of instances and weights: false
        def `save`:
            Writing of {}s is not supported: false
            Unknown file name extension.: false
        def `_set_row`:
            invalid length: false
        def `__getitem__`:
            Table indices must be one- or two-dimensional: false
        def `__setitem__`:
            Table indices must be one- or two-dimensional: false
            'Setting multiple values requires a ': false
            sequence or numpy array: false
            Invalid number of values: false
            Ordinary attributes can only have primitive values: false
        def `__str__`:
            [: false
            ',\n ': false
            ]: false
        def `__repr__`:
            [: false
            ',\n ': false
            ,\n ...: false
            \n]: false
        def `concatenate`:
            invalid axis: false
            "'ignore_domains' is incompatible with 'axis=1'": false
            need at least one table to concatenate: false
            attributes: false
            untitled: nepoimenovano
        def `_concatenate_vertical`:
            concatenated tables must have the same domain: false
            X: false
            Y: false
            metas: false
            W: false
        def `_concatenate_horizontal`:
            domain: false
            W: false
            X: false
            Y: false
            metas: false
            attributes: false
            class_vars: false
        def `X_density`:
            _X_density: false
        def `Y_density`:
            _Y_density: false
        def `metas_density`:
            _metas_density: false
        def `shuffle`:
            Rows of sparse data cannot be shuffled: false
        def `get_column_view`:
            Table.get_column (or Table.set_column if you must): false
            'get_column_view is returning a dense copy column ': false
            {index}: false
            'get_column_view is returning a mapped copy of ': false
            column {index.name}: false
        def `get_column`:
            variable {index.name} is not in domain: false
        def `set_column`:
            'cannot set data for variable {index.name} ': false
            with different encoding: false
        def `_filter_to_indicator`:
            def `get_col_indices`:
                Discrete filter can't be applied across rows: false
                Invalid filter: false
            def `col_filter`:
                Invalid filter: false
        def `_range_filter_to_indicator`:
            ignore: false
            Invalid operator: false
        def `_compute_contingency`:
            No row variable: false
            Row variable must be discrete: false
            'Contingency can be computed only for categorical ': false
            and numeric values.: false
            f: false
        def `transpose`:
            Feature name: Ime spremenljivke
            Feature: false
            Transposing...: false
            old_domain: false
            {feature_name} {i:0{places}}: false
        def `groupby`:
            OrangeTableGroupBy: false
    def `_check_arrays`:
        def `ninstances`:
            shape: false
        Leading dimension mismatch (%d != %d): false
        Array contains infinity.: false
    def `_check_inf`:
        AllFloat: false
    def `_optimize_indices`:
        boolean indices did not match dimension: false
data/util.py:
    (^{})( \((\d{{1,}})\))?$: false
    def `one_hot`:
        dim must be greater than max(values): false
    class `SharedComputeValue`:
        def `__init__`:
            '{type(compute_shared).__name__} should define ': false
            __eq__ and __hash__ to be used for compute_shared: false
    def `get_unique_names`:
        {name} ({indices[name]}): false
        {name} ({max_index}): false
    def `get_unique_names_duplicates`:
        {name} ({next(indices[name])}): false
    def `sanitized_name`:
        \W: false
        _: false
    def `redefines_eq_and_hash`:
        __hash__: false
        __eq__: false
data/variable.py:
    Unknown: false
    MISSING_VALUES: false
    make_variable: false
    is_discrete_values: false
    Value: false
    Variable: false
    ContinuousVariable: false
    DiscreteVariable: false
    StringVariable: false
    TimeVariable: false
    nan: false
    ?: false
    .: false
    NA: false
    ~: false
    class `Value`:
        variable: false
        _value: false
        def `_as_values_primitive`:
            Value: false
        def `_as_values_non_primitive`:
            Value: false
        def `__repr__`:
            Value('%s', %s): false
        def `__contains__`:
            invalid operation on Value(): false
        def `__hash__`:
            unhashable type - cannot hash values of discrete variables!: false
        def `__getstate__`:
            _value: false
        def `__setstate__`:
            value: false
    class `Variable`:
        def `__init__`:
            Variable must have a name: false
            InheritEq: false
            '{type(compute_value).__name__} should define ': false
            __eq__ and __hash__ to be used for compute_value\n: false
            or set InheritEq = True if inherited methods suffice: false
        def `_clear_cache`:
            _clear_cache is no longer needed and thus deprecated: false
        def `_clear_all_caches`:
            _clear_all_caches is no longer needed and thus deprecated: false
        def `repr_val`:
            variable descriptors must overload repr_val(): false
        def `to_val`:
            primitive variable descriptors must overload to_val(): false
        def `__reduce__`:
            Variables without names cannot be pickled: false
    class `ContinuousVariable`:
        continuous: false
        c: false
        numeric: false
        n: false
        def `number_of_decimals`:
            %g: false
            %.{}f: false
        def `repr_val`:
            ?: false
            %g: false
            {val:.{self._number_of_decimals + 2}f}: false
        def `copy`:
            number_of_decimals: false
    class `DiscreteVariable`:
        discrete: false
        d: false
        categorical: false
        def `__init__`:
            values of DiscreteVariables must be strings: false
        def `get_mapper_from`:
            def `mapper`:
                In-place mapping of sparse matrices must map 0 to 0: false
                In-place column mapping requires a 2d array or: false
                a csc or csr matrix.: false
                Column mapping can't map {value.ndim}-d objects: false
                "Column mapping can't map ": false
                {value.ndim}-dimensional objects: false
                'invalid type for value(s): {type(value).__name__}': false
        def `to_val`:
            Cannot convert {} to value of "{}": false
            Value {s} does not exist: false
        def `add_value`:
            values of DiscreteVariables must be strings: false
        def `repr_val`:
            ?: false
            {}: false
        def `__reduce__`:
            Variables without names cannot be pickled: false
            _values: false
        def `copy`:
            number of values must match the number of original values: false
    class `StringVariable`:
        string: false
        s: false
        text: false
        def `str_val`:
            ?: false
        def `repr_val`:
            '"{}"': false
    class `TimeVariable`:
        time: false
        t: false
        %Y-%m-%d %H:%M:%S%z: false
        %Y-%m-%d %H:%M:%S: false
        %Y-%m-%d %H:%M: false
        %Y-%m-%dT%H:%M:%S%z: false
        %Y-%m-%dT%H:%M:%S: false
        %Y-%m-%d: false
        %Y-%m-%d %H:%M:%S.%f: false
        %Y-%m-%dT%H:%M:%S.%f: false
        %Y-%m-%d %H:%M:%S.%f%z: false
        %Y-%m-%dT%H:%M:%S.%f%z: false
        %Y%m%dT%H%M%S%z: false
        %Y%m%d%H%M%S%z: false
        %H:%M:%S.%f: false
        %H:%M:%S: false
        %H:%M: false
        %Y%m%dT%H%M%S: false
        %Y%m%d%H%M%S: false
        %Y%m%d: false
        %Y%j: false
        %Y: false
        %H%M%S.%f: false
        %Y-%m: false
        %Y-%j: false
        ^(: false
        \d{1,4}-\d{2}-\d{2}([ T]\d{2}:\d{2}(:\d{2}(\.\d+)?([+-]\d{4})?)?)?|: false
        \d{1,4}\d{2}\d{2}(T?\d{2}\d{2}\d{2}([+-]\d{4})?)?|: false
        \d{2}:\d{2}(:\d{2}(\.\d+)?)?|: false
        \d{2}\d{2}\d{2}\.\d+|: false
        \d{1,4}(-?\d{2,3})?: false
        )$: false
        2021-11-25: false
        25.11.2021: false
        %d.%m.%Y: false
        %d. %m. %Y: false
        25.11.21: false
        %d.%m.%y: false
        %d. %m. %y: false
        11/25/2021: false
        %m/%d/%Y: false
        11/25/21: false
        %m/%d/%y: false
        20211125: false
        2021-11-25 00:00:00: false
        %Y-%m-%d %H:%M%z: false
        25.11.2021 00:00:00: false
        %d.%m.%Y %H:%M: false
        %d. %m. %Y %H:%M: false
        %d.%m.%Y %H:%M:%S: false
        %d. %m. %Y %H:%M:%S: false
        %d.%m.%Y %H:%M:%S.%f: false
        %d. %m. %Y %H:%M:%S.%f: false
        25.11.21 00:00:00: false
        %d.%m.%y %H:%M: false
        %d. %m. %y %H:%M: false
        %d.%m.%y %H:%M:%S: false
        %d. %m. %y %H:%M:%S: false
        %d.%m.%y %H:%M:%S.%f: false
        %d. %m. %y %H:%M:%S.%f: false
        11/25/2021 00:00:00: false
        %m/%d/%Y %H:%M: false
        %m/%d/%Y %H:%M:%S: false
        %m/%d/%Y %H:%M:%S.%f: false
        11/25/21 00:00:00: false
        %m/%d/%y %H:%M: false
        %m/%d/%y %H:%M:%S: false
        %m/%d/%y %H:%M:%S.%f: false
        20211125000000: false
        %Y%m%d%H%M: false
        %Y%m%d%H%M%S.%f: false
        00:00:00: false
        000000: false
        %H%M: false
        %H%M%S: false
        2021: false
        11-25: false
        %m-%d: false
        25.11.: false
        %d.%m.: false
        %d. %m.: false
        11/25: false
        %m/%d: false
        1125: false
        %m%d: false
        class `InvalidDateTimeFormatError`:
            def `__init__`:
                Invalid datetime format '{date_string}'. Only ISO 8601 supported.: Napačna oblika datuma oz. ure '{date_string}'. Podprt je samo standard ISO 8601.
        def `timezone`:
            different timezones: false
        def `_tzre_sub`:
            ([+-])(\d\d):(\d\d)$: false
            +00:00: false
            -00:00: false
            \1\2\3: false
        def `repr_val`:
            ?: false
        def `parse`:
            Z: false
data/sql/filter.py:
    class `IsDefinedSql`:
        def `to_sql`:
            ' AND ': false
            %s IS NOT NULL: false
            NOT (%s): false
    class `SameValueSql`:
        def `to_sql`:
            %s IS NULL: false
            %s = %s: false
            NOT (%s): false
            (NOT (%s) OR %s is NULL): false
    class `ValuesSql`:
        def `to_sql`:
            ' AND ': false
            ' OR ': false
            NOT (%s): false
            ({}): false
    class `FilterDiscreteSql`:
        def `to_sql`:
            %s IN (%s): false
            ,: false
            %s IS NOT NULL: false
    class `FilterContinuousSql`:
        def `to_sql`:
            %s = %s: false
            %s <> %s OR %s IS NULL: false
            %s < %s: false
            %s <= %s: false
            %s > %s: false
            %s >= %s: false
            %s >= %s AND %s <= %s: false
            (%s < %s OR %s > %s): false
            %s IS NOT NULL: false
            Invalid operator: false
    class `FilterString`:
        def `to_sql`:
            %s IS NOT NULL: false
            LOWER(%s): false
            %s = %s: false
            %s <> %s OR %s IS NULL: false
            %s < %s: false
            %s <= %s: false
            %s > %s: false
            %s >= %s: false
            %s >= %s AND %s <= %s: false
            (%s < %s OR %s > %s): false
            %s LIKE '%%%s%%': false
            %s LIKE '%s%%': false
            %s LIKE '%%%s': false
            Invalid operator: false
    class `FilterStringList`:
        def `to_sql`:
            LOWER(%s) in (%s): false
            %s in (%s): false
            ', ': false
    def `quote`:
        "'%s'": false
    class `CustomFilterSql`:
        def `to_sql`:
            (: false
            ): false
            NOT (: false
data/sql/table.py:
    sql_log: false
    'Logging started: {}': false
    %Y-%m-%d %H:%M:%S: false
    class `SqlTable`:
        def `__init__`:
            No backend could connect to server: false
            select: false
            (%s) as my_table: false
            '; ': false
        def `connection_params`:
            Use backend.connection_params: false
        def `__getitem__`:
            Table indices must be one- or two-dimensional: false
            Row indices must be integers.: false
        def `_fetch_row`:
            Could not retrieve row {} from table {}: false
        def `_query`:
            to_sql: false
            Cannot use ordinary attributes with sql backend: false
            (%s) AS "%s": false
            No fields selected.: false
            *: false
        def `__bool__`:
            1: false
        def `_count_rows`:
            COUNT(*): false
        def `approx_len`:
            *: false
        def `download_data`:
            Too many rows to download the data into memory.: false
        def `_get_distributions`:
            COUNT(%s): false
            %s IS NOT NULL: false
        def `_compute_contingency`:
            'Contingency for multiple columns ': false
            has not yet been implemented.: false
            Defaults have not been implemented yet: false
            Row variable must be discrete: false
            'contingency can be computed only for discrete ': false
            and continuous values: false
            COUNT(%s): false
            %s IS NOT NULL: false
        def `_filter_same_value`:
            "'%s'": false
        def `_filter_values`:
            "'%s'": false
            Invalid condition %s: false
        'SUM(CASE TRUE WHEN %(field_name)s IS NULL THEN 1 ': false
        'ELSE 0 END), ': false
        'SUM(CASE TRUE WHEN %(field_name)s IS NULL THEN 0 ': false
        ELSE 1 END): false
        'MIN(%(field_name)s)::double precision, ': false
        'MAX(%(field_name)s)::double precision, ': false
        'AVG(%(field_name)s)::double precision, ': false
        'STDDEV(%(field_name)s)::double precision, ': false
        def `sample_percentage`:
            system: false
        def `sample_time`:
            system_time: false
        def `_sample`:
            ,: false
            Sampling of complex queries is not supported: false
            .: false
            __%s_%s_%s: false
            _: false
            -: false
            'SELECT * FROM ': false
            ' LIMIT 0;': false
            'DROP TABLE ': false
            ' ': false
            CREATE TABLE: false
            AS: false
            SELECT * FROM: false
            TABLESAMPLE: false
            (: false
            ): false
            ANALYZE: false
        def `_execute_sql_query`:
            Use backend.execute_sql_query: false
        def `__get_nan_frequency`:
            ' + ': false
            COUNT(*) - COUNT({col.to_sql()}): false
data/sql/backend/base.py:
    class `Backend`:
        def `list_tables`:
            {}.{}: false
        def `get_fields`:
            *: false
data/sql/backend/mssql.py:
    class `PymssqlBackend`:
        SQL Server: false
        def `__init__`:
            server: false
            host: false
            Incorrect format of connection details: false
        def `list_tables_query`:
            "
        SELECT [TABLE_SCHEMA], [TABLE_NAME]
          FROM information_schema.tables
         WHERE TABLE_TYPE in ('VIEW' ,'BASE TABLE')
      ORDER BY [TABLE_NAME]
        ": false
        def `quote_identifier`:
            [{}]: false
        def `create_sql_query`:
            SELECT: false
            TOP: false
            ', ': false
            FROM: false
            TABLESAMPLE system_time(%i): false
            WHERE: false
            ' AND ': false
            GROUP BY: false
            AS: false
            ORDER BY: false
            ,: false
            OFFSET: false
            ROWS: false
            FETCH FIRST: false
            ROWS ONLY: false
            ' ': false
        def `create_variable`:
            DATEDIFF(s, '1970-01-01 00:00:00', {}): false
        StatementEstRows="(\d+)": false
        def `count_approx`:
            SET SHOWPLAN_XML ON: false
            SET SHOWPLAN_XML OFF: false
            SHOWPLAN permission denied: false
            SHOWPLAN permission denied, count approximates will not be used: false
        def `distinct_values_query`:
            {field}, Cast({field} as binary), DATALENGTH({field}): false
data/sql/backend/postgres.py:
    tsm_system_time: false
    quantile: false
    class `Psycopg2Backend`:
        PostgreSQL: false
        def `_create_extensions`:
            CREATE EXTENSION IF NOT EXISTS {}: false
            Database is missing extension {}: false
        def `create_sql_query`:
            SELECT: false
            ', ': false
            FROM: false
            TABLESAMPLE system_time(%i): false
            WHERE: false
            ' AND ': false
            GROUP BY: false
            ORDER BY: false
            ,: false
            OFFSET: false
            LIMIT: false
            ' ': false
        def `execute_sql_query`:
            utf-8: false
            'Executing: %s': false
            '%.2f ms: %s': false
        def `quote_identifier`:
            '"%s"': false
        def `unquote_identifier`:
            '"': false
        def `list_tables_query`:
            AND n.nspname = '{}': false
            AND pg_catalog.pg_table_is_visible(c.oid): false
            "SELECT n.nspname as ""Schema"",
                          c.relname AS ""Name""
                       FROM pg_catalog.pg_class c
                  LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
                      WHERE c.relkind IN ('r','v','m','S','f','')
                        AND n.nspname <> 'pg_catalog'
                        AND n.nspname <> 'information_schema'
                        AND n.nspname !~ '^pg_toast'
                        {}
                        AND NOT c.relname LIKE '\\_\\_%'
                   ORDER BY 1;": false
        def `create_variable`:
            extract(epoch from {}): false
            ({})::double precision: false
            ({})::text: false
        def `_guess_variable`:
            false: false
            true: false
        def `count_approx`:
            'EXPLAIN ': false
            rows=(\d*): false
        def `__getstate__`:
            connection_pool: false
datasets/list_update.py:
    iris_url: false
    https://raw.githubusercontent.com/biolab/orange3/master/Orange/datasets/iris.tab: false
    def `data_info`:
        name: false
        location: false
        rows: false
        features: false
        discrete: false
        continuous: false
        meta: false
        missing: false
        target: false
        type: false
        values: false
    __main__: false
    .: false
    .tab: false
    datasets.info: false
    w: false
distance/base.py:
    class `Distance`:
        def `__new__`:
            {cls.__name__} does not compute similarity: false
            domain: false
            is_sparse: false
            fallback: false
            cosine: false
        def `check_no_discrete`:
            columns with discrete values are incommensurable: stolpci kategoričnih vrednosti niso primerljivi
    class `DistanceModel`:
        def `__call__`:
            Two tables cannot be compared by columns: Razdalj med dvema tabelama ni možno računati po stolpcih.
            ignore: false
    class `FittedDistanceModel`:
        def `__call__`:
            mismatching domains: false
    class `FittedDistance`:
        def `fit`:
            domain: false
        def `fit_rows`:
            normalize: false
distance/distance.py:
    class `EuclideanRowsModel`:
        def `compute_distances`:
            ignore: false
    class `EuclideanColumnsModel`:
        def `compute_distances`:
            ignore: false
    class `Euclidean`:
        euclidean: false
        def `fit_cols`:
            def `nowarn`:
                Mean of empty slice: false
                Degrees of freedom <= 0 for slice: false
                some columns have no defined values: nekateri stolpci nimajo znanih vrednosti
            warnings.warn: false
            some columns are constant: nekateri stolpci so konstantni
    class `Manhattan`:
        manhattan: false
        def `fit_cols`:
            'some columns have zero absolute distance from median, ': 'nekateri stolpci so konstantni '
            or no values: ali pa nimajo nobene znane vrednosti
    class `Cosine`:
        cosine: false
    def `_corrcoef2`:
        Invalid axis {} (only 0 or 1 accepted): false
    def `check_non_negative`:
        Bhattcharyya distance requires non-negative values: false
    class `Mahalanobis`:
        def `fit`:
            Covariance matrix is too large.: Kovariančna matrika je prevelika.
            Computation of inverse covariance matrix failed.: Izračun inverza kovariančne matrike ni uspel.
    class `MahalanobisModel`:
        def `compute_distances`:
            Incorrect number of features.: false
            mahalanobis: false
    class `MahalanobisDistance`:
        def `__new__`:
            Mahalanobis: false
    class `HammingColumnsModel`:
        def `compute_distances`:
            hamming: false
    class `HammingRowsModel`:
        def `compute_distances`:
            hamming: false
ensembles/ada_boost.py:
    SklAdaBoostClassificationLearner: false
    SklAdaBoostRegressionLearner: false
    def `base_estimator_deprecation`:
        '`base_estimator` is deprecated (to be removed in 3.39): use `estimator` instead.': false
    class `SklAdaBoostClassificationLearner`:
        def `__init__`:
            SAMME.R: false
            deprecated: false
    class `SklAdaBoostRegressionLearner`:
        def `__init__`:
            linear: false
            deprecated: false
ensembles/stack.py:
    StackedLearner: false
    StackedClassificationLearner: false
    StackedRegressionLearner: false
    StackedFitter: false
    class `StackedLearner`:
        def `fit_storage`:
            f{}: false
    class `StackedFitter`:
        classification: false
        regression: false
        def `__init__`:
            learners: false
    __main__: false
    iris: false
    housing: false
evaluation/clustering.py:
    ClusteringEvaluation: false
    class `ClusteringResults`:
        def `get_fold`:
            This 'Results' instance does not have folds.: false
    class `ClusteringEvaluation`:
        def `__call__`:
            Y: false
    def `graph_silhouette`:
        g: false
        b: false
        Number of colors does not match the number of clusters. \n: false
        Silhouette score: false
        Cluster label: false
evaluation/performance_curves.py:
    class `Curves`:
        def `from_results`:
            "Argument 'model_index' is required when ": false
            there are multiple models: false
            "Argument 'target_class' is required when the ": false
            class is not binary: false
evaluation/scoring.py:
    CA: false
    Precision: false
    Recall: false
    F1: false
    PrecisionRecallFSupport: false
    AUC: false
    MSE: false
    RMSE: false
    MAE: false
    MAPE: false
    R2: false
    LogLoss: false
    MatthewsCorrCoefficient: false
    class `ScoreMetaType`:
        def `__new__`:
            registry: false
            abstract: false
            name: false
            long_name: false
    class `CA`:
        CA: Točnost
        Classification accuracy: Klasifikacijska točnost
    class `TargetScore`:
        def `compute_score`:
            binary: false
            'Multiclass data: specify target class or select ': false
            averaging ('weighted', 'macro', 'micro'): false
    class `Precision`:
        Prec: Natančnost
        Precision: Natančnost
    class `Recall`:
        Recall: Priklic
    class `F1`:
        F1: F1
    class `AUC`:
        AUC: AUC
        Area under ROC curve: Površina pod krivuljo ROC
        def `calculate_weights`:
            Class variable has less than two values: Ciljna spremenljivka ima manj kot dve vrednosti
        def `compute_score`:
            Class variable has less than two values: Ciljna spremenljivka ima manj kot dve vrednosti
    class `LogLoss`:
        LogLoss: Log Izguba
        Logistic loss: Logistična izguba
        def `compute_score`:
            auto: False
            '`LogLoss.compute_score`: eps parameter is unused. ': False
            It will always have value of `np.finfo(y_pred.dtype).eps`.: False
    class `Specificity`:
        Spec: true
        Specificity: Specifičnost
        def `compute_score`:
            binary: false
            weighted: false
            'Binary averaging needs two classes in data: ': 'Binarno uteževanje zahteva dva razreda: '
            'specify target class or use ': 'določite ciljni razred ali pa uporabite '
            weighted averaging.: uteženo povprečenje.
            'Wrong parameters: For averaging select one of the ': false
            "following values: ('weighted', 'binary')": false
    class `MatthewsCorrCoefficient`:
        MCC: true
        Matthews correlation coefficient: Matthewov koeficient korelacije
    class `MSE`:
        MSE: true
        Mean square error: Povprečne kvadratna napaka
    class `RMSE`:
        RMSE: true
        Root mean square error: Koren povprečne kvadratne napake
    class `MAE`:
        MAE: true
        Mean absolute error: Povprečna absolutna napaka
    class `MAPE`:
        MAPE: true
        Mean absolute percentage error: Povprečna absolutna odstotna napaka
    class `R2`:
        R2: true
        # Je to OK?
        Coefficient of determination: Koeficient determiniranosti
    class `CVRMSE`:
        CVRMSE: true
        Coefficient of variation of the RMSE: Koeficient variacije RMSE
        def `compute_score`:
            Mean value is too small: Povprečna vrednost je premajhna
evaluation/testing.py:
    Results: false
    CrossValidation: false
    LeaveOneOut: false
    TestOnTrainingData: false
    ShuffleSplit: false
    TestOnTestData: false
    sample: false
    CrossValidationFeature: false
    _MpResults: false
    fold_i: false
    learner_i: false
    model: false
    failed: false
    n_values: false
    values: false
    probs: false
    train_time: false
    test_time: false
    def `_mp_worker`:
        Test fold is empty: false
    class `Results`:
        def `__init__`:
            mismatching domain: false
            mismatching number of rows: false
            regression results cannot have non-None 'nclasses': false
            regression results cannot have 'probabilities': false
            mismatching number of class values: false
            mismatching number of methods: false
        def `get_fold`:
            This 'Results' instance does not have folds.: false
        def `get_augmented_data`:
            {name} ({value}): false
            Fold: false
        def `split_by_model`:
            probabilities: false
    class `Validation`:
        def `__new__`:
            learners and train_data must both be present or not: false
            'preprocessor cannot be given if learners ': false
            and train_data are omitted: false
            'callback cannot be given if learners ': false
            "calling Validation's constructor with data and learners ": false
            is deprecated;\nconstruct an instance and call it: false
            test_data: false
        def `fit`:
            Validation.fit is deprecated; use the call operator: false
    class `CrossValidation`:
        def `get_indices`:
            Using non-stratified sampling.: false
    class `CrossValidationFeature`:
        def `get_indices`:
            "'{self.feature.name}' does not have at least two distinct ": false
            values on the data: false
    class `TestOnTestData`:
        def `__new__`:
            train_data: false
            argument 'data' is given twice (once as 'train_data'): false
    class `TestOnTrainingData`:
        def `__call__`:
            test_data: false
misc/__init__.py:
    def `import_late_warning`:
        class `Warn`:
            def `__getattr__`:
                Install package ': false
                "' to use this functionality.": false
misc/_distmatrix_xlsx.py:
    def `_get_sheet`:
        'No such sheet: {sheet_name}': Zavihek {sheet_name} ne obstaja.
    def `_non_empty_cells`:
        def `raise_empty`:
            empty sheet: prazen zavihek
    def `_get_labels`:
        ?: false
    def `_matrix_from_cells`:
        'invalid data in cell ': 'neveljaven podatek v celici '
        {openpyxl.utils.get_column_letter(x + col_offset + 1)}: false
        {y + row_offset + 1}: false
    def `write_matrix`:
        DistMatrix: false
misc/collections.py:
    class `frozendict`:
        def `clear`:
            FrozenDict does not support method 'clear': false
        def `pop`:
            FrozenDict does not support method 'pop': false
        def `popitem`:
            FrozenDict does not support method 'popitem': false
        def `setdefault`:
            FrozenDict does not support method 'setdefault': false
        def `update`:
            FrozenDict does not support method 'update': false
        def `__setitem__`:
            FrozenDict does not allow setting elements: false
        def `__delitem__`:
            FrozenDict does not allow deleting elements: false
    def `natural_sorted`:
        def `natural_keys`:
            (\d+): false
    class `DictMissingConst`:
        __missing: false
        def `__reduce_ex__`:
            __dict__: false
        def `__repr__`:
            {type(self).__qualname__}({self.missing!r}, {dict(self)!r}): false
misc/datasets.py:
    class `_DatasetInfo`:
        def `__init__`:
            ../datasets: false
            datasets.info: false
            r: false
misc/distmatrix.py:
    class `DistMatrix`:
        def `__array_finalize__`:
            row_items: false
            col_items: false
            axis: false
        def `from_file`:
            .xlsx: false
        def `_labels_to_tables`:
            label: false
        def `_from_dst`:
            empty file: prazna datoteka
            distance file must begin with dimension: datoteka se mora začeti z dimenzijo matrike
            labelled: false
            labeled: false
            row_labels: false
            col_labels: false
            symmetric: false
            asymmetric: false
            =: false
            axis: false
            invalid flag '{flag}': false
            \t: false
            'mismatching number of column labels, ': 'napačno število oznak stolpcev, '
            {len(col_labels)} != {n}: false
            def `num_or_lab`:
                "'{labels[n]}'": false
            too many rows: preveč vrstic
            'too many columns in matrix row ': 'preveč stolpcev v vrstici '
            {num_or_lab(i, row_labels)}: false
            'invalid element at ': 'napačna vrednost v '
            'row {num_or_lab(i, row_labels)}, ': 'vrstici {num_or_lab(i, row_labels)}, '
            column {num_or_lab(j, col_labels)}: stolpcu {num_or_lab(j, col_labels)}
        def `save`:
            .xlsx: false
        def `_save_dst`:
            {n}\taxis={self.axis}: false
            \tcol_labels: false
            \trow_labels: false
            \tasymmetric: false
            wt: false
            utf-8: false
            \n: false
            \t: false
misc/environ.py:
    def `_get_parsed_config`:
        .: false
        data: false
        home: false
        ~/: false
        prefix: false
        name: false
        Orange: false
        version: false
        version.major: false
        version.minor: false
        version.micro: false
        etc/orangerc.conf: false
        utf-8: false
        paths: false
    def `get_path`:
        paths: false
    def `_default_data_dir_base`:
        darwin: false
        ~/Library/Application Support: false
        win32: false
        APPDATA: false
        ~/AppData/Local: false
        posix: false
        XDG_DATA_HOME: false
        ~/.local/share: false
    def `data_dir_base`:
        data_dir_base: false
    def `data_dir`:
        Orange: false
    def `widget_settings_dir`:
        "'{__name__}.widget_settings_dir' is deprecated.": false
    def `_default_cache_dir`:
        darwin: false
        ~/Library/Caches: false
        win32: false
        APPDATA: false
        ~/AppData/Local: false
        posix: false
        XDG_CACHE_HOME: false
        ~/.cache: false
        Orange: false
        Cache: false
    def `cache_dir`:
        cache_dir: false
misc/lazy_module.py:
    class `_LazyModule`:
        def `_do_import`:
            Orange.: false
            Orange: false
misc/openpyxl_patch.py:
    def `read_worksheets`:
        "Cell '{0}':{1} is part of a merged range but has a comment which will ": false
        be removed because merged cells cannot contain any data.: false
        chartsheet: false
misc/server_embedder.py:
    TaskItem: false
    id: false
    item: false
    no_repeats: false
    class `ServerEmbedderCommunicator`:
        def `__init__`:
            ORANGE_EMBEDDING_API_URL: false
            error-reporting/machine-id: false
        def `_init_workers`:
            Created %d workers: false
        def `_cancel_workers`:
            Canceling workers: false
            All workers canceled: false
        def `_send_to_server`:
            Embedding %s: false
            'Sending to the server: %s': false
            /{self.embedder_type}/{self._model}?machine={self.machine_id}: false
            &session={self.session_id}&retry={num_repeats+1}: false
            'Successfully embedded:  %s': false
            'Embedding unsuccessful - reading to queue:  %s': false
        def `_send_request`:
            Content-Type: false
            Content-Length: false
            Read timeout: false
            Network error: false
            Embedding error: false
        def `_parse_response`:
            utf-8: false
            embedding: false
misc/wrapper_meta.py:
    class `WrapperMeta`:
        def `__new__`:
            __wraps__: false
            __wrapped__: false
            '
A wrapper for `${sklname}`. The following is its documentation:

${skldoc}
            ': false
            {}.{}: false
            Attributes\n---------: false
            Examples\n--------: false
            Parameters\n---------: false
            ${sklname}: false
            ${skldoc}: false
misc/tests/example_embedder.py:
    class `ExampleServerEmbedder`:
        def `__init__`:
            image/jpeg: false
        def `_encode_data_instance`:
            big: false
misc/utils/embedder_utils.py:
    class `EmbedderCache`:
        {:s}_embeddings.pickle: false
        def `save_pickle`:
            wb: false
            Can't save embedding to %s due to %s.: false
        def `load_pickle`:
            rb: false
            Can't load embedding from %s due to %s.: false
    def `get_proxies`:
        def `add_scheme`:
            ://: false
            http://{url}: false
        http_proxy: false
        https_proxy: false
        http://: false
        https://: false
modelling/ada_boost.py:
    SklAdaBoostLearner: false
    class `SklAdaBoostLearner`:
        classification: false
        regression: false
modelling/base.py:
    class `Fitter`:
        classification: false
        regression: false
        def `__init__`:
            preprocessors: false
        def `get_learner`:
            No learner to handle '{}': false
        def `supports_weights`:
            supports_weights: false
        def `params`:
            'A fitter does not have its own params. If you need to access ': false
            learner params, please use the `get_params` method.: false
modelling/catgb.py:
    CatGBLearner: false
    class `CatGBLearner`:
        Gradient Boosting (catboost): true
        classification: false
        regression: false
modelling/constant.py:
    ConstantLearner: false
    class `ConstantLearner`:
        classification: false
        regression: false
modelling/gb.py:
    GBLearner: false
    class `GBLearner`:
        Gradient Boosting (scikit-learn): true
        classification: false
        regression: false
modelling/knn.py:
    KNNLearner: false
    class `KNNLearner`:
        classification: false
        regression: false
modelling/linear.py:
    SGDLearner: false
    class `SGDLearner`:
        sgd: false
        classification: false
        regression: false
        def `_change_kwargs`:
            loss: false
            classification_loss: false
            epsilon: false
            classification_epsilon: false
            regression_loss: false
            regression_epsilon: false
modelling/neural_network.py:
    NNLearner: false
    class `NNLearner`:
        classification: false
        regression: false
modelling/randomforest.py:
    RandomForestLearner: false
    class `RandomForestLearner`:
        random forest: false
        classification: false
        regression: false
modelling/svm.py:
    SVMLearner: false
    LinearSVMLearner: false
    NuSVMLearner: false
    class `SVMLearner`:
        classification: false
        regression: false
    class `LinearSVMLearner`:
        classification: false
        regression: false
    class `NuSVMLearner`:
        classification: false
        regression: false
modelling/tree.py:
    SklTreeLearner: false
    TreeLearner: false
    class `SklTreeLearner`:
        tree: drevo
        classification: false
        regression: false
    class `TreeLearner`:
        tree: drevo
        classification: false
        regression: false
modelling/xgb.py:
    XGBLearner: false
    XGBRFLearner: false
    class `XGBLearner`:
        Extreme Gradient Boosting (xgboost): true
        classification: false
        regression: false
    class `XGBRFLearner`:
        Extreme Gradient Boosting Random Forest (xgboost): true
        classification: false
        regression: false
preprocess/continuize.py:
    DomainContinuizer: false
    class `DomainContinuizer`:
        def `__call__`:
            def `transform_discrete`:
                {}={}: false
            data has multinomial attributes: false
            continuizer requires data: false
preprocess/discretize.py:
    EqualFreq: false
    EqualWidth: false
    EntropyMDL: false
    DomainDiscretizer: false
    decimal_binnings: false
    time_binnings: false
    short_time_units: false
    BinDefinition: false
    class `Discretizer`:
        def `_fmt_interval`:
            < {formatter(high)}: false
            ≥ {formatter(low)}: false
            {formatter(low)} - {formatter(high)}: false
        def `create_discretized_var`:
            def `fmt`:
                {val:.{ndigits}f}: false
            single_value: false
    class `BinSql`:
        def `__call__`:
            'width_bucket({self.var.to_sql()}, ': false
            ARRAY{str(self.points)}::double precision[]): false
    class `SingleValueSql`:
        def `__call__`:
            "'%s'": false
    class `Discretization`:
        def `__call__`:
            "Subclasses of 'Discretization' need to implement ": false
            the call operator: false
    class `EqualFreq`:
        def `__call__`:
            quantile(%s, ARRAY%s): false
    class `FixedTimeWidth`:
        def `__call__`:
            %Y: false
            %y %b: false
            %y %b %d: false
            %y %b %d %H:%M: false
            %H:%M:%S: false
    def `_simplified_time_intervals`:
        ' ': false
        < {join(labels[0])}: false
        {join(low)} - {join(no_common(low, high))}: false
        ≥ {join(labels[-1])}: false
    class `Binning`:
        def `_create_binned_var`:
            < {blabels[0]}: false
            {lab1} - {lab2}: false
            ≥ {blabels[-1]}: false
    class `BinDefinition`:
        def `__new__`:
            %g: false
            {width:g}: false
    def `decimal_binnings`:
        %g: false
    def `_time_binnings`:
        %H:%M:%S: false
        second: sekunda
        %b %d %H:%M: false
        minute: minuta
        %y %b %d %H:%M: false
        hour: ura
        %y %b %d: false
        day: dan
        week: teden
        %y %b: false
        month: mesec
        %Y: false
        year: leto
        {step // 7} week{'s' * (step > 7)}: {step // 7} {plsi(step // 7, "teden|tedna|tedni|tednov")}
        {step} {unit}{'s' * (step > 1)}: {step} {plsi(step, dict(dan="dan|dneva|dnevi|dni", teden="teden|tedna|tedni|tednov", mesec="mesec|meseca|meseci|mesecev", leto="leto|leti|leta|let").get(unit, unit))}
    def `_simplified_labels`:
        42: false
        ' ': false
        :: true
        {to_remove} {labels[0]}: false
    def `_unique_time_bins`:
        %y %b %d: false
        ' %H:%M': false
        :%S: false
    def `_min_max_unique`:
        no valid (non-nan) data: false
    sec: sek
    min: min
    hrs: ur
    wks: ted
    mon: mes
    yrs: let
preprocess/fss.py:
    SelectBestFeatures: false
    SelectRandomFeatures: false
    class `SelectBestFeatures`:
        def `score_only_nice_features`:
            -inf: false
            inf: false
preprocess/impute.py:
    ReplaceUnknowns: false
    Average: false
    DoNotImpute: false
    DropInstances: false
    Model: false
    AsValue: false
    Random: false
    Default: false
    FixedValueByType: false
    class `BaseImputeMethod`:
        {var.name} -> {self.short_name}: true
    class `DoNotImpute`:
        Don't impute: Ne nadomeščaj
        leave: pusti
    class `DropInstances`:
        Remove instances with unknown values: Odstrani primere z neznanimi vrednostmi
        drop: odstrani
    class `Average`:
        Average/Most frequent: Povprečna/najpogostejša vrednost
        average: povprečje
        Replace with average/mode of the column: Zamenjaj s povprečno oziroma najpogostejšo vrednostjo
        def `__call__`:
            Variable must be numeric or categorical.: Spremenljivka mora biti številska ali kategorična
    class `ImputeSql`:
        def `__call__`:
            coalesce(%s, %s): false
    class `Default`:
        Fixed value: Določena vrednost
        value: false
        {var} -> {self.default}: true
    class `FixedValueByType`:
        Fixed value: Določena vrednost
        Fixed Value: določena
        {var.name}: false
    class `ReplaceUnknownsModel`:
        def `transform`:
            abstract in Transformation, never used here: false
    class `Model`:
        Model-based imputer: Nadomeščanje z modelom
        model: model
        ' ({self.learner.name})': true
        def `name`:
            {} ({}): true
            name: false
        def `__call__`:
            `{}` doesn't support domain type: `{}` ne podpira te vrste ciljne spremenljivke
    class `AsValue`:
        As a distinct value: Kot posebna, nova vrednost
        new value: nova vrednost
        def `__call__`:
            {var.name}: true
            N/A: NN
            {var.name}_def: {var.name} znana
            undef: ne
            def: da
    class `ReplaceUnknownsRandom`:
        def `__init__`:
            'Only categorical and numeric ': Podprte so samo kategorične
            variables are supported.: in številske spremenljivke.
    class `Random`:
        Random values: Naključno izbrana vrednost
        random: naključna
        Replace with a random value: Nadomesti z naključno vrednostjo
        def `__call__`:
            "'{}' has no values": false
            "'{}' has an unknown distribution": false
preprocess/normalize.py:
    Normalizer: false
preprocess/preprocess.py:
    Continuize: false
    Discretize: false
    Impute: false
    RemoveNaNRows: false
    SklImpute: false
    Normalize: false
    Randomize: false
    Preprocess: false
    RemoveConstant: false
    RemoveNaNClasses: false
    RemoveNaNColumns: false
    ProjectPCA: false
    ProjectCUR: false
    Scale: false
    RemoveSparse: false
    AdaptiveNormalize: false
    PreprocessorList: false
    class `Preprocess`:
        def `__call__`:
            Subclasses need to implement __call__: false
    class `Continuize`:
        Continuize: false
        Indicators: false
        FirstAsBase: false
        FrequentAsBase: false
        Remove: false
        RemoveMultinomial: false
        ReportError: false
        AsOrdinal: false
        AsNormalizedOrdinal: false
        Leave: false
        Continuize.MultinomialTreatment: false
    class `SklImpute`:
        def `__init__`:
            mean: false
    class `RemoveNaNClasses`:
        Orange.data.filter.HasClas: false
    class `Normalize`:
        Normalize: false
        NormalizeBySpan: false
        NormalizeBySD: false
        Normalize.Type: false
        def `__call__`:
            skip-normalization: false
    class `Randomize`:
        Randomize: false
        Randomize.Type: false
    class `Scale`:
        class `_MethodEnum`:
            def `__call__`:
                _: false
        Scale: false
        NoCentering: false
        Mean: false
        Median: false
        Scale.CenteringType: false
        NoScaling: false
        Std: false
        Span: false
        Scale.ScalingType: false
preprocess/remove.py:
    Remove: false
    class `Remove`:
        def `get_vars_and_results`:
            removed: false
            reduced: false
            sorted: false
    Var: false
    var: false
    Removed: false
    sub: false
    Reduced: false
    Sorted: false
    Transformed: false
preprocess/score.py:
    Chi2: false
    ANOVA: false
    UnivariateLinearRegression: false
    InfoGain: false
    GainRatio: false
    Gini: false
    ReliefF: false
    RReliefF: false
    FCBF: false
    class `Scorer`:
        def `friendly_name`:
            ([a-z])([A-Z]): false
            ' ': false
        def `_friendly_vartype_name`:
            categorical: kategorično
            numeric: številsko
            Variable: false
        def `__call__`:
            {} requires data with a target variable.: {} zahteva podatke s ciljno spremenljivko
            {} requires a {} target variable.: {} zahteva {} ciljno spremenljivko.
            {} cannot score {} variables.: {} ne deluje s {} spremenljivko.
    class `LearnerScorer`:
        def `score_data`:
            def `join_derived_features`:
                variable: false
    class `ReliefF`:
        ReliefF: false
        def `score_data`:
            ReliefF requires one single class: false
            'ReliefF supports classification; use RReliefF ': false
            for regression: false
    class `RReliefF`:
        RReliefF: false
        def `score_data`:
            RReliefF requires one single class: false
            'RReliefF supports regression; use ReliefF ': false
            for classification: false
    __main__: false
    Best =: false
    Weights =: false
preprocess/transformation.py:
    class `Transformation`:
        def `__getstate__`:
            _target_domain: false
        def `transform`:
            ColumnTransformations must implement method 'transform'.: false
    class `Normalizer`:
        def `transform`:
            Normalization does not work for sparse data.: false
    class `MappingTransform`:
        def `__init__`:
            DTypeLike: false
            "'nan' value in mapping.keys()": false
projection/base.py:
    LinearCombinationSql: false
    Projector: false
    Projection: false
    SklProjector: false
    LinearProjector: false
    DomainProjection: false
    class `LinearCombinationSql`:
        def `__call__`:
            ' + ': false
            {} * {}: false
            {} * ({} - {}): false
    class `Projector`:
        projection: false
        def `fit`:
            Classes derived from Projector must overload method fit: false
        def `__call__`:
            Preprocessing...: Predprocesiranje...
            "A keyword argument 'progress_callback' has been ": false
            'added to the preprocess() signature. Implementing ': false
            'the method without the argument is deprecated and ': false
            will result in an error in the future.: false
            Fitting...: Prileganje...
        def `__getstate__`:
            _Projector__tls: false
    class `TransformDomain`:
        def `__getstate__`:
            _hash: false
    class `ComputeValueProjector`:
        def `__init__`:
            Argument projection is unused and will be removed.: false
    class `DomainProjection`:
        C: false
        def `__init__`:
            def `proj_variable`:
                mean_: false
        def `_get_var_names`:
            x: false
            y: false
            {self.var_prefix}-{postfix}: false
    class `LinearProjector`:
        Linear Projection: false
    class `SklProjector`:
        skl projection: false
        def `_get_sklparams`:
            self: false
            Wrapper does not define '__wraps__': false
        def `preprocess`:
            'Wrapped scikit-learn methods do not support ': false
            multinomial variables.: false
projection/cur.py:
    CUR: false
    class `CUR`:
        cur: false
    class `CURModel`:
        def `__call__`:
            'CUR can select either columns ': false
            (axis = 0) or rows (axis = 1).: false
    class `Projector`:
        def `__getstate__`:
            transformed: false
    __main__: false
    fro: false
    'Fro. error (optimal SVD): %5.4f': false
    'Fro. error (CUR): %5.4f': false
projection/freeviz.py:
    FreeViz: false
    class `FreeVizModel`:
        freeviz: false
    class `FreeViz`:
        FreeViz: false
        def `__call__`:
            Can not handle discrete variables: false
            ' with more than two values': false
        def `forces_regression`:
            sqeuclidean: false
        def `forces_classification`:
            hamming: false
        def `gradient`:
            weights.ndim != 1 ({}): false
            X and embeddings must have the same length ({}!={}): false
            X.shape[0] != weights.shape[0] ({}!={}): false
        def `freeviz`:
            X and y must have the same length: false
            center.shape != (X.shape[1], ) ({} != {}): false
            scale.shape != (X.shape[1],) ({} != {})): false
            ignore: false
projection/lda.py:
    LDA: false
    class `LDAModel`:
        LD: false
    class `LDA`:
        LDA: false
        def `__init__`:
            svd: false
        def `fit`:
            n_components: false
projection/manifold.py:
    MDS: false
    Isomap: false
    LocallyLinearEmbedding: false
    SpectralEmbedding: false
    TSNE: false
    def `torgerson`:
        auto: false
        arpack: false
        lapack: false
        w was not in ascending order: false
        {} of the {} eigenvalues were negative.: false
    class `MDS`:
        MDS: true
        def `__init__`:
            euclidean: false
            random: false
        def `__call__`:
            dissimilarity: false
            precomputed: false
            PCA: false
            n_components: false
    class `Isomap`:
        Isomap: true
        def `__init__`:
            auto: false
    class `LocallyLinearEmbedding`:
        Locally Linear Embedding: Lokalna linearna vložitev
        def `__init__`:
            auto: false
            standard: false
    class `SpectralEmbedding`:
        Spectral Embedding: Spektralna vložitev
        def `__init__`:
            nearest_neighbors: false
    class `TSNEModel`:
        def `__init__`:
            TSNE: false
        def `transform`:
            'A sparse matrix was passed, but dense data is required. Use ': false
            X.toarray() to convert to a dense numpy array.: false
            perplexity: false
            'Perplexity should be an instance of `Iterable`, `%s` ': false
            given.: false
            perplexities: false
        def `optimize`:
            n_iter: false
            inplace: false
            propagate_exception: false
    class `TSNE`:
        t-SNE: true
        def `__init__`:
            auto: false
            pca: false
            euclidean: false
        def `compute_affinities`:
            'A sparse matrix was passed, but dense data is required. Use ': false
            X.toarray() to convert to a dense numpy array.: false
            'Perplexity should be an instance of `Iterable`, `%s` ': false
            given.: false
            'Perplexity should be an instance of `float`, `%s` ': false
        def `compute_initialization`:
            pca: false
            spectral: false
            random: false
            'Invalid initialization `%s`. Please use either `pca` or ': false
            `random` or provide a numpy array.: false
        def `convert_embedding_to_model`:
            precomputed: false
            'Expected `data` to be instance of ': false
            '{DistMatrix.__class__.__name__} when using ': false
            "`metric='precomputed'. Got {data.__class__.__name__} ": false
            instead!: false
            x: false
            y: false
            t-SNE-{p}: true
projection/pca.py:
    PCA: false
    SparsePCA: false
    IncrementalPCA: false
    TruncatedSVD: false
    def `randomized_pca`:
        auto: false
        f: false
        economic: false
    class `ImprovedPCA`:
        def `_fit`:
            csr: false
            csc: false
            arpack: false
            auto: false
            randomized: false
            mle: false
            full: false
            only the randomized solver supports sparse matrices: false
            Unrecognized svd_solver='{0}': false
        def `_fit_truncated`:
            n_components=%r cannot be a string with svd_solver='%s': false
            'n_components=%r must be between 1 and min(n_samples, ': false
            n_features)=%r with svd_solver='%s': false
            'n_components=%r must be of type int when greater than or ': false
            equal to 1, was of type=%r: false
            arpack: false
            'n_components=%r must be strictly less than min(n_samples, ': false
            randomized: false
        def `transform`:
            mean_: false
            components_: false
            csr: false
            csc: false
    class `PCA`:
        PCA: false
        def `__init__`:
            auto: false
        def `fit`:
            n_components: false
    class `SparsePCA`:
        Sparse PCA: false
        def `__init__`:
            lars: false
    class `PCAModel`:
        PC: false
        def `_get_var_names`:
            {self.var_prefix}{postfix}: false
    class `IncrementalPCA`:
        Incremental PCA: false
    class `TruncatedSVD`:
        Truncated SVD: false
        def `__init__`:
            randomized: false
        def `fit`:
            n_components: false
projection/radviz.py:
    RadViz: false
    class `RadVizModel`:
        radviz: false
    class `RadViz`:
        RadViz: false
        def `__call__`:
            Can not handle categorical variables: Ne morem obravnavati kategoričnih spremenljivk
            ' with more than two values': ' z več kot dvema vrednostima.'
        def `transform`:
            ignore: false
regression/base_regression.py:
    LearnerRegression: false
    ModelRegression: false
    SklModelRegression: false
    SklLearnerRegression: false
    class `LearnerRegression`:
        def `incompatibility_reason`:
            Too many target variables.: Preveč ciljnih spremenljivk.
            Numeric target variable expected.: Pričakujem številsko ciljno spremenljivko.
regression/catgb.py:
    CatGBRegressor: false
regression/curvefit.py:
    CurveFitLearner: false
    class `CurveFitModel`:
        def `coefficients`:
            coef: false
            name: false
        def `__getstate__`:
            Can't pickle/copy callable. Use str expression instead.: false
            domain: false
            original_domain: false
            parameters_names: false
            parameters: false
            function: false
            args: false
    class `CurveFitLearner`:
        Curve Fit: false
        def `__init__`:
            Provide 'parameters_names' parameter.: false
            Provide 'features_names' parameter.: false
            Provide 'available_feature_names' parameter.: false
            Provide 'functions' parameter.: false
        def `fit_storage`:
            Numeric feature expected.: false
        def `__getstate__`:
            Can't pickle/copy callable. Use str expression instead.: false
            parameters_names: false
            features_names: false
            p0: false
            bounds: false
            preprocessors: false
        def `__setstate__`:
            expression: false
    def `_create_lambda`:
        eval: false
        x: false
        <lambda>: false
    __main__: false
    housing: false
    a: false
    b: false
    c: false
    LSTAT: false
    o: false
regression/gb.py:
    GBRegressor: false
    class `GBRegressor`:
        def `__init__`:
            squared_error: false
            friedman_mse: false
            deprecated: false
regression/knn.py:
    KNNRegressionLearner: false
regression/linear.py:
    LinearRegressionLearner: false
    RidgeRegressionLearner: false
    LassoRegressionLearner: false
    SGDRegressionLearner: false
    ElasticNetLearner: false
    ElasticNetCVLearner: false
    PolynomialLearner: false
    class `RidgeRegressionLearner`:
        def `__init__`:
            auto: false
    class `ElasticNetCVLearner`:
        def `__init__`:
            auto: false
    class `SGDRegressionLearner`:
        def `__init__`:
            squared_error: false
            l2: false
            invscaling: false
    class `PolynomialLearner`:
        poly learner: false
    class `LinearModel`:
        def `__str__`:
            LinearModel {}: false
    class `PolynomialModel`:
        def `__str__`:
            PolynomialModel {}: false
regression/linear_bfgs.py:
    LinearRegressionLearner: false
    class `LinearRegressionLearner`:
        linear_bfgs: false
        def `fit`:
            'Linear regression does not support ': false
            multi-target classification: false
            unknown values: false
    __main__: false
    housing: false
    {:5.2f} {}: false
    test data: false
    majority: false
regression/mean.py:
    MeanLearner: false
    class `MeanLearner`:
        def `fit_storage`:
            'regression.MeanLearner expects a domain with a ': false
            (single) numeric variable.: false
    class `MeanModel`:
        def `__str__`:
            MeanModel({}): false
regression/neural_network.py:
    NNRegressionLearner: false
    class `NNRegressionLearner`:
        def `_initialize_wrapped`:
            callback: false
regression/random_forest.py:
    RandomForestRegressionLearner: false
    class `RandomForestRegressor`:
        def `trees`:
            def `wrap`:
                {} - tree {}: {} - drevo {}
                instances: false
    class `RandomForestRegressionLearner`:
        def `__init__`:
            squared_error: false
regression/simple_random_forest.py:
    SimpleRandomForestLearner: false
    class `SimpleRandomForestLearner`:
        simple rf reg: false
        def `__init__`:
            sqrt: false
regression/svm.py:
    SVRLearner: false
    LinearSVRLearner: false
    NuSVRLearner: false
    class `SVRLearner`:
        def `__init__`:
            rbf: false
            auto: false
    class `LinearSVRLearner`:
        def `__init__`:
            epsilon_insensitive: false
    class `NuSVRLearner`:
        def `__init__`:
            rbf: false
            auto: false
    __main__: false
    housing: false
    'learner: {}\nRMSE: {}\n': false
regression/tree.py:
    SklTreeRegressionLearner: false
    TreeLearner: false
    class `TreeLearner`:
        def `__init__`:
            binarity: false
            min_samples_leaf: false
            min_samples_split: false
            max_depth: false
        def `fit_storage`:
            'Exhaustive binarization does not handle ': 'Izčrpna binarizacija ne zmore kategoričnih spremenljivk '
            attributes with more than {} values: z več kot {} vrednostmi.
    class `SklTreeRegressionLearner`:
        regression tree: false
        def `__init__`:
            squared_error: false
            best: false
regression/xgb.py:
    XGBRegressor: false
    XGBRFRegressor: false
    class `XGBRegressor`:
        def `__init__`:
            reg:squarederror: false
            gain: false
    class `XGBRFRegressor`:
        def `__init__`:
            reg:squarederror: false
            gain: false
statistics/basic_stats.py:
    def `_get_variable`:
        variable: false
        'variable does not match the variable ': false
        in the data: false
        domain: false
        invalid specification of variable: false
    class `BasicStats`:
        def `__init__`:
            inf: false
            -inf: false
statistics/contingency.py:
    def `_get_variable`:
        variable: false
        variable does not match the variable in the data: false
        domain: false
        expected %s variable not %s: false
        expected %s, not '%s': false
    class `Discrete`:
        def `__new__`:
            incompatible arguments (data storage and 'unknowns': false
            row_variable: false
            col_variable: false
        def `from_data`:
            row_variable needs to be specified (data has no class): false
            row_variable: false
            col_variable: false
        def `__eq__`:
            col_unknowns: false
            row_unknowns: false
            unknowns: false
        def `__array_finalize__`:
            col_variable: false
            row_variable: false
            col_unknowns: false
            row_unknowns: false
            unknowns: false
    class `Continuous`:
        def `__init__`:
            incompatible arguments (data storage and 'unknowns': false
            row_variable: false
            col_variable: false
        def `from_data`:
            row_variable needs to be specified (data has no class): false
            row_variable: false
            col_variable: false
            Fallback method for computation of contingencies is not implemented yet: false
        def `__eq__`:
            col_unknowns: false
            row_unknowns: false
            unknowns: false
        def `__setitem__`:
            'Setting individual class contingencies is not implemented yet. ': false
            Set .values and .counts.: false
        def `normalize`:
            contingencies can be normalized only with axis=1 or without axis: false
    def `get_contingency`:
        col_variable: false
        cannot compute distribution of '%s': false
    def `get_contingencies`:
        data has no target variable: false
statistics/distribution.py:
    def `_get_variable`:
        variable: false
        variable does not match the variable in the data: false
        domain: false
        expected %s variable not %s: false
        expected %s, not '%s': false
    class `Distribution`:
        def `__array_finalize__`:
            variable: false
            unknowns: false
        def `__eq__`:
            unknowns: false
    class `Discrete`:
        def `__new__`:
            incompatible arguments (data storage and 'unknowns': false
            unknowns: false
        def `__add__`:
            unknowns: false
        def `__iadd__`:
            unknowns: false
        def `__sub__`:
            unknowns: false
        def `__isub__`:
            unknowns: false
    class `Continuous`:
        def `__new__`:
            incompatible arguments (data storage and 'unknowns': false
            unknowns: false
        def `from_data`:
            float: false
    def `class_distribution`:
        domain has no class attribute: false
    def `get_distribution`:
        cannot compute distribution of '%s': false
statistics/util.py:
    def `_eliminate_zeros`:
        eliminate_zeros: false
        '`{x.__type__}` does not implement `eliminate_zeros`. Some values ': false
        in the sparse matrix may by explicit zeros.: false
    def `_count_nans_per_row_sparse`:
        unsupported type '{}': false
    def `sparse_count_implicit_zeros`:
        The matrix provided was not sparse.: false
    def `sparse_has_implicit_zeros`:
        The matrix provided was not sparse.: false
    def `sparse_implicit_zero_weights`:
        The matrix provided was not sparse.: false
        Computing zero weights on ndimensinal weight matrix is not implemented: false
    def `countnans`:
        Only axis 0 and 1 are currently supported: false
        Axis %d is out of bounds: false
    def `_nan_min_max`:
        nan: false
    def `mean`:
        mean() resulted in nan. If input can contain nan values,: false
        ' perhaps you meant nanmean?': false
    def `nanmean`:
        weights are only supported if axis is defined: false
    def `nan_mean_var`:
        axis=None is not supported: false
    def `digitize`:
        right: false
        left: false
    def `isnan`:
        The `out` parameter can only be set `x` when using sparse matrices: false
tests/__init__.py:
    def `named_file`:
        wt: false
    def `suite`:
        test*.py: false
        tests: false
        widgets: false
    __main__: false
    suite: false
tests/base.py:
    class `PickleTest`:
        def `setUp`:
            attributes: false
            class_vars: false
            class_var: false
            variables: false
            metas: false
            anonymous: false
    def `create_pickling_tests`:
        def `create_test`:
            test_{}: false
tests/dummy_learners.py:
    class `DummyMulticlassLearner`:
        def `incompatibility_reason`:
            Not all class variables are discrete: false
tests/sql/base.py:
    def `parse_uri`:
        /: false
        table: false
    class `TestParseUri`:
        def `test_parses_connection_uri`:
            sql://user:password@host:7678/database/table: false
            sql: false
            host: false
            user: false
            password: false
            database: false
            table: false
        def `test_parse_minimal_connection_uri`:
            sql://host/database/table: false
            sql: false
            host: false
            database: false
            table: false
        def `assertDictContainsSubset`:
            '%s, expected: %s, actual: %s': false
            'Missing: %s': false
            ,: false
            '; ': false
            'Mismatched values: %s': false
    def `connection_params`:
        ORANGE_TEST_DB_URI: false
        '|': false
    class `PostgresTestConnection`:
        postgres: false
        psycopg2: false
        def `create_sql_table`:
            float: false
            varchar({}): false
            col{}: false
            '"{}"': false
            DROP TABLE IF EXISTS {}: false
            CREATE TABLE {} ({}): false
            ', ': false
            {} {}: false
            ({}): false
            NULL: false
            "'{}'": false
            INSERT INTO {} VALUES {}: false
        def `drop_sql_table`:
            DROP TABLE {}: false
    class `MicrosoftTestConnection`:
        mssql: false
        pymssql: false
        def `create_sql_table`:
            float: false
            varchar({}): false
            col{}: false
            '"{}"': false
            DROP TABLE IF EXISTS {}: false
            CREATE TABLE {} ({}): false
            ', ': false
            {} {}: false
            ({}): false
            NULL: false
            "'{}'": false
            INSERT INTO {} VALUES {}: false
        def `drop_sql_table`:
            DROP TABLE {}: false
    class `DataBaseTest`:
        def `_check_db`:
            >: false
            <: false
            {} module is required for this database: false
            Database is not running: false
            No connection provided for {}: false
            Unsupported database: false
            This test is only run database version higher then {}: false
            This test is only run on database version lower then {}: false
        def `_setup_test_with`:
            def `new_test`:
                setUpDB: false
                tearDownDB: false
        def `run_on`:
            def `decorator`:
                test_db_: false
                _: false
                'On ': false
                ' run: ': false
        def `create_iris_sql_table`:
            iris: false
            sepal length: false
            sepal width: false
            petal length: false
            petal width: false
            float: false
            varchar(15): false
        def `drop_iris_sql_table`:
            iris: false
tests/sql/test_filter.py:
    class `TestIsDefinedSql`:
        def `setUpDB`:
            m: false
            f: false
        def `test_on_all_columns`:
            postgres: false
            mssql: false
        def `test_selected_columns`:
            postgres: false
            mssql: false
        def `test_all_columns_negated`:
            postgres: false
        def `test_selected_columns_negated`:
            postgres: false
            mssql: false
        def `test_can_inherit_is_defined_filter`:
            postgres: false
    class `TestHasClass`:
        def `setUpDB`:
            m: false
            f: false
        def `test_has_class`:
            postgres: false
            mssql: false
        def `test_negated`:
            postgres: false
            mssql: false
    class `TestSameValueSql`:
        def `setUpDB`:
            a: false
            m: false
            f: false
            b: false
        def `test_on_continuous_attribute`:
            postgres: false
            mssql: false
        def `test_on_continuous_attribute_with_unknowns`:
            postgres: false
            mssql: false
        def `test_on_continuous_attribute_with_unknown_value`:
            postgres: false
            mssql: false
        def `test_on_continuous_attribute_negated`:
            postgres: false
        def `test_on_discrete_attribute`:
            postgres: false
            mssql: false
            a: false
        def `test_on_discrete_attribute_with_unknown_value`:
            postgres: false
            mssql: false
        def `test_on_discrete_attribute_with_unknowns`:
            postgres: false
            mssql: false
            m: false
        def `test_on_discrete_attribute_negated`:
            postgres: false
            mssql: false
            a: false
        def `test_on_discrete_attribute_value_passed_as_int`:
            postgres: false
            mssql: false
        def `test_on_discrete_attribute_value_passed_as_float`:
            postgres: false
            mssql: false
    class `TestValuesSql`:
        def `setUpDB`:
            a: false
            m: false
            f: false
            b: false
        def `test_values_filter_with_no_conditions`:
            postgres: false
            mssql: false
        def `test_discrete_value_filter`:
            postgres: false
            mssql: false
            a: false
        def `test_discrete_value_filter_with_multiple_values`:
            postgres: false
            a: false
            b: false
        def `test_discrete_value_filter_with_None`:
            postgres: false
        def `test_continuous_value_filter_equal`:
            postgres: false
            mssql: false
        def `test_continuous_value_filter_not_equal`:
            postgres: false
        def `test_continuous_value_filter_less`:
            postgres: false
            mssql: false
        def `test_continuous_value_filter_less_equal`:
            postgres: false
        def `test_continuous_value_filter_greater`:
            postgres: false
        def `test_continuous_value_filter_greater_equal`:
            postgres: false
        def `test_continuous_value_filter_between`:
            postgres: false
        def `test_continuous_value_filter_outside`:
            postgres: false
            mssql: false
        def `test_continuous_value_filter_isdefined`:
            postgres: false
    class `TestFilterStringSql`:
        def `setUpDB`:
            Lorem ipsum dolor sit amet, consectetur adipiscing: false
            elit. Vestibulum vel dolor nulla. Etiam elit lectus, mollis nec: false
            mattis sed, pellentesque in turpis. Vivamus non nisi dolor. Etiam: false
            lacinia dictum purus, in ullamcorper ante vulputate sed. Nullam: false
            congue blandit elementum. Donec blandit laoreet posuere. Proin: false
            quis augue eget tortor posuere mollis. Fusce vestibulum bibendum: false
            neque at convallis. Donec iaculis risus volutpat malesuada: false
            vehicula. Ut cursus tempor massa vulputate lacinia. Pellentesque: false
            eu tortor sed diam placerat porttitor et volutpat risus. In: false
            vulputate rutrum lacus ac sagittis. Suspendisse interdum luctus: false
            sem auctor commodo.: false
            ' ': false
        def `test_filter_string_is_defined`:
            postgres: false
        def `test_filter_string_equal`:
            postgres: false
            mssql: false
            in: false
        def `test_filter_string_equal_case_insensitive_value`:
            postgres: false
            In: false
            in: false
        def `test_filter_string_equal_case_insensitive_data`:
            postgres: false
            donec: false
            Donec: false
        def `test_filter_string_not_equal`:
            postgres: false
            in: false
        def `test_filter_string_not_equal_case_insensitive_value`:
            postgres: false
            In: false
            in: false
        def `test_filter_string_not_equal_case_insensitive_data`:
            postgres: false
            donec: false
            Donec: false
        def `test_filter_string_less`:
            postgres: false
            mssql: false
            A: false
        def `test_filter_string_less_case_insensitive_value`:
            postgres: false
            In: false
            in: false
        def `test_filter_string_less_case_insensitive_data`:
            postgres: false
            donec: false
        def `test_filter_string_less_equal`:
            postgres: false
            mssql: false
            A: false
        def `test_filter_string_less_equal_case_insensitive_value`:
            postgres: false
            In: false
            in: false
        def `test_filter_string_less_equal_case_insensitive_data`:
            postgres: false
            donec: false
        def `test_filter_string_greater`:
            postgres: false
            mssql: false
            volutpat: false
        def `test_filter_string_greater_case_insensitive_value`:
            postgres: false
            In: false
            in: false
        def `test_filter_string_greater_case_insensitive_data`:
            postgres: false
            donec: false
        def `test_filter_string_greater_equal`:
            postgres: false
            volutpat: false
        def `test_filter_string_greater_equal_case_insensitive_value`:
            postgres: false
            In: false
            in: false
        def `test_filter_string_greater_equal_case_insensitive_data`:
            postgres: false
            donec: false
        def `test_filter_string_between`:
            postgres: false
            a: false
            c: false
        def `test_filter_string_between_case_insensitive_value`:
            postgres: false
            I: false
            O: false
            i: false
            o: false
        def `test_filter_string_between_case_insensitive_data`:
            postgres: false
            i: false
            O: false
            o: false
        def `test_filter_string_contains`:
            postgres: false
            et: false
        def `test_filter_string_contains_case_insensitive_value`:
            postgres: false
            eT: false
            et: false
        def `test_filter_string_contains_case_insensitive_data`:
            postgres: false
            do: false
        def `test_filter_string_outside`:
            postgres: false
            am: false
            di: false
        def `test_filter_string_outside_case_insensitive`:
            postgres: false
            d: false
            k: false
        def `test_filter_string_starts_with`:
            postgres: false
            D: false
        def `test_filter_string_starts_with_case_insensitive`:
            postgres: false
            D: false
            d: false
        def `test_filter_string_ends_with`:
            postgres: false
            s: false
        def `test_filter_string_ends_with_case_insensitive`:
            postgres: false
            S: false
            s: false
        def `test_filter_string_list`:
            postgres: false
            et: false
            in: false
        def `test_filter_string_list_case_insensitive_value`:
            postgres: false
            Et: false
            In: false
            et: false
            in: false
        def `test_filter_string_list_case_insensitive_data`:
            postgres: false
            mssql: false
            donec: false
            Donec: false
    __main__: false
tests/sql/test_misc.py:
    class `MiscSqlTests`:
        def `test_discretization`:
            postgres: false
            sepal length: false
        def `test_get_conditional_distribution`:
            postgres: false
            Cannot import widgets: false
            sepal length: false
        def `test_create_sql_contingency`:
            postgres: false
            Cannot import widgets: false
tests/sql/test_naive_bayes_sql.py:
    class `NaiveBayesTest`:
        def `test_NaiveBayes`:
            postgres: false
            Iris-setosa: false
            Iris-virginica: false
            Iris-versicolor: false
            iris: false
tests/sql/test_sql_table.py:
    class `TestSqlTable`:
        def `discrete_variable`:
            mf: false
        def `test_constructs_correct_attributes`:
            postgres: false
            col0: false
            '"col0"': false
            col1: false
            '"col1"': false
            f: false
            m: false
            col2: false
            '"col2"': false
        def `test_make_attributes`:
            postgres: false
        def `test_len`:
            postgres: false
            mssql: false
        def `test_bool`:
            postgres: false
            mssql: false
        def `test_len_with_filter`:
            postgres: false
            mssql: false
            m: false
            x: false
        def `test_XY_small`:
            postgres: false
            mssql: false
            col2: false
            0: false
            1: false
            2: false
        def `test_XY_large`:
            postgres: false
            mssql: false
            Orange.data.sql.table.AUTO_DL_LIMIT: false
            col2: false
            0: false
            1: false
            2: false
        def `test_download_data`:
            postgres: false
            mssql: false
            X: false
            Y: false
            metas: false
            W: false
            ids: false
            col2: false
            0: false
            1: false
            2: false
        def `test_query_all`:
            postgres: false
            mssql: false
        def `test_unavailable_row`:
            postgres: false
            mssql: false
        def `test_query_subset_of_attributes`:
            postgres: false
            mssql: false
            sepal length: false
            sepal width: false
            double width: false
            2 * "sepal width": false
        def `test_query_subset_of_rows`:
            postgres: false
        def `test_getitem_single_value`:
            postgres: false
            mssql: false
            Iris-setosa: false
        def `test_type_hints`:
            postgres: false
            mssql: false
            iris: false
        def `test_joins`:
            postgres: false
            "SELECT a.""sepal length"",
                          b. ""petal length"",
                          CASE WHEN b.""petal length"" < 3 THEN '<'
                               ELSE '>'
                           END AS ""qualitative petal length""
                     FROM iris a
               INNER JOIN iris b ON a.""sepal width"" = b.""sepal width""
                    WHERE a.""petal width"" < 1
                 ORDER BY a.""sepal length"", b. ""petal length"" ASC": false
            qualitative petal length: false
            <: false
            >: false
        def `_mock_attribute`:
            '"%s"': false
        def `test_universal_table`:
            postgres: false
            '
            SELECT
                v1.col2 as v1,
                v2.col2 as v2,
                v3.col2 as v3,
                v4.col2 as v4,
                v5.col2 as v5
              FROM %(table_name)s v1
        INNER JOIN %(table_name)s v2 ON v2.col0 = v1.col0 AND v2.col1 = 2
        INNER JOIN %(table_name)s v3 ON v3.col0 = v2.col0 AND v3.col1 = 3
        INNER JOIN %(table_name)s v4 ON v4.col0 = v1.col0 AND v4.col1 = 4
        INNER JOIN %(table_name)s v5 ON v5.col0 = v1.col0 AND v5.col1 = 5
             WHERE v1.col1 = 1
          ORDER BY v1.col0
        ': false
            '"%s"': false
        iris: false
        Iris-setosa: false
        Iris-virginica: false
        Iris-versicolor: false
        def `test_class_var_type_hints`:
            postgres: false
            mssql: false
            iris: false
        def `test_meta_type_hints`:
            postgres: false
            mssql: false
            iris: false
        def `test_metas_type_hints`:
            postgres: false
            mssql: false
            iris: false
        def `test_select_all`:
            postgres: false
            mssql: false
            SELECT * FROM iris: false
        def `test_discrete_bigint`:
            postgres: false
            bigint: false
        def `test_continous_bigint`:
            postgres: false
            mssql: false
            bigint: false
        def `test_discrete_int`:
            postgres: false
            int: false
        def `test_continous_int`:
            postgres: false
            mssql: false
            int: false
        def `test_discrete_smallint`:
            postgres: false
            smallint: false
        def `test_continous_smallint`:
            postgres: false
            mssql: false
            smallint: false
        def `test_boolean`:
            postgres: false
            F: false
            T: false
            False: false
            True: false
            boolean: false
        def `test_discrete_char`:
            postgres: false
            mssql: false
            M: false
            F: false
            char(1): false
        def `test_discrete_bigger_char`:
            postgres: false
            M: false
            F: false
            char(10): false
        def `test_meta_char`:
            postgres: false
            mssql: false
            ABCDEFGHIJKLMNOPQRSTUVW: false
            char(1): false
        def `test_discrete_varchar`:
            postgres: false
            mssql: false
            M: false
            F: false
            varchar(1): false
        def `test_meta_varchar`:
            postgres: false
            mssql: false
            ABCDEFGHIJKLMNOPQRSTUVW: false
            varchar(1): false
        def `test_time_date`:
            postgres: false
            2014-04-12: false
            2014-04-13: false
            2014-04-14: false
            2014-04-15: false
            2014-04-16: false
            date: false
        def `test_time_time`:
            postgres: false
            17:39:51: false
            11:51:48.46: false
            05:20:21.492149: false
            21:47:06: false
            04:47:35.8: false
            time: false
        def `test_time_timetz`:
            postgres: false
            17:39:51+0200: false
            11:51:48.46+01: false
            05:20:21.4921: false
            21:47:06-0600: false
            04:47:35.8+0330: false
            timetz: false
        def `test_time_timestamp`:
            postgres: false
            2014-07-15 17:39:51.348149: false
            2008-10-05 11:51:48.468149: false
            2008-11-03 05:20:21.492149: false
            2015-01-02 21:47:06.228149: false
            2016-04-16 04:47:35.892149: false
            timestamp: false
        def `test_time_timestamptz`:
            postgres: false
            2014-07-15 17:39:51.348149+0200: false
            2008-10-05 11:51:48.468149+02: false
            2008-11-03 05:20:21.492149+01: false
            2015-01-02 21:47:06.228149+0100: false
            2016-04-16 04:47:35.892149+0330: false
            timestamptz: false
        def `test_double_precision`:
            postgres: false
            mssql: false
            double precision: false
        def `test_numeric`:
            postgres: false
            mssql: false
            numeric(15, 2): false
        def `test_real`:
            postgres: false
            mssql: false
            real: false
        def `test_serial`:
            postgres: false
            serial: false
        def `test_smallserial`:
            postgres>90200: false
            smallserial: false
        def `test_bigserial`:
            postgres>90200: false
            bigserial: false
        def `test_text`:
            postgres: false
            ABCDEFGHIJKLMNOPQRSTUVW: false
            text: false
        def `test_other`:
            postgres: false
            bcd4d9c0-361e-bad4-7ceb-0d171cdec981: false
            544b7ddc-d861-0201-81c8-9f7ad0bbf531: false
            b35a10f7-7901-f313-ec16-5ad9778040a6: false
            b267c4be-4a26-60b5-e664-737a90a40e93: false
            uuid: false
            foo: false
        def `test_recovers_connection_after_sql_error`:
            postgres: false
            mssql: false
            SELECT 1/%s FROM %s: false
            SELECT %s FROM %s: false
        def `test_basic_stats`:
            postgres: false
            sepal length: false
        def `test_basic_stats_on_large_data`:
            postgres: false
            Orange.data.sql.table.LARGE_TABLE: false
            sepal length: false
        def `test_distributions`:
            postgres: false
            mssql: false
        def `test_contingencies`:
            postgres: false
            sepal width: false
            iris: false
        def `test_pickling_restores_connection_pool`:
            postgres: false
        def `test_pickling_respects_downloaded_state`:
            postgres: false
        def `test_list_tables_with_schema`:
            postgres: false
            DROP SCHEMA IF EXISTS orange_tests CASCADE: false
            CREATE SCHEMA orange_tests: false
            CREATE TABLE orange_tests.efgh (id int): false
            INSERT INTO orange_tests.efgh (id) VALUES (1): false
            INSERT INTO orange_tests.efgh (id) VALUES (2): false
            orange_tests: false
            efgh: false
        def `test_nan_frequency`:
            postgres: false
            mssql: false
    __main__: false
widgets/__init__.py:
    def `widget_discovery`:
        Orange3: false
        Orange.widgets.data: false
        Orange.widgets.visualize: false
        Orange.widgets.model: false
        Orange.widgets.evaluate: false
        Orange.widgets.unsupervised: false
        Transform: Predelava podatkov
        '#FF9D5E': false
        data/icons/Transform.svg: false
        Orange Obsolete: Zastarelo
        Orange.widgets.obsolete.owtable: false
    {DEVELOP_ROOT}/doc/visual-programming/build/htmlhelp/index.html: false
    data: false
    share/help/en/orange3/htmlhelp/index.html: false
    https://docs.biolab.si/orange/3/visual-programming/: false
widgets/credentials.py:
    Orange3 - {}: false
    class `CredentialManager`:
        def `__init__`:
            __service_name: false
        def `service_name`:
            __service_name: false
        def `__setattr__`:
            Failed to set secret '%s' of '%r'.: false
        def `__getattr__`:
            Failed to get secret '%s' of '%r'.: false
        def `__delattr__`:
            Failed to delete secret '%s' of '%r'.: false
widgets/gui.py:
    OWComponent: false
    OrangeUserRole: false
    TableView: false
    resource_filename: false
    miscellanea: false
    setLayout: false
    separator: false
    rubber: false
    widgetBox: false
    hBox: false
    vBox: false
    indentedBox: false
    widgetLabel: false
    label: false
    spin: false
    doubleSpin: false
    checkBox: false
    lineEdit: false
    button: false
    toolButton: false
    comboBox: false
    radioButtons: false
    radioButtonsInBox: false
    appendRadioButton: false
    hSlider: false
    labeledSlider: false
    valueSlider: false
    auto_commit: false
    auto_send: false
    auto_apply: false
    ProgressBar: false
    VerticalLabel: false
    tabWidget: false
    createTabPage: false
    table: false
    tableItem: false
    VisibleHeaderSectionContextEventFilter: false
    checkButtonOffsetHint: false
    toolButtonSizeHint: false
    FloatSlider: false
    ControlGetter: false
    VerticalScrollArea: false
    CalendarWidgetWithTime: false
    DateTimeEditWCalendarTime: false
    BarRatioRole: false
    BarBrushRole: false
    SortOrderRole: false
    LinkRole: false
    BarItemDelegate: false
    IndicatorItemDelegate: false
    LinkStyledItemDelegate: false
    ColoredBarItemDelegate: false
    HorizontalGridDelegate: false
    VerticalItemDelegate: false
    ValueCallback: false
    is_macstyle: false
    createAttributePixmap: false
    attributeIconDict: false
    attributeItem: false
    listView: false
    ListViewWithSizeHint: false
    listBox: false
    OrangeListBox: false
    TableValueRole: false
    TableClassValueRole: false
    TableDistribution: false
    TableVariable: false
    TableBarItem: false
    palette_combo_box: false
    BarRatioTableModel: false
    class `__AttributeIconDict`:
        def `__getitem__`:
            c: false
            N: false
            d: false
            C: false
            s: false
            S: false
            t: false
            T: false
            ?: false
    def `listView`:
        uniformItemSizes: false
    class `OrangeListBox`:
        def `updateGeometries`:
            _updatingGeometriesNow: false
    def `comboBox`:
        valueType: false
        Argument 'valueType' is deprecated and ignored: false
    class `TableBarItem`:
        color_schema: false
    class `HScrollStepMixin`:
        def `wheelEvent`:
            source: false
            darwin: false
    class `BarRatioTableModel`:
        def `setExtremesFrom`:
            ignore: false
            .*All-NaN slice encountered.*: false
        def `_argsortData`:
            mergesort: false
widgets/io.py:
    ImgFormat: false
    PngFormat: false
    SvgFormat: false
    ClipboardFormat: false
    PdfFormat: false
    MatplotlibFormat: false
    MatplotlibPDFFormat: false
widgets/settings.py:
    Setting: false
    SettingsHandler: false
    SettingProvider: false
    ContextSetting: false
    Context: false
    ContextHandler: false
    IncompatibleContext: false
    rename_setting: false
    widget_settings_dir: false
    DomainContextHandler: false
    PerfectDomainContextHandler: false
    ClassValuesContextHandler: false
    SettingsPrinter: false
    migrate_str_to_variable: false
    class `DomainContextHandler`:
        def `__init__`:
            {} is not a valid parameter for DomainContextHandler: false
        def `encode_setting`:
            'Variables must be stored as ContextSettings; ': false
            change {setting.name} to ContextSetting.: false
        def `decode_setting`:
            def `get_var`:
                Cannot decode variable without domain: false
widgets/widget.py:
    OWWidget: false
    Input: false
    Output: false
    MultiInput: false
    AttributeList: false
    Message: false
    Msg: false
    StateInfo: false
    InputSignal: false
    OutputSignal: false
    Default: false
    NonDefault: false
    Single: false
    Multiple: false
    Dynamic: false
    Explicit: false
widgets/data/__init__.py:
    Data: Podatki
    orange.widgets.data: false
    Data manipulation: Delo s podatki
    icons/Category-Data.svg: false
    '#FFD39F': false
widgets/data/owaggregatecolumns.py:
    class `OWAggregateColumns`:
        Aggregate Columns: Združi stolpce
        Compute a sum, max, min ... of selected columns.: Izračunaj vsoto, minimum, maksimum ... izbranih stolpcev.
        Transform: Predelava podatkov
        icons/AggregateColumns.svg: false
        aggregate columns, aggregate, sum, product, max, min, mean, median, variance: aggregate columns, aggregate, sum, product, max, min, mean, median, variance, agregacija, vsota, zmnožek, maksimum, minimum, povprečje, mediana, varianca
        class `Inputs`:
            Data: Podatki
            Features: Spremenljivke
        class `Outputs`:
            Data: Podatki
        class `Warning`:
            Some input features are categorical:\n{}: Nekatere vhodne spremenljivke so kategorične:\{}
            Some input features are missing:\n{}: Nekatere vhodne spremenljivke manjkajo:\n{}
        Sum: Vsota
        Product: Produkt
        Min: false
        Minimal value: Najmanjša vrednost
        Max: false
        Maximal value: Največja vrednost
        Mean: false
        Mean value: Povprečna vrednost
        Variance: Varianca
        Median: Mediana
        agg: false
        def `__init__`:
            Variable selection: Izbor spremenljivk
            All: Vse
            All, including meta attributes: Vse, vključno z meta atributi
            Features from separate input signal: Stolpci, določeni z vhodnim signalom
            Selected variables: Izbrane spremenljivke
            variables: false
            Operation: Operacija
            var_name: false
            'Output variable name: ': 'Ime izhodne spremenljivke: '
        def `send_report`:
            Output:: Izhod:
            "'{self._new_var_name()}' as {self.operation.lower()} of {var_list}": "'{self._new_var_name()}' kot {self.operation.lower()} stolpcev {var_list}"
        def `_and_others`:
            "'{variables[0].name}'": true
            ', ': true
            "'{var.name}'": false
            ' and {len(variables) - limit} more': ' in še {len(variables) - limit} {plsi(len(variables) - limit, "druga|drugi|druge|drugih")}'
            " and '{variables[-1].name}'": " in '{variables[-1].name}'"
    __main__: false
    brown-selected: false
widgets/data/owcolor.py:
    class `AttrDesc`:
        def `to_dict`:
            rename: false
        def `from_dict`:
            rename: false
    class `DiscAttrDesc`:
        def `to_dict`:
            renamed_values: false
            colors: false
        def `from_dict`:
            renamed_values: false
            '{var.name}: ': false
            renaming of values ignored due to duplicate names: preimenovanje ni upoštevano zaradi podvojenih imen
            colors: false
    class `ContAttrDesc`:
        def `create_variable`:
            palette: false
        def `to_dict`:
            colors: false
        def `from_dict`:
            colors: false
    class `ContColorTableModel`:
        def `data`:
            def `_column2`:
                Copy to all: Dodeli vsem
    class `OWColor`:
        Color: Obarvaj
        Set color legend for variables.: Določi barvne legende za spremenljivke.
        icons/Colors.svg: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        def `__init__`:
            Discrete Variables: Kategorične spremenljivke
            Numeric Variables: Številske spremenljivke
            Save: Shrani
            Load: Naloži
            Reset: Povrni
            auto_apply: false
        def `save`:
            File name: Ime datoteke
            Variable definitions (*.colors): Nastavitve barv (*.colors)
            colorwidget/last-location: false
        def `_save_var_defs`:
            w: false
            categorical: false
            numeric: false
        def `load`:
            File name: Ime datoteke
            Variable definitions (*.colors): Nastavitve barv (*.colors)
            File error: Napaka pri branju
            File cannot be opened.: Datoteke ni mogoče odpreti.
            Invalid file format.: Napačna oblika datoteke.
        def `_parse_var_defs`:
            categorical: false
            numeric: false
            rename: false
            Duplicated variable names: Podvojena imena spremenljivk
            Variables will not be renamed due to duplicated names.: Zaradi podvojenih imen spremenljivke ne bodo preimenovane.
            "'{name}'": false
            'Definition for variable {names[0]}, which does not ': 'Nastavitve za spremenljivko {names[0]}, ki je ni v podatkih, '
            appear in the data, was ignored.\n: niso uporabljene.\n
            'Definitions for variables ': Nastavitve za {plsi(len(names), "|spremenljivki|spremenljivke")}
            {", ".join(names[:-1])} and {names[-1]}: {", ".join(names[:-1])} in {names[-1]}
            'Definitions for {", ".join(names[:4])} ': 'Nastavitve za {", ".join(names[:4])} '
            and {len(names) - 4} other variables: in še {z_besedo(len(names) - 4, 4, "f")} {plsi(len(names) - 4, "|drugi spremenljivki|druge spremenljivke|drugih spremenljivk")}
            , which do not appear in the data, were ignored.\n: , ki jih ni v podatkih, niso uporabljene.\n
            Invalid definitions: Neuporabljene definicije
            \n: false
        def `_start_dir`:
            basedir: false
            colorwidget/last-location: false
            ~{os.sep}: false
        def `send_report`:
            def `_report_variables`:
                def `was`:
                    '{n} (was: {o})': {n} (prej: {o})
                '    \n': false
                <td>{square(*color)} {was(value, old_value)}</td>: false
                <td colspan="{max_values}">: false
                {pal.friendly_name}</td>: false
                '<tr style="height: 2em">\n': false
                '  <th style="text-align: right">{names}</th>': false
                '  {value_cols}\n': false
                </tr>\n: false
            Features: Spremenljivke
            {pl(len(dom.class_vars), "Outcome")}: {plsi(len(dom.class_vars), "Ciljna spremenljivka|Ciljni spremenljivki|Ciljne spremenljivke")}
            Meta attributes: Meta spremenljivke
            <tr><th>{name}</th></tr>{rows}: false
            <table>{table}</table>: false
    __main__: false
    heart_disease.tab: false
widgets/data/owconcatenate.py:
    class `OWConcatenate`:
        Concatenate: Stakni tabele
        Concatenate (append) two or more datasets.: Stakni več tabel eno pod drugo.
        Transform: Predelava podatkov
        icons/Concatenate.svg: false
        concatenate, append, join, extend: concatenate, append, join, extend, stakni, združi, razširi
        class `Inputs`:
            Primary Data: Osnovna tabela
            Additional Data: Dodatne tabele
        class `Outputs`:
            Data: Podatki
        class `Error`:
            Inputs must be of the same type.: Podatki morajo biti enake vrste.
            Ignoring column names requires matching column types: Ignoriranje imen zahteva, da se tipi stolpcev ujemajo.
        class `Warning`:
            Variables with duplicated names have been renamed.: Spremenljivk s podvojenimi imeni so preimenovane.
            'Some variables may not be concatenated correctly due ': 'Nekatere spremenljivke morda ne bodo pravilno združene zaradi '
            to attributes difference ({}).: razlike v atributih ({}).
        Source ID: Vir
        all variables that appear in input tables: spremenljivke iz vseh tabel
        only variables that appear in all tables: spremenljivke, ki se pojavijo v vseh tabelah
        Class attribute: Ciljna spremenljivka
        Attribute: Spremenljivka
        Meta attribute: Meta spremenljivka
        def `__init__`:
            Variable Sets Merging: Združevanje stolpcev
            'When there is no primary table, ': 'Kadar ni podana osnovna tabela, '
            the output should contain: naj izhodna tabela vsebuje
            merge_type: true
            'The resulting table will have a class only if there ': 'Ciljna spremenljivka bo ohranjena le, če imajo '
            is no conflict between input classes.: vse vhodne tabele isto ciljno spremenljivko.
            Variable matching: Ujemanje spremenljivk
            ignore_names: false
            Use column names from the primary table,\n: Uporabi imena stolpcev iz osnovne tabele,\n
            and ignore names in other tables.: in ignoriraj imena v ostalih tabelah.
            ignore_compute_value: false
            Treat variables with the same name as the same variable,\n: Obravnavaj spremenljivke z enakimi imeni kot isto spremenljivko,\n
            even if they are computed using different formulae.: četudi so izračunane z različnimi formulami oz. iz različnih izvornih spremenljivk.
            Source Identification: Oznaka vira
            append_source_column: false
            Append data source IDs: Vsaki vrstici dodaj ime tabele, iz katere izhaja
            Feature name:: Ime spremenljivke:
            source_attr_name: false
            Place:: Vrsta:
            source_column_role: false
            auto_commit: false
        def `commit`:
            name: false
            {} ({}): true
            class_vars: false
            attributes: false
            metas: false
        def `send_report`:
            Domain: Domena
            from primary data: iz osnovne tabele
            Source data ID: Spremenljivka z imenom vira
            {} (as {}): {} (kot {})
        def `merge_domains`:
            attributes: false
            class_vars: false
            metas: false
        def `_unique_vars`:
            AttrDesc: false
            template: false
            original: false
            values: false
            number_of_decimals: false
    __main__: false
    iris: false
    zoo: false
widgets/data/owcontinuize.py:
    Use preset: Uporabi privzeto
    preset: privzeto
    Treat the variable as defined in preset: Obravnavaj spremenljivko, kot je privzeto določena
    Keep categorical: Ohrani kategorično
    keep as is: ohrani, kot je
    Keep the variable discrete: Ohrani spremenljivko diskretno
    First value as base: Prva vrednost kot osnova
    first as base: prva kot osnova
    One indicator variable for each value except the first: Ena indikatorska spremenljivka za vsako vrednost, razen za prvo
    Most frequent as base: Najpogostejša vrednost kot osnova
    frequent as base: najpogostejša kot osnova
    One indicator variable for each value except the most frequent: Ena indikatorska spremenljivka za vsako vrednost, razen za najpogostejšo
    One-hot encoding: Enično kodiranje
    one-hot: enično kodiranje
    One indicator variable for each value: Ena indikatorska spremenljivka za vsako vrednost
    Remove if more than 2 values: Odstrani, če ima več kot dve vrednosti
    remove if >2: odstrani, če >2
    Remove variables with more than two values; indicator otherwise: Odstrani spremenljivke z več kot dvema vrednostma; sicer indikator
    Remove: Odstrani
    remove: odstrani
    Remove variable: Odstrani spremenljivko
    Treat as ordinal: Obravnavaj kot ordinalno
    as ordinal: kot ordinalna
    Each value gets a consecutive number from 0 to number of values - 1: Vsaka vrednost dobi zaporedno številko od 0 do števila vrednosti - 1
    Treat as normalized ordinal: Obravnavaj kot normalizirano ordinalno
    as norm. ordinal: kot norm. ordinalna
    Same as above, but scaled to [0, 1]: Enako kot zgoraj, vendar skalirano na [0, 1]
    Treat the variable as defined in 'default setting': Obravnavaj spremenljivko, kot je prenastavljena.
    Keep as it is: Ohrani tako, kot je
    no change: brez sprememb
    Keep the variable as it is: Ohrani spremenljivko tako, kot je
    Standardize to μ=0, σ²=1: Standardiziraj na μ=0, σ²=1
    standardize: standardizirano
    Subtract the mean and divide by standard deviation: Odštej povprečje in deli s standardnim odklonom
    Center to μ=0: Centriraj na μ=0
    center: centriraj
    Subtract the mean: Odštej povprečje
    Scale to σ²=1: Skaliraj na σ²=1
    scale: skaliraj
    Divide by standard deviation: Deli s standardnim odklonom
    Normalize to interval [-1, 1]: Normaliziraj na interval [-1, 1]
    to [-1, 1]: na interval [-1, 1]
    Linear transformation into interval [-1, 1]: Linearna transformacija v interval [-1, 1]
    Normalize to interval [0, 1]: Normaliziraj na interval [0, 1]
    to [0, 1]: na interval [0, 1]
    Linear transformation into interval [0, 1]: Linearna transformacija v interval [0, 1]
    class `ContDomainModel`:
        def `__init__`:
            Meta attributes: Meta spremenljivke
            Targets: Ciljne spremenljivke
        def `data`:
            {name} {hint[0]}: false
    class `DefaultContModel`:
        def `__init__`:
            ★: false
        def `data`:
            'Preset: {self.method}': Privzeto: {self.method}
            Default for variables without specific settings: Privzeto za spremenljivke brez posebnih nastavitev
    class `ListViewSearch`:
        class `Delegate`:
            def `displayText`:
                ': {hint}': false
    class `OWContinuize`:
        Continuize: Kontinuizacija
        'Transform categorical attributes into numeric and, ': 'Kategorične atribute pretvori v številčne in '
        optionally, scale numeric values.: po želji normalizira številčne vrednosti.
        icons/Continuize.svg: false
        Transform: Predelava podatkov
        continuize, encode, dummy, numeric, one-hot, binary, treatment, contrast: continuize, encode, dummy, numeric, one-hot, binary, treatment, contrast, kodiranje, navidezni, numerično, binarni, obdelava, kontrast
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        class `Error`:
            'Some chosen methods do not support sparse data: {}': Nekatere izbrane metode ne podpirajo redkih podatkov: {}
        def `__init__`:
            Categorical Variables: Kategorične spremenljivke
            Numeric Variables: Številske spremenljivke
            Reset All: Ponastavi vse
            autosend: false
        def `_prepare_output`:
            \n: false
            ', ': false
        def `_get`:
            min: false
            max: false
            mean: false
            std: false
            major: false
        def `_scaled_vars`:
            mean: false
            std: false
            hint={hint}?!: false
            min: false
            max: false
        def `_continuized_vars`:
            major: false
            hint={hint}?!: false
            {var.name}={value}: false
        def `send_report`:
            Categorical variables: Kategorične spremenljivke
            Numeric variables: Numerične spremenljivke
            Preset: Privzeto
            Unlisted: Nerazvrščeno
            'Any unlisted attributes default to preset option, and ': 'Za atribute, ki niso izpisani, je uporabljena privzeta nastavitev, '
            'unlisted meta attributes and target variables are kept ': 'neizpisani meta atributi pa ostajajo '
            as they are: nespremenjeni.
        def `migrate_settings`:
            continuous_treatment: false
            zero_based: false
            cont_var_hints: false
            disc_var_hints: false
            multinomial_treatment: false
            class_treatment: false
    __main__: false
    heart_disease: false
widgets/data/owcorrelations.py:
    class `CorrelationType`:
        def `items`:
            Pearson correlation: Pearsonova korelacija
            Spearman correlation: Spearmanova korelacija
    class `CorrelationRank`:
        def `row_for_state`:
            name: false
            :: true
            {:+.3f}: false
    class `OWCorrelations`:
        Correlations: Korelacije
        Compute all pairwise attribute correlations.: Izračuna korelacije med vsemi pari spremenljivk.
        icons/Correlations.svg: false
        Unsupervised: Nenadzorovano učenje
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
            Features: Spremenljivke
            Correlations: Korelacije
        class `Information`:
            Constant features have been removed.: Konstantne spremenljivke so odstranjene.
        class `Warning`:
            At least two numeric features are needed.: Potrebni sta vsaj dve številski spremenljivki.
            At least two instances are needed.: Potrebna sta vsaj dva primera.
        def `__init__`:
            correlation_type: false
            (All combinations): (Vse kombinacije)
            feature: false
        def `set_data`:
            removed: false
        def `commit`:
            Correlation: Korelacije
            uncorrected p: nepopravljen p
            FDR: FDR
            Feature 1: Spremenljivka 1
            Feature 2: Spremenljivka 2
            Correlations: Korelacije
        def `migrate_context`:
            selection: false
    __main__: false
    iris: false
widgets/data/owcreateclass.py:
    class `ValueFromDiscreteSubstring`:
        def `__setattr__`:
            patterns: false
            case_sensitive: false
            match_beginning: false
            variable: false
            map_values: false
    class `OWCreateClass`:
        Create Class: Ustvari razrede
        Create class attribute from a string attribute: Ustvari razrede iz besedilne spremenljivke.
        icons/CreateClass.svg: false
        Transform: Predelava podatkov
        create class: create class, razred
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        class: razred
        class `Warning`:
            Data contains only numeric variables.: Podatki vsebujejo samo številske vrednosti.
        class `Error`:
            Class name duplicated.: Spremenljivka s tem imenom že obstaja.
            Class name should not be empty.: Ime razreda ne more biti prazno.
        def `__init__`:
            class_name: false
            New Class Name: Ime novega razreda
            Match by Substring: Vzorci in razredi
            attribute: false
            From column:: Iz stolpca:
            Name: Ime
            Substring: Vzorec
            Count: Primerov
            +: true
            Options: Možnosti
            match_beginning: false
            Match only at the beginning: Vzorec mora biti na začetku
            case_sensitive: false
            Case sensitive: Loči med velikimi in malimi črkami
            Apply: Uveljavi
        def `adjust_n_rule_rows`:
            def `_add_line`:
                ×: true
                'color: gray': false
        def `class_labels`:
            ^C\\d+: true
            C{}: true
        def `update_counts`:
            def `_set_labels`:
                {}: true
                + {}: true
                {n_before} o: {n_before} od
                "f {n_total} matching {pl(n_total, 'instance')} ": " {n_total} {plsi(n_total, 'pojavitve|pojavitev|pojavitev')} "
                {pl(n_before, 'is|are')} already covered above.: {plsi(n_before, 'je že pokrita|sta že pokriti|so že pokrite|je že pokritih')} s predhodnimi vzorci.
                All matching instances are already covered above: Vse pojavitve so že pokrite s predhodnimi vzorci.
            def `_set_placeholders`:
                (remaining instances): (preostali primeri)
                (unused): (neuporabljeno)
        def `send_report`:
            def `_cond_part`:
                '<b>{class_name}</b> ': false
                if <b>{self.attribute.name}</b> contains <b>{patt}</b>: če <b>{self.attribute.name}</b> vsebuje <b>{patt}</b>
                otherwise: sicer
            def `_count_part`:
                already covered above: s predhodnimi vzorci
                the single matching instance is {aca}: pojavitev je že pokrita {aca}
                both matching instances are {aca}: obe pojavitvi sta že pokriti {aca}
                all {n_total} matching instances are {aca}: {plsi(n_total, 'edina|obe|vse|vseh')} {n_total} {plsi(n_total, 'pojavitev je že pokrita|pojavitvi sta že pokriti|pojavitve so že pokrite|pojavitev je že pokritih')} {aca}
                {n_matched} {pl(n_matched, 'instance')}: {n_matched} {plsi(n_matched, 'primer')}
                {n_matched} matching {pl(n_matched, 'instance')}: {n_matched} {plsi(n_matched, 'pojavitev|pojavitvi|pojavitve|pojavitev')}
                " (+{n_already} that {pl(n_already, 'is|are')} {aca})": " (+{n_already}, ki {pl(n_already, 'je že pokrita|sta že pokriti|so že pokrite|je že pokritih')} {aca})"
            Input: Vhod
            Source attribute: Izvorni stolpec
            <li>{}; {}</li>: false
            Output: Izhod
            Class name: Ime razreda
            <ol>{}</ol>: false
    __main__: false
    zoo: false
widgets/data/owcreateinstance.py:
    class `DiscreteVariableEditor`:
        def `__init__`:
            ?: false
    class `ContinuousVariableEditor`:
        def `__init__`:
            Min/Max cannot be NaN.: false
            class `DoubleSpinBox`:
                def `textFromValue`:
                    ?: false
    class `TimeVariableEditor`:
        yyyy-MM-dd: true
        hh:mm:ss: true
        def `__init__`:
            '{TimeVariableEditor.DATE_FORMAT} ': false
            {TimeVariableEditor.TIME_FORMAT}: false
    class `OWCreateInstance`:
        Create Instance: Sestavi primer
        Interactively create a data instance from sample dataset.: Ročno sestavi nov primer.
        icons/CreateInstance.svg: false
        Transform: Predelava podatkov
        create instance, simulator: create instance, simulator, nov
        class `Inputs`:
            Data: Podatki
            Reference: Referenca
        class `Outputs`:
            Data: Podatki
        class `Information`:
            'Variables with only missing values were ': 'Spremenljivke, ki nimajo nobene znane vrednosti '
            removed from the list.: niso na voljo.
        Median: Mediana
        Mean: Povprečje
        Random: Naključno
        Input: Vhodni primer
        median: false
        mean: false
        random: false
        input: false
        name: false
        Variable: Spremenljivka
        variable: false
        Value: Vrednost
        header: false
        def `__init__`:
            Filter...: true
            buttonBox: false
            append_to_data: false
            Append this instance to input data: Dodaj primer k vhodnim podatkom
            auto_commit: false
        def `_initialize_values`:
            median: false
            mean: false
            random: false
            input: false
        def `_create_data_from_values`:
            created: ustvarjeni
        def `_append_to_data`:
            __source_widget: false
            Source ID: Vir
        def `send_report`:
            Input: Vhod
            Output: Izhod
            {var.name}:: false
            Values: Vrednosti
    __main__: false
    housing: false
widgets/data/owcsvimport.py:
    T: false
    K: false
    E: false
    OWCSVFileImport: false
    class `Options`:
        def `__init__`:
            utf-8: false
            ColumnType: false
            .: true
        def `__repr__`:
            {}{!r}: false
        def `as_dict`:
            encoding: false
            delimiter: false
            quotechar: false
            doublequote: false
            skipinitialspace: false
            quoting: false
            columntypes: false
            rowspec: false
            decimal_separator: false
            group_separator: false
        def `from_dict`:
            encoding: false
            delimiter: false
            quotechar: false
            doublequote: false
            quoting: false
            skipinitialspace: false
            columntypes: false
            rowspec: false
            decimal_separator: false
            .: true
            group_separator: false
        def `spec_as_encodable`:
            start: false
            stop: false
            value: false
        def `spec_from_encodable`:
            start: false
            stop: false
            value: false
    class `CSVImportDialog`:
        def `__init__`:
            dialog-button-box: false
        def `options`:
            decimal: false
            group: false
        def `restoreDefaults`:
            utf-8: false
        def `__update_preview`:
            rb: false
    def `dialog_button_box_set_enabled`:
        __p_dialog_button_box_set_enabled: false
    class `VarPathItem`:
        def `data`:
            ${{{vpath.name}}}/{vpath.relpath}: true
            ' (missing)': ' (ne obstaja)'
    class `ImportItem`:
        def `fromPath`:
            ImportItem: false
            ${{{path.name}}}/{path.relpath}: true
    text/csv: false
    Text - comma separated: Besedilo - stolpci ločeni z vejicami
    *.csv: false
    *: false
    text/tab-separated-values: false
    Text - tab separated: Besedilo - stolpci ločeni s tabulatorji
    *.tsv: false
    text/plain: false
    Text - all files: Vse besedilne datoteke
    *.txt: false
    class `FileDialog`:
        def `filterStr`:
            {f.name} ({', '.join(f.globs)}): true
    def `default_options_for_mime_type`:
        text/csv: false
        text/tab-separated-values: false
        utf-8: false
        utf-16: false
        iso8859-1: iso8859-2
    class `OWCSVFileImport`:
        CSV File Import: Uvoz datoteke CSV
        Import a data table from a CSV formatted file.: Prebere podatkovno tabelo v obliki CSV.
        icons/CSVFile.svg: false
        Data: Podatki
        csv file import, file, load, read, open, csv: csv file import, file, load, read, open, csv, datoteka, nalaganje, branje, odpri
        class `Outputs`:
            Data: Podatki
            Loaded data set.: Prebrani podatki.
            Data Frame: Podatkovni okvir
        class `Error`:
            Unexpected error: Nepričakovana napaka
            Encoding error\n: Napaka v kodiranju besedila
            'The file might be encoded in an unsupported encoding or it ': 'Datoteka uporablja nepodprto kodiranje, '
            might be binary: morda pa je binarna
        directory: false
        filter: false
        def `__init__`:
            File:: Datoteka:
            recent-combo: falsed
            Recent files.: Nedavne datoteke.
            Recent files…: Nedavne datoteke…
            …: true
            Browse filesystem: Izberi datoteko
            Import any file…: Uvozi poljubno datoteko…
            Import relative to workflow file…: Uvozi poljubno datoteko…
            Import a file within the workflow file directory: Uvozi datoteko v mapi s trenutnim delotokom
            basedir: false
            Info: true
            Load: Naloži
            Import Options…: Nastavitve branja…
            'button-layout: {:d};': false
        def `workflowEnvChanged`:
            basedir: false
        def `_browse_for_missing`:
            def `accepted`:
                text/plain: false
        def `_browse_dialog`:
            Open Data File: Odpri datoteko s podatki
            directory: false
            filter: false
            def `store_state`:
                directory: false
                filter: false
        def `_might_be_binary_mb`:
            The '{basename}' may be a binary file.\n: "'{basename}' je najbrž binarna datoteka.\n"
            Are you sure you want to continue?: Vseeno nadaljujem?
        def `_path_must_be_relative_mb`:
            Invalid path: Napačna mapa
            Selected path is not within '{prefix}': Mapa mora biti znotraj '{prefix}'
        def `browse`:
            text/plain: false
            Import Options: Nastavitve branja
        def `_activate_import_dialog_for_item`:
            Import Options: Nastavitve uvoza
            size: false
            def `onfinished`:
                size: false
        path: false
        options: false
        def `_local_settings`:
            {}.ini: false
        def `_note_recent`:
            recent: false
            path: false
            options: false
        def `__set_read_progress`:
            qint64: false
        def `cancel`:
            Cancelled: Prekinjeno
            <div>Cancelled<br/><small>Press 'Reload' to try again</small></div>: <div>Prekinjeno<br/><small>Pritisni 'Ponovno naloži', da ponovim poskus</small></div>
        def `__set_running_state`:
            Running: V teku
            Restart: Ponovno
            '<div>Loading: <i>{}</i><br/>': <div>Branje: <i>{}</i><br/>
        def `__clear_running_state`:
            Reload: Ponovno naloži
        def `__set_error_state`:
            '<div><i>{basename}</i> was not loaded due to a text encoding ': Datoteke <div><i>{basename}</i> ne morem prebrati, ker je shranjena v neznanem
            'error. The file might be saved in an unknown or invalid ': kodiranju ali pa je binarna.
            encoding, or it might be a binary file.</div>: </div>
            <div><i>{basename}</i> was not loaded due to an error:: Datoteke <div><i>{basename}</i> ne morem prebrati:
            "<p style='white-space: pre;'>{err}</p>": true
        def `_update_status_messages`:
            "{n_instances} {pl(n_instances, 'row')}, ": "{n_instances} {plsi(n_instances, 'vrstica')}, "
            "{n_features} {pl(n_features, 'feature')}, ": "{n_features} {plsi(n_features, 'spremenljivka')}, "
            {n_meta} {pl(n_meta, 'meta')}: {n_meta} meta {plsi(n_meta, 'spremenljivka')}
        def `itemsFromSettings`:
            recent: false
            path: false
            options: false
            Could not reconstruct options for '%s': false
        def `_replacements`:
            basedir: false
        def `_restoreState`:
            Failed to restore '%s': false
        def `canDropUrl`:
            text/plain: false
        def `migrate_settings`:
            compatibility_mode: false
            _session_items: false
            _session_items_v2: false
    def `sniff_csv_with_path`:
        utf-8: false
        rt: false
    def `_open`:
        r: false
        rb: false
        rt: false
        .gz: false
        .bz2: false
        .xz: false
        .zip: false
        t: false
        Expected a single file in the archive.: Pričakujem arhiv z eno samo datoteko.
    application/gzip: false
    application/zip: false
    application/x-xz: false
    application/x-bzip: false
    def `_mime_type_for_path`:
        rb: false
    ?: false
    .: false
    ~: false
    nan: false
    NAN: false
    NaN: false
    N/A: false
    n/a: false
    NA: false
    NaT: false
    NAT: false
    def `load_csv`:
        def `dtype`:
            float: false
            category: false
            object: false
        X.: false
        .: true
        decimal: false
        thousands: false
        float_precision: false
        round_trip: false
        rb: false
        read: false
        object: false
        coerce: false
        {prefix}{column}: false
    def `guess_data_type`:
        category: false
    class `TaskState`:
        qint64: false
    def `pandas_to_table`:
        str: false
        M8[ns]: false
        "Column '{}' with dtype: {} skipped.": false
    __main__: false
widgets/data/owdatainfo.py:
    class `OWDataInfo`:
        Data Info: Podatki o tabeli
        orange.widgets.data.info: false
        Display basic information about the data set: Pokaže osnovne podatke o tabeli.
        icons/DataInfo.svg: false
        Data: Podatki
        data info, information, inspect: data info, information, inspect, podatki, pregled
        class `Inputs`:
            Data: Podatki
        def `__init__`:
            Data table properties: Lastnosti tabele
            Additional attributes: Dodatni podatki
        def `data`:
            Name: Ime
            Location: Lokacija
            Size: Velikost
            Features: Značilke
            Targets: Ciljne spremenljivke
            Metas: Meta atributi
            Missing data: Manjkajoči podatki
            def `set_exact_length`:
                Size: Velikost
        def `update_info`:
            '<style>
                       th { text-align: right; vertical-align: top; }
                       th, td { padding-top: 4px; line-height: 125%}
                    </style>': false
            def `dict_as_table`:
                <table>: false
                '<tr><th>{label}: </th><td>': false
                <br/>: false
                </td></tr>: false
                </table>: false
            No data.: Ni podatkov.
        def `send_report`:
            Data table properties: Lastnosti tabele
            Additional attributes: Dodatni podatki
        def `_p_name`:
            name: false
            -: true
        def `_p_location`:
            ' ': false
            {key}={value}: false
            password: false
            SQL Table using connection:<br/>{connection_string}: Tabels SQL s povezavo:<br/>{connection_string}
        def `_p_size`:
            {n} {pl(n, 'row')}: {n} {plsi(n, 'vrstica')}
            ~{n} {pl(n, 'row')}: ~{n} {plsi(n, 'vrstica')}
            , {ncols} {pl(ncols, 'column')}: , {ncols} {plsi(ncols, 'stolpec|stolpca|stolpci|stolpcev')}
            features: značilke
            meta attributes: meta atributi
            targets: ciljne spremenljivke
            ; sparse {', '.join(sparseness)}: ; redke matrike {', '.join(sparseness)}
        def `_p_targets`:
            numeric target variable: številska ciljna spremenljivka
            'categorical outcome with ': kategorična ciljna spremenljivka {plsi_sz(nclasses)}
            {nclasses} {pl(nclasses, 'class|classes')}: " {z_besedo(nclasses, 6, 'm')} {plsi(nclasses, 'razredom|razredoma|razredi')}"
            {disc_class} categorical {pl(disc_class, 'target')}: " {z_besedo(disc_class, 1, 'f')} {plsi(disc_class, '|kategorični ciljni spremenljivki|kategorične ciljne spremenljivke|kategoričnih ciljnih spremenljivk')}"
            {cont_class} numeric {pl(cont_class, 'target')}: " {z_besedo(cont_class, 1, 'f')} {plsi(cont_class, '|številski ciljni spremenljivki|številske ciljne spremenljivke|številskih ciljnih spremenljivk')}"
            multi-target data,<br/>: več ciljnih spremenljivk,<br/>
        def `_p_missing`:
            (not checked for SQL data): (neznano, podatki iz SQL)
            feature: značilkah
            targets: ciljni spremenljivki
            meta variable: meta atributih
            {n_miss} ({n_miss / np.prod(part.shape):.1%}) in {name}: {n_miss} ({n_miss / np.prod(part.shape):.1%}) v {name}
            none: ni
            ', ': true
        def `_pack_var_counts`:
            categorical: kategorične
            numeric: numerične
            text: besedilna
            ', ': false
            {count} {name}: {name}: {count}
    __main__: false
    heart_disease: false
widgets/data/owdatasampler.py:
    class `OWDataSampler`:
        Data Sampler: Vzorčenje
        'Randomly draw a subset of data points ': 'Naključni vzorec '
        from the input dataset.: iz vhodne tabele.
        icons/DataSampler.svg: false
        Transform: Predelava podatkov
        data sampler, random: data sampler, random, naključno
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data Sample: Vzorec podatkov
            Remaining Data: Preostali podatki
        class `Information`:
            Compatibility mode\n: Združljivostni način\n
            New versions of widget have swapped outputs for cross validation: Nova različica gradnika ima zamenjane izhode pri prečnem preverjanju
        class `Warning`:
            Stratification failed.\n{}: Stratifikacija ni uspela.\n{}
            Sample is bigger than input.: Velikost vzorca ne more presegati števila vhodnih primerov.
        class `Error`:
            Number of subsets exceeds data size.: Število podmnožic ne more presegati števila vhodnih primerov.
            Sample can't be larger than data.: Vzorec ne sme biti večji od podatkov.
            Data is too small to stratify.: Podatki so premajhni za stratifikacijo.
            Dataset is empty.: Zbirka podatkov je prazna.
        def `__init__`:
            Sampling Type: Vrsta vzorčenja
            sampling_type: false
            Fixed proportion of data:: Predpisani delež podatkov:
            sampleSizePercentage: false
            %d %%: true
            Fixed sample size: Predpisana velikost vzorca:
            sampleSizeNumber: false
            'Instances: ': 'Število primerov: '
            replacement: false
            Sample with replacement: 'Vzorči s ponavljanjem: '
            Cross validation: Prečno preverjanje
            Number of subsets:: Število podmnožic:
            number_of_folds: false
            selectedFold: false
            Unused subset:: Neuporabljena podmnožica:
            Selected subset:: Izbrana podmnožica:
            Bootstrap: Samovzorčenje (bootstrap)
            Time:: Čas:
            sampleSizeSqlTime: false
            ' sec': ' sek'
            Percentage: Delež
            sampleSizeSqlPercentage: false
            ' %': false
            Options: Možnosti
            use_seed: false
            Replicable (deterministic) sampling: Ponovljivo vzorčenje
            stratify: false
            Stratify sample (when possible): Stratificiraj (če je možno)
            sql_dl: false
            Download data to local memory: Preberi podatke v pomnilnik
            Sample Data: Vzorči
        def `send_report`:
            Random sample with {self.sampleSizePercentage} % of data: Naključen vzorec {plsi_sz(self.sampleSizePercentage)} {self.sampleSizePercentage} % podatkov
            Random data instance: Naključen primer iz podatkov
            Random sample with {self.sampleSizeNumber} data instances: Naključen vzorec {plsi_sz(self.sampleSizeNumber)} {self.sampleSizeNumber} {plsi(self.sampleSizeNumber, 'primerom|primeroma|primeri')}
            , with replacement: , s ponavljanjem
            '{self.number_of_folds}-fold cross-validation ': '{self.number_of_folds}-kratno prečno preverjanje '
            without subset #{self.selectedFold}: brez podmnožice #{self.selectedFold}
            Bootstrap: Samovzorčenje
            , stratified (if possible): , stratificirano (če je možno)
            , deterministic: , ponovljivo
            Sampling type: Vrsta vzorčenja
            Input: Vhod
            {len(self.data)} {pl(len(self.data), 'instance')}: {len(self.data)} {plsi(len(self.data), 'primer')}
            Sample: Vzorec
            {self.sampled_instances} {pl(self.sampled_instances, 'instance')}: {self.sampled_instances} {plsi(self.sampled_instances, 'primer')}
            Remaining: Preostali
            {self.remaining_instances} {pl(self.remaining_instances, 'instance')}: {self.remaining_instances} {plsi(self.remaining_instances, 'primer')}
        def `migrate_settings`:
            sampling_type: false
            compatibility_mode: false
    __main__: false
    iris: false
widgets/data/owdatasets.py:
    def `format_exception`:
        \n: false
    class `Namespace`:
        def `__init__`:
            English: false
    class `OWDataSets`:
        Datasets: Zbirke podatkov
        Load a dataset from an online repository: Naloži podatke s spletnega skladišča.
        icons/DataSets.svg: false
        orangecontrib.prototypes.widgets.owdatasets.OWDataSets: false
        datasets, online, data, sets: datasets, online, data, sets, zbirka, podatki
        https://datasets.biolab.si/: false
        datasets: false
        English: Slovenščina
        All Languages: (Vsi jeziki)
        islocal: false
        label: false
        title: false
        Title: Ime
        size: false
        Size: Velikost
        instances: false
        Instances: Primerov
        variables: false
        Variables: Spremenljivke
        target: false
        Target: Ciljna spr.
        tags: false
        Tags: Oznake
        class `Error`:
            Could not fetch dataset list: Ne morem prebrati seznama
        class `Warning`:
            'Could not fetch datasets list, only local ': Ne morem prebrati seznama, kažem
            cached datasets are shown: le lokalno shranjene podatke
        class `Outputs`:
            Data: Podatki
        def `__init__`:
            label: false
            _header_index: false
            Search for data set ...: Poišči podatke ...
            'Show data sets in ': 'Prikaži zbirke podatkov v jeziku '
            Press Return or double-click to send: Pritisni Enter ali dvoklikni za izbor
            Description: Opis
            splitter_state: false
            Initializing: Zaganjam
        def `_parse_info`:
            version: false
        def `update_model`:
            ' ': false
            '  ': false
            ', ': false
            /: false
        def `__set_index`:
            Error while fetching updated index: false
        def `set_model`:
            X: false
            '888 bytes ': '888 bajtov '
            '9999.9 MB ': false
            100000000: false
            1000000: false
        def `__update_cached_state`:
            ' ': false
            '  ': false
        def `__on_selection`:
            /: false
        def `commit`:
            Fetching...: Pobiram...
        def `__commit_complete`:
            Error:: Napaka:
        def `migrate_settings`:
            selected_id: false
            \\: false
            /: false
    def `variable_icon`:
        categorical: false
        x: false
        numeric: false
    def `make_html_list`:
        '"margin: 5px; text-indent: -40px; margin-left: 40px;"': false
        def `format_item`:
            <p style={}><small>{}</small></p>: false
        \n: false
    def `description_html`:
        ' ({})': true
        , from {}: , z {}
        <b>{}</b>{}{}: true
        <p>{}</p>: true
        <small><b>See Also</b>\n: <small><b>Glej tudi</b>\n
        </small>: true
        <small><b>References</b>\n: <small><b>Viri</b>\n
        \n: true
    __main__: false
widgets/data/owdiscretize.py:
    \s*,\s*: true
    year: leto|leti|leta|let
    month: mesec|meseca|meseci|mesecev
    day: dan|dneva|dnevi|dni
    week: teden|tedna|tedni|tednov
    hour: ura
    minute: minuta
    second: sekunda
    invalid width: nepravilna širina
    too many intervals: preveč intervalov
    def `_fixed_width_discretization`:
        .: true
    def `_mdl_discretization`:
        no discrete class: razred ni kategoričen
    def `_custom_discretization`:
        invalid cuts: nepravilne meje
    Use default setting: Uporabi privzeto nastavitev
    default: privzeto
    Treat the variable as defined in 'default setting': Obravnavaj spremenljivko po določeni privzeti metodi
    Keep numeric: Ohrani številsko
    keep: ohrani
    Keep the variable as is: Pusti spremenljivko tako, kot je
    Entropy vs. MDL: Entropija proti MDL
    entropy: entropija
    Split values until MDL exceeds the entropy (Fayyad-Irani)\n: Deli, dokler je zmanjšanje entropije večje od MDL (Fayyad-Irani)\n
    (requires discrete class variable): (zahteva kategorično ciljno spremenljivko)
    'Equal frequency, intervals: ': 'Enaka pogostost, št. intervalov: '
    equal freq, k={}: pogostost, k={}
    Create bins with same number of instances: Določi intervale z enakim številom primerov
    freq_spin: false
    'Equal width, intervals: ': Enaka širina, št. intervalov
    equal width, k={}: širina, k={}
    Create bins of the same width: Sestavi intervale enake širine
    width_spin: false
    Remove: Odstrani
    remove: odstrani
    Remove variable: Odstrani spremenljivko
    'Natural binning, desired bins: ': 'Naravni intervali, želeno število: '
    binning, desired={}: naravni, število={}
    'Create bins with nice thresholds; ': 'Sestavi intervale z lepimi mejami; '
    try matching desired number of bins: število intervalov je čim bližje želenemu
    binning_spin: false
    'Fixed width: ': 'Določena širina: '
    fixed width {}: širina {}
    Create bins with the given width (not for time variables): Sestavi intervale določene širine
    width_line: false
    'Time interval: ': 'Časovni interval: '
    time interval, {} {}: čas, {} {}
    Create bins with the give width (for time variables): Sestavi intervale z določeno širino (za časovne spremenljivke)
    width_time_line: false
    width_time_unit: false
    'Custom: ': 'Ročno: '
    'custom: {}': ročno: {}
    Use manually specified thresholds: Uporabi ročno določene meje
    threshold_line: false
    def `format_desc`:
        {time_units[unit]}(s): {plsi(1, time_units[unit])}
        {pl(width, time_units[unit])}: {plsi(width, time_units[unit])}
    class `DiscDomainModel`:
        def `data`:
            '<b>{var.name}: </b>': false
            <p style="white-space:pre">{tip}: false
            {",&nbsp;&nbsp;".join(values)}</p>: false
            <br/>: false
            - {value}<br/>: false
            ' ({format_desc(hint)}){points}': false
    class `DefaultDiscModel`:
        def `__init__`:
            ★: true
        def `data`:
            'Default setting: ': 'Privzeta nastavitev: '
            Default setting for variables without specific setings: Privzeta metoda za spremenljivke brez specifičnih nastavitev
    class `IncreasingNumbersListValidator`:
        def `validate`:
            +-., 0123456789: false
            ' ': false
            ', ': true
        def `show_tip`:
            ::show_tip_qlabel: false
            tip-label: false
            QTipLabel: false
            hide-timer: false
    DState: false
    method: false
    points: false
    disc_var: false
    Default: false
    Leave: false
    MDL: false
    EqualFreq: false
    k: false
    EqualWidth: false
    Custom: false
    class `OWDiscretize`:
        Discretize: Diskretizacija
        Discretize numeric variables: Diskretizacija številskih spremenljivk.
        Transform: Predelava podatkov
        icons/Discretize.svg: false
        discretize, bin, categorical, nominal, ordinal: discretize, bin, categorical, nominal, ordinal, kategorije, intervali, številske, ordinalne, spremenljivke
        class `Inputs`:
            Data: Podatki
            Input data table: Vhodni podatki
        class `Outputs`:
            Data: Podatki
            Table with categorical features: Tabela z diskretnimi spremenljivkami
        def `__init__`:
            autosend: false
        def `_create_buttons`:
            def `manual_cut_editline`:
                e.g. 0.0, 0.5, 1.0: npr. 0.0, 0.5, 1.0
                <p style="white-space:pre">: false
                Enter cut points as a comma-separate list of \n: Navedite prage kot seznam števil, ločenih z vejico \n
                strictly increasing numbers e.g. 0.0, 0.5, 1.0).</p>: v naraščajočem vrstnem redu, npr. 0.0, 0.5, 1.0.</p>
            {unit}(s): {plsi(1, unit)}
            CC: KP
            Copy the current cut points to manual mode: Uporabi trenutne vrednosti kot ročno nastavitev
        def `_update_discretizations`:
            values: false
        def `_discretize_var`:
            ': <keep, time var>': : <ohrani, časovna>
            ': <keep, not time>': : <ohrani, ni časovna>
            ' <{dvar}>': false
            ' <removed>': ' <odstranjena>'
            ': ': true
            ', ': true
        def `_copy_to_manual`:
            ', ': true
        def `send_report`:
            ': ': true
            {name} ({format_desc(desc.hint)}): false
            ', ': true
            Variables: Spremenljivke
        def `migrate_settings`:
            default_method: false
            default_method_name: false
            default_k: false
            default_cutpoints: false
            context_settings: false
            saved_var_states: false
            Leave: false
            Keep: false
            Default: false
            Custom: false
            ', ': false
            {x:g}: false
            var_hints: false
    __main__: false
    heart_disease: false
widgets/data/oweditdomain.py:
    V: false
    H: false
    class `_DataType`:
        def `name_type`:
            Categorical: false
            Real: false
            Time: false
            String: false
    class `Categorical`:
        Categorical: false
        name: false
        categories: false
        annotations: false
    class `Real`:
        Real: false
        name: false
        format: false
        annotations: false
    class `String`:
        String: false
        name: false
        annotations: false
    class `Time`:
        Time: false
        name: false
        annotations: false
    class `Rename`:
        Rename: false
        name: false
    class `CategoriesMapping`:
        CategoriesMapping: false
        mapping: false
    class `Annotate`:
        Annotate: false
        annotations: false
    class `Unlink`:
        Unlink: false
    class `StrpTime`:
        StrpTime: false
        label: false
        formats: false
        have_date: false
        have_time: false
    class `CategoricalVector`:
        CategoricalVector: false
        vtype: false
        data: false
    class `RealVector`:
        RealVector: false
        vtype: false
        data: false
    class `StringVector`:
        StringVector: false
        vtype: false
        data: false
    class `TimeVector`:
        TimeVector: false
        vtype: false
        data: false
    class `AsString`:
        AsString: false
    class `AsContinuous`:
        AsContinuous: false
        def `__call__`:
            g: false
    class `AsCategorical`:
        AsCategorical: false
    class `AsTime`:
        AsTime: false
        def `__call__`:
            M8[us]: false
            def `data`:
                coerce: false
                M8[us]: false
    def `formatter_for_dtype`:
        __formatter: false
    def `masked_unique`:
        O: false
        masked value if present must be in last position: false
    def `categorical_from_vector`:
        __formater: false
        ?: false
    def `categorize_unique`:
        masked value if present must be last: false
    class `DictItemsModel`:
        def `__init__`:
            Key: Ime oznake
            Value: Vrednost
    class `BaseEditor`:
        def `__init__`:
            editor-form-layout: false
    class `VariableEditor`:
        def `__init__`:
            name-editor: false
            Name:: Ime:
            Unlink variable from its source variable: Prekini povezavo z izvorno spremenljivko
            'Make Orange forget that the variable is derived from ': S tem bo Orange "pozabil", da je spremenljivka\n
            another.\n: izračunana iz vrednosti neke druge spremenljivke.\n
            'Use this for instance when you want to consider variables ': To lahko uporabimo, da, na primer, dosežemo, da bo\n
            'with the same name but from different sources as the same ': dve enako poimenovani spremenljivki iz različnih virov\n
            variable.: obravnaval kot isto spremenljivko.
            annotation-pairs-edit: false
            annotate-action-group: false
            +: true
            action-add-label: false
            Add a new label.: Dodaj novo oznako.
            \N{MINUS SIGN}: true
            action-delete-label: false
            Remove selected label.: Odstrani izbrano oznako.
            Add: Dodaj
            Remove: Odstrani
            Labels:: Oznake:
    class `GroupItemsDialog`:
        other: ostalo
        def `__init__`:
            Group selected values: Združi izbrane vrednosti
            Group values with less than: Združi vrednosti z manj kot
            Group all except: Združi vse vrednosti, razen
            selected_radio: false
            occurrences: pojavitvami
            most frequent values: najpogostejših
            frequent_abs_spin: false
            X: false
            frequent_rel_spin: false
            ' %': true
            n_values_spin: false
            'New value name: ': 'Ime nove vrednosti: '
            name_line_edit: false
            dialog-button-box: false
        def `get_dialog_settings`:
            frequent_abs_spin: false
            frequent_rel_spin: false
            n_values_spin: false
            name_line_edit: false
            selected_radio: false
    class `CountedListModel`:
        def `__counts`:
            key value '{key}' is not hashable: false
    class `CategoriesEditDelegate`:
        def `initStyleOption`:
            (dropped): (odstranjeno)
            (added): (dodano)
            {sourcename} \N{RIGHTWARDS ARROW} {text}: false
            (merged): (združeno)
            ' ': false
        def `createEditor`:
            QStyleOptionViewItem: false
        def `updateEditorGeometry`:
            QStyleOptionViewItem: false
    class `DiscreteVariableEditor`:
        def `__init__`:
            action-group-categories: false
            Move up: Pomakni višje
            \N{UPWARDS ARROW}: true
            Move the selected item up.: Pomakni izbrano vrednost višje.
            Move down: Premakni nižje
            \N{DOWNWARDS ARROW}: true
            Move the selected item down.: Premakni izbrano vrednost nižje.
            Add: Dodaj
            +: true
            action-add-item: false
            Append a new item.: Dodaj novo vrednost
            Remove item: Odstrani vrednost
            \N{MINUS SIGN}: true
            action-remove-item: false
            Delete the selected item.: Odstrani izbrano vrednost
            Rename selected items: Preimenuj izbrane vrednosti
            =: true
            action-rename-selected-items: false
            Rename selected items.: Preimenuj izbrane vrednosti.
            Merge: Združi
            M: Z
            action-activate-merge-dialog: false
            Merge infrequent items.: Združi redkejše vrednosti
            Remove: Odstrani
            Merge selected items: Združi izbrane vrednosti
            Merge infrequent: Združi redke
            Values:: Vrednosti:
        def `set_data_categorical`:
            'invalid mapping: {tr.mapping}': false
        def `get_data`:
            {mapping}, {var}: false
        def `_remove_category`:
            invalid state '{state}' for {index.row()}: false
        def `_merge_categories`:
            Import Options: Združevanje
    class `TimeVariableEditor`:
        def `__init__`:
            Detect automatically: Zaznaj samodejno
            Format:: Oblika:
    class `VariableEditDelegate`:
        categorical: kategorično
        numeric: številsko
        string: besedilno
        time: časovno
        def `initStyleOption`:
            {var.name} \N{RIGHTWARDS ARROW} {tr.name}: false
            ' (reinterpreted as ': ' (pretolmačena v '
            {self.ReinterpretNames[type(tr)]}): true
        def `helpEvent`:
            Name `{name}` is duplicated: Ime '{name}' je podvojeno.
    class `ReinterpretVariableEditor`:
        def `__init__`:
            def `decorate`:
                type-combo: false
                Categorical: Kategorična
                Numeric: Številska
                Text: Besedilna
                Time: Časovna
                (Restore original): (Obnovi izvorno)
                Type:: Vrsta:
        def `_set_data_single`:
            type-combo: false
        def `_set_data_multi`:
            type-combo: false
        def `__reinterpret_activated_single`:
            type-combo: false
        def `__reinterpret_activated_multi`:
            type-combo: false
    class `OWEditDomain`:
        Edit Domain: Uredi domeno
        Rename variables, edit categories and variable annotations.: Preimenuj spremenljivke, uredi kategorije in oznake.
        icons/EditDomain.svg: false
        edit domain, rename, drop, reorder, order: edit domain, rename, drop, reorder, order, preimenuj, odstrani, preuredi, uredi
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        class `Error`:
            A variable name is duplicated.: Ime spremenljivke je podvojeno.
        def `__init__`:
            Variables: Spremenljivke
            Edit: Uredi
            output_table_name: false
            'Output table name: ': Ime izhodne tabele:
            Reset All: Povrni vse
            button-reset-all: false
            Reset all variables to their input state.: Povrni vse vrednosti v začetno stanje.
            Reset Selected: Povrni izbrane
            button-reset: false
            Rest selected variable to its input state.: Povrni izbrane spremenljivke v začetno stanje.
            Apply: Potrdi
            button-apply: false
            Apply changes and commit data on output.: Potrdi spremembe in pošlji podatke na izhod.
        def `_restore_transform`:
            'Failed to restore transform: {t}, {err}': false
        def `_set_modified`:
            button-apply: false
        def `send_report`:
            <ul>: false
            <li>{part}</li>: false
            </ul>: false
            No changes: Ni sprememb
        def `migrate_context`:
            domain_change_hints: false
            Orange.data.variable: false
            DiscreteVariable: false
            Categorical: false
            TimeVariable: false
            Time: false
            ContinuousVariable: false
            Real: false
            f: false
            StringVariable: false
            String: false
            _domain_change_store: false
        def `migrate_settings`:
            context_settings: false
            __version__: false
            _domain_change_store: false
            output_table_name: false
            _domain_change_hints: false
    def `enumerate_columns`:
        x: false
        y: false
        m: false
    def `table_column_data`:
        M8[us]: false
        __formatter: false
        ?: false
    def `report_transform`:
        C: false
        N: false
        S: false
        T: false
        def `type_char`:
            ?: false
        def `strike`:
            <s>{escape(text)}</s>: false
        def `i`:
            <i>{escape(text)}</i>: false
        def `text`:
            <span>{escape(text)}</span>: false
        '{var.name} → ({type_char(reinterpret)}) ': false
        {rename.name if rename is not None else var.name}: false
        {var.name} → {rename.name}: false
        (unlinked from source): (odvezana od vira)
        Values: Vrednosti
        &nbsp;: false
        (added): (dodana)
        ' → ': false
        Labels: Oznake
        <s>: true
        ' : ': true
        </s>: true
        (new): (nova)
        "<div style='font-weight: bold;'>{header}</div>": false
        <div>{title}:</div>: false
        <br/>\n: false
        "<div style='padding-left: 1em;'>": false
        </div>: false
        \n: false
    def `abstract`:
        f: false
    def `_parse_attributes`:
        {item[0]}={item[1]}: false
    nan: false
    def `as_float_or_nan`:
        unsafe: false
    def `datetime_to_epoch`:
        1970-01-01: false
        UTC: false
        1s: false
    class `ReparseTimeTransform`:
        def `transform`:
            coerce: false
    def `column_str_repr_discrete`:
        ?: false
    def `column_str_repr_string`:
        ?: false
    __main__: false
    iris: false
widgets/data/owfeatureconstructor.py:
    FeatureDescriptor: false
    name: false
    expression: false
    meta: false
    ContinuousDescriptor: false
    number_of_decimals: false
    DateTimeDescriptor: false
    DiscreteDescriptor: false
    values: false
    ordered: false
    StringDescriptor: false
    def `selected_row`:
        invalid 'selectionMode': false
    class `FeatureEditor`:
        '
Use variable names as values in expression.
Categorical features are passed as strings
(note the change in behaviour from Orange 3.30).

': false
        _: false
        str: false
        float: false
        int: false
        len: false
        abs: false
        max: false
        min: false
        def `__init__`:
            Name...: Ime...
            Meta attribute: Meta atribut
            Expression...: Izraz...
            Select Feature: Izberi spremenljivko
            Select Function: Izberi funkcijo
        def `setEditorData`:
            Select Feature: Izberi spremenljivko
        def `on_funcs_changed`:
            atan2: false
            fmod: false
            ldexp: false
            log: false
            pow: false
            copysign: false
            hypot: false
            (,): false
            e: false
            pi: false
            (): false
    class `ContinuousFeatureEditor`:
        A numeric expression\n\n: Številski izraz\n\n
    class `DateTimeFeatureEditor`:
        'Result must be a string in ISO-8601 format ': 'Rezultat mora biti niz v formatu ISO-8601 '
        (e.g. 2019-07-30T15:37:27 or a part thereof),\n: (npr. 2019-07-30T15:37:27 ali del tega),\n
        or a number of seconds since Jan 1, 1970.: ali število sekund od 1. januarja 1970
    class `DiscreteFeatureEditor`:
        Result must be a string, if values are not explicitly given\n: Če vrednosti niso eksplicitno podane spodaj, mora biti rezultat niz,
        or a zero-based integer indices into a list of values given below.: sicer pa indeks elementa v spodnjem seznamu (začenši z 0).
        def `__init__`:
            'If values are given, above expression must return zero-based ': 'Če so vrednosti podane, mora biti rezultat izraza '
            integer indices into that list.: indeks elementa v te seznamu (začenši z 0).
            A, B ...: true
            Values (optional): Vrednosti (opcijsko)
        def `setEditorData`:
            ', ': false
            ,: false
            \,: false
        def `editorData`:
            (?<!\\),: false
            \,: false
            ,: false
    class `StringFeatureEditor`:
        A string expression\n\n: Izraz, katerega rezultat je niz\n\n
    d: false
    c: false
    t: false
    s: false
    class `FeatureItemDelegate`:
        def `displayText`:
            ' := ': false
    class `FeatureConstructorHandler`:
        def `is_valid_item`:
            eval: false
            __GLOBALS: false
    class `OWFeatureConstructor`:
        Formula: true
        'Construct new features (data columns) from a set of ': Sestavi nove značilke, izračunane
        existing features in the input dataset.: iz obstoječih.
        Transform: Predelava podatkov
        icons/FeatureConstructor.svg: false
        feature constructor, function, lambda, calculation: feature constructor, function, lambda, calculation, funkcija, formula, izračun, enačba
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        class `Error`:
            Categorical feature {} needs more values.: Kategorična spremenljivka {} potrebuje več vrednosti.
            'Invalid expressions: {}.': Nepravilen izraz: {}
            {}: false
        class `Warning`:
            'Recently added variable has been renamed, ': 'Nove spremenljivke so preimenovane '
            to avoid duplicates.\n: zaradi ponovljenih imen.
        def `__init__`:
            Variable Definitions: Definicije spremenljivk
            New: Nova
            Create a new variable: Sestavi novo spremenljivko
            Numeric: Številska
            X{}: true
            Categorical: Kategorična
            D{}: true
            Text: Besedilna
            S{}: true
            Date/Time: Datum/Čas
            T{}: true
            Duplicate Selected Variable: Podvoji izbrano spremenljivko
            Remove: Odstrani
            Remove selected variable: Odstrani izbrano spremenljivko
            Upgrade Expressions: Prenovi izraze
            Send: Pošlji
        def `_validate_descriptors`:
            def `validate`:
                eval: false
            ', ': false
        def `on_done`:
            Result: false
        def `send_report`:
            categorical: kategorična
            ' with values ': z vrednostmi
            ', ': false
            "'{val}'": false
            ; ordered: ; urejena
            numeric: številska
            date/time: datum/čas
            text: besedilna
            {feature.expression} ({desc}): false
            Constructed feature{s}: Sestavljene spremenljivke
        def `fix_expressions`:
            Fix Expressions: Popravi izraze
            "This widget's behaviour has changed. Values of categorical ": true
            'variables are now inserted as their textual representations ': true
            '(strings); previously they appeared as integer numbers, with an ': true
            attribute '.value' that contained the text.\n\n: true
            'The widget currently runs in compatibility mode. After ': true
            expressions are updated, manually check for their correctness.: true
            Update: true
            Cancel: true
            def `fixer`:
                .value: false
                {: false
                ', ': false
                "'{val}': {i}": false
                }}[{var.name}]: false
            '|': false
            {var.name}: false
            (^|\W)(: false
            )(\.value)?(\W|$): false
        def `migrate_context`:
            eval: false
            descriptors: false
            expressions_with_values: false
    def `validate_exp`:
        exp is not a 'ast.AST' instance: false
    def `sanitized_name`:
        \W: false
        _: false
    def `bind_variable`:
        nan: false
        eval: false
        NFKC: false
    _: false
    def `make_lambda`:
        __builtins__: false
        <lambda>: false
        eval: false
    Ellipsis: false
    False: false
    None: false
    True: false
    abs: false
    all: false
    any: false
    acsii: false
    bin: false
    bool: false
    bytearray: false
    bytes: false
    chr: false
    complex: false
    dict: false
    divmod: false
    enumerate: false
    filter: false
    float: false
    format: false
    frozenset: false
    getattr: false
    hasattr: false
    hash: false
    hex: false
    id: false
    int: false
    iter: false
    len: false
    list: false
    map: false
    max: false
    memoryview: false
    min: false
    next: false
    object: false
    oct: false
    ord: false
    pow: false
    range: false
    repr: false
    reversed: false
    round: false
    set: false
    slice: false
    sorted: false
    str: false
    sum: false
    tuple: false
    type: false
    zip: false
    normalvariate: false
    gauss: false
    expovariate: false
    gammavariate: false
    betavariate: false
    lognormvariate: false
    paretovariate: false
    vonmisesvariate: false
    weibullvariate: false
    triangular: false
    uniform: false
    nanmean: false
    nanmin: false
    nanmax: false
    nansum: false
    nanstd: false
    nanmedian: false
    nancumsum: false
    nancumprod: false
    nanargmax: false
    nanargmin: false
    nanvar: false
    mean: false
    std: false
    median: false
    cumsum: false
    cumprod: false
    argmax: false
    argmin: false
    var: false
    class `FeatureFunc`:
        DType: false
        def `__init__`:
            eval: false
        def `__repr__`:
            {0.__name__}{1!r}: false
    __main__: false
    iris: false
widgets/data/owfeaturestatistics.py:
    def `format_time_diff`:
        ~{years} years: ~{years} {plsi(years, "leto|leti|leta|let")}
        ~{months} months: ~{months} {plsi(months, "mesec|meseca|meseci|mesecev")}
        ~{weeks} weeks: ~{weeks} {plsi(weeks, "teden|tedna|tedni|tednov")}
        ~{days} days: ~{days} {plsi(days, "dan|dneva|dnevi|dni")}
        ~{hours} hours: ~{hours} {plsi(hours, "ura|uri|ure|ur")}
        ~{minutes} minutes: ~{minutes} {plsi(minutes, "minuta")}
        {seconds} seconds: ~{seconds} {plsi(seconds, "sekunda")}
    class `FeatureStatisticsTableModel`:
        class `Columns`:
            def `name`:
                Name: Ime
                Distribution: Porazdelitev
                Mean: Srednja vrednost
                Mode: Najpogostejša
                Median: Mediana
                Dispersion: Razpršitev
                Min.: Minimum
                Max.: Maksimum
                Missing: Manjkajoče
        def `__compute_statistics`:
            def `__mode`:
                C: false
        def `get_statistics_table`:
            Entropy: Entropija
            Feature: Spremenljivka
            Mode: Najpogostejša
            {self.table.name} (Feature Statistics): {self.table.name} (Statistika spremenljivk)
        def `_sortColumnData`:
            Data should be at most 2-dimensional: false
        def `_argsortData`:
            stable: false
            'We do not deal with non numeric values in sorting by ': false
            multiple values: false
            Add an empty column of zeros at index -2 to accomodate NaNs: false
        def `data`:
            def `display`:
                def `format_zeros`:
                    {0:.{num_decimals}f}: false
                def `render_value`:
                    ∞: false
                '#ccc': false
                {self._dispersion[row]:.3g}: false
                {missing} ({perc} %): false
    class `OWFeatureStatistics`:
        Feature Statistics: Statistika spremenljivk
        Show basic statistics for data features.: Pokaže osnovno statistiko spremenljivk.
        icons/FeatureStatistics.svg: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Reduced Data: Izbrani podatki
            Statistics: Statistika
        def `__init__`:
            None: Enobarvno
            color_var: false
            Color:: Barva:
            auto_commit: false
        def `migrate_context`:
            selected_rows: false
            selected_vars: false
    __main__: false
    iris: false
widgets/data/owfile.py:
    Automatically detect type: Samodejno zaznaj vrsto datoteke
    def `add_origin`:
        type: false
        origin: false
    class `OWFile`:
        File: Datoteka
        orange.widgets.data.file: false
        'Read data from an input file or network ': Preberi podatke iz datoteke ali omrežja.
        and send a data table to the output.: ""
        icons/File.svg: false
        Data: Podatki
        file, load, read, open: file, load, read, open, datoteka, naloži, preberi, odpri
        class `Outputs`:
            Data: Podatki
            Attribute-valued dataset read from the input file.: Podatki iz datoteke ali omrežja
        sample-datasets: false
        iris.tab: false
        titanic.tab: false
        housing.tab: false
        heart_disease.tab: false
        brown-selected.tab: false
        zoo.tab: false
        class `Information`:
            No file selected.: Datoteka ni izbrana.
        class `Warning`:
            The file is too large to load automatically.: Datoteka je prevelika za samodejno branje.
            ' Press Reload to load.': " Pritisnite 'Ponovno naloži' za branje."
            Read warning:\n{}: Opozorilo ob branju:\n{}
            Categorical variables with >100 values may decrease performance.: Kategorične spremenljivke z veliko vrednostmi lahko upočasnijo delovanje.
            'Some variables have been renamed ': Spremenljivke s podvojenimi imeni so preimenovane.
            to avoid duplicates.\n{}: \n{}
            Most widgets do not support multiple targets: Večina gradnikov ne podpira večih ciljnih spremenljivk.
        class `Error`:
            File not found.: Datoteka ni najdena.
            Missing reader.: Bralnik za ta tip ne obstaja.
            Error listing available sheets.: Napaka ob ustvarjanju seznama listov.
            Read error:\n{}: Napaka ob branju:\n{}
        'Use CSV File Import widget for advanced options ': 'Uporabi Bralnik CSV za napredne možnosti '
        for comma-separated files: za datoteke ločene z vejico
        use-csv-file-import: falxe
        'This widget loads only tabular data. Use other widgets to load ': 'Ta gradnik nalaga le tabelarične podatke. Uporabi druge gradnike za branje '
        other data types like models, distance matrices and networks.: drugih vrst podatkov, kot so modeli, matrike razdalj in mreže.
        other-data-types: false
        def `__init__`:
            read: false
            EXTENSIONS: false
            def `group_readers_per_addon_key`:
                def `package`:
                    .: false
                    Orange.data: false
                    0: false
            Source: Vir
            source: false
            File:: Datoteka:
            ...: true
            Reload: Ponovno naloži
            Sheet: List
            URL:: true
            File Type: Vrsta datoteke
            Info: true
            No data loaded.: Podatki niso naloženi.
            Columns (Double click to edit): Stolpci (dvoklikni za urejanje)
            Reset: Povrni
            Apply: Uveljavi
            Browse documentation datasets: Odpri podatke iz dokumentacije
        def `_url_set`:
            http://: false
        def `browse_file`:
            File: Datoteka
            Cannot find the directory with documentation datasets: Ne najdem mape s podatki iz dokumentacije
            ~/: false
        def `load_data`:
            No data.: Ni podatkov.
        def `_get_reader`:
            Can not find reader "{qname}": Bralnik "{qname}" ne obstaja.
        def `_describe`:
            attributes: false
            Name: Ime
            Description: Opis
            <b>{descs[0]}</b>: false
            <p>{'<br/>'.join(descs)}</p>: false
            <p>{len(table)} {pl(len(table), 'instance')}: <p>{len(table)} {plsi(len(table), 'primer')}
            <br/>{nattrs} {pl(nattrs, 'feature')} {missing_in_attr}: <br/>{nattrs} {plsi(nattrs, 'spremenljivka')} {missing_in_attr}
            <br/>Regression; numerical class {missing_in_class}: <br/>Regresija {missing_in_class}
            '<br/>Classification; categorical class ': '<br/>Klasifikacija: '
            with {nvals} {pl(nvals, 'value')} {missing_in_class}: {plsi_sz(nvals)} {nvals} {plsi(nvals, 'razredom|razredoma|razredi')} {missing_in_class}
            '<br/>Multi-target; ': '<br/>Večrazredni; '
            "{ntargets} target {pl(ntargets, 'variable')} ": "{ntargets} {plsi(ntargets, 'ciljna spremenljivka|ciljni spremenljivki|ciljne spremenljivke|ciljnih spremenljivk')} "
            {missing_in_class}: true
            <br/>Data has no target variable.: <br/>Podatki nimajo ciljne spremenljivke.
            <br/>{nmetas} {pl(nmetas, 'meta attribute')}: <br/>{nmetas} {plsi(nmetas, 'meta spremenljivka')}
            </p>: false
            Timestamp: false
            "<p>First entry: {table[0, 'Timestamp']}<br/>": <p>Prvi vnos: {table[0, 'Timestamp']}<br/>
            "Last entry: {table[-1, 'Timestamp']}</p>": Zadnji vnos: {table[-1, 'Timestamp']}</p>
        def `retrieveSpecificSettings`:
            modified_variables: false
        def `apply_domain_edit`:
            attributes: false
            "Renamed: {', '.join(renamed)}": Preimenovano: {', '.join(renamed)}
        def `send_report`:
            def `get_ext_name`:
                unknown: neznan
            File: Datoteka
            No file.: Ni datoteke.
            ~: false
            /: false
            \\: false
            ' ({self.sheet_combo.currentText()})': false
            File name: Ime datoteke
            Format: Oblika
            Data: Podatki
            Resource: Vir
    class `OWFileDropHandler`:
        def `canDropUrl`:
            http: false
            https: false
            ftp: false
        def `parametersFromUrl`:
            recent_paths: false
            source: false
            recent_urls: false
    __main__: false
widgets/data/owgroupby.py:
    Aggregation: false
    function: false
    types: false
    def `concatenate`:
        ' ': false
    def `var`:
        1970-01-01: false
        UTC: false
        1s: false
    Mean: Povprečje
    mean: false
    Median: Mediana
    median: false
    Q1: true
    Q3: true
    Min. value: Najmanjša vrednost
    min: false
    Max. value: Največja vrednost
    max: false
    Mode: Najpogostejša
    Standard deviation: Standardna deviacija
    Variance: Varianca
    Sum: Vsota
    sum: false
    Concatenate: Stakni
    Span: Razpon
    First value: Prva vrednost
    first: false
    Last value: Zadnja vrednost
    last: false
    Random value: Naključna
    Count defined: Število znanih
    count: false
    Count: Velikost skupine
    size: false
    Proportion defined: Delež znanih
    def `_run`:
        Aggregating: Računam
    Attributes: Spremenljivke
    Aggregations: Funkcije
    class `VarTableModel`:
        def `__init__`:
            OWGroupBy: false
        def `data`:
            ' and {len(aggs) - 3} more': " in {len(aggs) - 3} {plsi(len(aggs) - 3, 'druga|drugi|druge|drugih')}"
            ', ': false
    class `OWGroupBy`:
        Group by: Združi po
        Transform: Predelava podatkov
        icons/GroupBy.svg: false
        aggregate, group by: aggregate, group by, agregiraj, skupine
        class `Inputs`:
            Data: Podatki
            Input data table: Tabela vhodnih podatkov
        class `Outputs`:
            Data: Podatki
            Aggregated data: Agregirani podatki
        class `Error`:
            {}: false
        def `__init_control_area`:
            gb_attrs: false
            Group by: Združi po
            auto_commit: false
        def `__init_main_area`:
            ' ': false
            Aggregations: Funkcije
        def `migrate_context`:
            aggregations: false
            Sum: false
    __main__: false
    iris: false
widgets/data/owimpute.py:
    class `DisplayFormatDelegate`:
        def `initStyleOption`:
            method: false
    class `AsDefault`:
        Default (above): Privzeto (zgoraj)
        {var.name}: false
    RowMask: false
    mask: false
    def `var_key`:
        {}.{}: false
    class `OWImpute`:
        Impute: Nadomesti neznane vrednosti
        Impute missing values in the data table.: Nadomesti neznane vrednosti v podatkih.
        icons/Impute.svg: false
        impute, substitute, missing: impute, substitute, missing, vstavi, nadomesti, zamenjaj, manjkajoče
        Transform: Predelava podatkov
        class `Inputs`:
            Data: Podatki
            Learner: Model
        class `Outputs`:
            Data: Podatki
        class `Error`:
            Imputation failed for '{}': Nadomeščanje za '{}' ni uspelo.
            Model based imputer does not work for sparse data: Nadomeščanje z modelom ne deluje za redke podatke.
        class `Warning`:
            Default method can not handle '{}': Privzeta metoda ne deluje za '{}'
        def `__init__`:
            Default Method: Privzeta metoda
            Fixed values; numeric variables:: Privzeta vrednost; številske spremenljivke:
            default_numeric_value: false
            , time:: , časovne:
            default_time: false
            Individual Attribute Settings: Nastavitve za posamične spremenljivke
            Restore All to Default: Nastavi vse na privzeto
            autocommit: false
        def `__commit_finish`:
            def `get_variable`:
                Error for %s: false
            def `create_data`:
                Error: false
                Unknown: false
        def `send_report`:
            {} ({}): true
            Default method: Privzeta metoda
            Specific imputers: Posamične nastavitve
            ', ': true
            Method: Metoda
    def `__sample_data`:
        c{i}: true
        t{i}: true
    __main__: false
    brown-selected: false
widgets/data/owmelt.py:
    item: stvar
    value: vrednost
    row: vrstica
    class `MeltContextHandler`:
        def `match`:
            idvar: false
        def `encode_setting`:
            idvar: false
        def `decode_setting`:
            idvar: false
    class `OWMelt`:
        Melt: Raztopi
        Convert wide data to narrow data, a list of item-value pairs: Spremeni široke podatke v ozke, to je, seznam parov (stvar, vrednost).
        Transform: Predelava podatkov
        icons/Melt.svg: false
        melt, shopping list, wide, narrow: melt, shopping list, wide, narrow, nakupovalni seznam, širok, ozek
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        class `Information`:
            No columns with unique values\n: Ni stolpcev z neponovljenimi vrednostmi.\n
            Only columns with unique valules are useful for row identifiers.: Kot identifikator vrstice so uporabni le stolpci, v katerih se vrednosti ne ponavljajo.
        def `__init__`:
            Unique Row Identifier: Identifikator vrstice
            Row number: Številka vrstice
            idvar: false
            A column with identifier, like customer's id: Stolpec z identifikatorjem, npr. številka nakupa
            Filter: true
            only_numeric: false
            Ignore non-numeric features: Uporabi le številske spremenljivke
            exclude_zeros: false
            Exclude zero values: Preskoči ničelne vrednosti
            Besides missing values, also omit items with zero values: Poleg neznanih vrednosti preskoči tudi stvari z vrednostjo 0.
            Names for generated features: Imena stolpcev v novih podatkih
            Item:: Stvar:
            item_var_name: false
            'padding-left: 3px': false
            Value:: Vrednost:
            value_var_name: false
        def `send_report`:
            Settings: Nastavitve
            Row identifier: Identifikator vrstice
            Ignore non-numeric features: Uporabi le številske vrednosti
            Exclude zero values: Preskoči ničelne vrednosti
            Output: Izhod
        def `_store_output_desc`:
            Item column: Stolpec s stvarjo
            Value column: Stolpec z vrednostjo
            Number of items: Število stvari
    __main__: false
    zoo: false
widgets/data/owmergedata.py:
    Instance id: Identiteta vrstice
    Row index: Številka vrstice
    class `ConditionBox`:
        RowItems: false
        pre_label: false
        left_combo: false
        in_label: false
        right_combo: false
        remove_button: false
        def `add_row`:
            and: in
            ×: true
        def `add_plus_row`:
            +: true
    class `DomainModelWithTooltips`:
        def `data`:
            Match rows sequentially: Združi istoležne vrstice
            'Re-match rows from tables obtained from the same ': Združi vrstice, dobljene iz istega vira,
            source,\n: \n
            'e.g. data from the same file that was split within ': na primer iste datoteke, ki je bila razdeljena v delotoku.
            the workflow.: ""
    class `MergeDataContextHandler`:
        def `settings_from_widget`:
            attr_pairs: false
        def `settings_to_widget`:
            attr_pairs: false
        def `match`:
            attr_pairs: false
    class `OWMergeData`:
        Merge Data: Združi vrstice
        Merge datasets based on the values of selected features.: Združi tabele glede na vrednosti izbranih spremenljivk.
        Transform: Predelava podatkov
        icons/MergeData.svg: false
        merge data, join: merge data, join, zlivanje
        class `Inputs`:
            Data: Podatki
            Data A: false
            Extra Data: Dodatni podatki
            Data B: false
        class `Outputs`:
            Data: Podatki
            Merged Data A+B: false
            Merged Data B+A: false
            Merged Data: false
        Append columns from Extra data: Dodaj podatke iz druge tabele
        Find matching pairs of rows: Sestavi pare vrstic, ki se ujemajo
        Concatenate tables: Zlij tabeli
        The first table may contain, for instance, city names,\n: Prva tabela vključuje stolpec z imeni mest,\n
        and the second would be a list of cities and their coordinates.\n: druga tabela pa so imena mest in njihove koordinate.\n
        Columns with coordinates would then be appended to the output.: Koordinate iz druge tabele bodo dodane v pripadajoče vrstice prve.
        'Input tables contain different features describing the same data ': Tabeli vsebujeta različne lastnosti istih primerov.\n
        instances.\n: ""
        Output contains matched instances. Rows without matches are removed.: Gradnik poišče pare, ki se ujemajo. Preostale zavrže.
        'Output contains all instances. Data from merged instances is ': Izhodni podatki vsebujejo vse primere.\n
        merged into single rows.: Ujemajoče se vrstice so združene.
        Confused about merging options?\nSee the tooltips!: Zbegani? Ne razumete izbir?\nObiščite jih z miško in preberite razlage!
        merging_types: false
        class `Warning`:
            'Some variables have been renamed ': Zaradi podvojenih imen so nekatere spremenljivke preimenovane.\n
            to avoid duplicates.\n{}: {}
            'Some (unused) combinations of values in Data appear in ': 'Nekatere (neuporabljene) kombinacije vrednosti v podatkih se pojavijo '
            multiple rows.: v več vrsticah.
            'Some (unused) combinations of values in Extra Data appear in ': 'Nekatere (neuporabljene) kombinacije vrednosti v dodatnih podatkih se pojavijo '
        class `Error`:
            Numeric and non-numeric columns ({} and {}) cannot be matched.: Številskih in kategoričnih stolpcev ({} in {}) ni mogoče primerjati.
            Row index cannot be matched with {}.: Številke vrstice ni mogoče primerjati z {}.
            Instance cannot be matched with {}.: Identitete vrstice ni mogoče primerjati z {}.
            Some combinations of values in Data appear in multiple rows.: Nekatere kombinacije vrednosti v podatkih se pojavijo v več vrsticah.
            \nEvery matched combination may appear at most once.: \nVsaka ujemajoča se kombinacija se lahko pojavi največ enkrat.
            \nEvery combination may appear at most once.: \nVsaka kombinacija se lahko pojavi največ enkrat.
            Some combinations of values in Extra Data appear in multiple rows.: Nekatere kombinacije vrednosti v dodatnih podatkih se pojavijo v več vrsticah.
        def `__init__`:
            merging: false
            Merging: Združevanje
            matches: se ujema z
            Row matching: Kriteriji za ujemanje vrstic
        def `send_report`:
            Merging: Združevanje
            Match: Ujemanje
            ', ': false
            {self._get_col_name(left)} with {self._get_col_name(right)}: {self._get_col_name(left)} (levo) in {self._get_col_name(right)} (desno)
        def `_get_col_name`:
            "'{obj.name}'": false
        def `_join_table_by_indices`:
            name: false
            attributes: false
        def `_domain_rename_duplicates`:
            ', ': false
        def `migrate_settings`:
            def `mig_value`:
                Position (index): false
                Source position (index): false
            augment: false
            merge: false
            combine: false
            merging: false
            attr_pairs: false
            attr_{oper}_data: false
            attr_{oper}_extra: false
            context_settings: false
    __main__: false
    tests/data-gender-region: false
    tests/data-regions: false
widgets/data/owneighbors.py:
    Euclidean: Evklidska
    Manhattan: Manhattanska
    Mahalanobis: Mahalanobisova
    Cosine: Kosinusna
    Jaccard: Jaccardova
    Spearman: Spearmanova
    Absolute Spearman: Absolutna Spearmanova
    Pearson: Pearsonova
    Absolute Pearson: Absolutna Pearsonova
    class `OWNeighbors`:
        Neighbors: Sosedi
        Compute nearest neighbors in data according to reference.: Poišči najbližje sosede referenčnih primerov.
        icons/Neighbors.svg: false
        Unsupervised: Nenadzorovano učenje
        orangecontrib.prototypes.widgets.owneighbours.OWNeighbours: false
        class `Inputs`:
            Data: Podatki
            Reference: Referenčni podatki
        class `Outputs`:
            Neighbors: Sosedi
        class `Info`:
            Input data includes reference instance(s).\n: Vhodni podatki vključujejo referenčne primere.\n
            Reference instances are excluded from the output.: Referenčni primeri niso vključeni med izhodne.
        class `Warning`:
            Every data instance is same as some reference: Vsi podatki se pojavijo tudi med referenčnimi.
        class `Error`:
            Data and reference have different features: Podatki in referenčni podatki so opisani z različnimi značilkami.
        def `__init__`:
            distance_index: false
            'Distance metric: ': 'Vrsta razdalje: '
            n_neighbors: false
            Limit number of neighbors to:: Omeji število sosedov na:
            limit_neighbors: false
        def `_data_with_similarity`:
            distance: false
    __main__: false
    iris.tab: false
widgets/data/owoutliers.py:
    def `run`:
        Initializing...: Zaganjam...
    class `SVMEditor`:
        def `__init__`:
            'An upper bound on the fraction of training errors and a ': 'Zgornja meja deleža napak pri učenju in '
            lower bound of the fraction of support vectors: spodnja meja deleža podpornih vektorjev
            Nu:: 𝜈:
            nu: false
            %d %%: false
            gamma: false
            Kernel coefficient:: Koeficient jedra:
        def `get_parameters`:
            nu: false
            gamma: false
        def `get_report_parameters`:
            Detection method: Metoda detekcije
            One class SVM with non-linear kernel (RBF): SVM enega razreda z nelinearnim jedrom (RBF)
            Regularization (nu): Regularizacija (število)
            {self.nu/100:.0%}: false
            Kernel coefficient: Koeficient jedra
    class `CovarianceEditor`:
        def `__init__`:
            Contamination:: Kontaminacija:
            cont: false
            %d %%: false
            empirical_covariance: false
            Support fraction:: Delež podpore:
            support_fraction: false
        def `get_parameters`:
            contamination: false
            support_fraction: false
        def `get_report_parameters`:
            Detection method: Metoda zaznavanja
            Covariance estimator: Ocena kovariance
            Contamination: Kontaminacija
            {self.cont/100:.0%}: false
            Support fraction: Delež podpore
    class `LocalOutlierFactorEditor`:
        euclidean: false
        manhattan: false
        cosine: false
        jaccard: false
        hamming: false
        minkowski: false
        Euclidean: Evklidska
        Manhattan: Manhattanska
        Cosine: Kosinusna
        Jaccard: Jaccardova
        Hamming: Hammingova
        Minkowski: Minkowska
        def `__init__`:
            Contamination:: Kontaminacija:
            cont: false
            %d %%: false
            n_neighbors: false
            Neighbors:: Sosedi:
            metric_index: false
            Metric:: Metrika:
        def `get_parameters`:
            n_neighbors: false
            contamination: false
            algorithm: false
            brute: false
            metric: false
        def `get_report_parameters`:
            Detection method: Metoda detekcije
            Local Outlier Factor: Lokalni faktor odstopanja
            Contamination: Kontaminacija
            {self.cont/100:.0%}: false
            Number of neighbors: Število sosedov
            Metric: Metrika
    class `IsolationForestEditor`:
        def `__init__`:
            Contamination:: Kontaminacija:
            cont: false
            %d %%: false
            replicable: false
            Replicable training: Ponovno učenje
        def `get_parameters`:
            contamination: false
            random_state: false
        def `get_report_parameters`:
            Detection method: Metoda detekcije
            Isolation Forest: Izolacijski gozd
            Contamination: Kontaminacija
            {self.cont/100:.0%}: false
            Replicable training: Ponovno učenje
    class `OWOutliers`:
        Outliers: Osamelci
        Detect outliers.: Odkrivanje izstopajočih vrednosti.
        icons/Outliers.svg: false
        Unsupervised: Nenadzorovano učenje
        outliers, inlier: outliers, inlier, izstopajoče vrednosti
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Inliers: Ostali primeri
            Outliers: Osamelci
            Data: Podatki
        class `Warning`:
            Too many features for covariance estimation.: Preveč spremenljivk za oceno kovariance.
        class `Error`:
            Singular covariance matrix.: Kovariančna matrika je singularna.
            Not enough memory: Premalo pomnilnika.
        def `init_gui`:
            Method: Metoda
            outlier_method: false
            auto_commit: false
        def `_init_editors`:
            Parameters: Parametri
        def `send_report`:
            Data: Podatki
            Input instances: Vhodni primeri
            Inliers: Ostali primeri
            Outliers: Osamelci
            Detection: Detekcija
        def `migrate_settings`:
            svm_editor: false
            nu: false
            gamma: false
            empirical_covariance: false
            support_fraction: false
            cov_editor: false
            cont: false
    __main__: false
    iris: false
widgets/data/owpaintdata.py:
    Append: false
    points: false
    Insert: false
    indices: false
    Move: false
    delta: false
    DeleteIndices: false
    Composite: false
    f: false
    g: false
    AirBrush: false
    pos: false
    radius: false
    intensity: false
    rstate: false
    Jitter: false
    Magnet: false
    density: false
    SelectRegion: false
    region: false
    DeleteSelection: false
    MoveSelection: false
    class `PaintViewBox`:
        def `__init__`:
            mousePressEvent: false
            mouseMoveEvent: false
            mouseReleaseEvent: false
            mouseClickEvent: false
            mouseDragEvent: false
            mouseEnterEvent: false
            mouseLeaveEvent: false
    class `SelectTool`:
        def `__init__`:
            Delete: false
            Backspace: false
    def `_icon`:
        icons/paintdata: false
    class `OWPaintData`:
        Brush: Pršilo
        Create multiple instances: Postavi več točk
        brush.svg: false
        Put: Pisalo
        Put individual instances: Postavi posamične točke
        put.svg: false
        Select: Izbor
        Select and move instances: Izberi in premikaj točke
        select-transparent_42px.png: false
        Jitter: Potresi
        Jitter instances: Potresi točke
        jitter.svg: false
        Magnet: Pritegni
        Attract multiple instances: Pritegni točke
        magnet.svg: false
        Clear: Pobriši
        Clear the plot: Pobriši vse točke
        ../../../icons/Dlg_clear.png: false
        Paint Data: Risanje podatkov
        Create data by painting data points on a plane.: Risanje podatkov v graf.
        icons/PaintData.svg: false
        paint data, create, draw: paint data, create, draw, sestavi, nariši
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        Painted data: Narisani podatki
        x: true
        y: true
        C1: true
        C2: true
        plot: true
        class `Warning`:
            Input data has no variables: Vhodni podatki nimajo spremenljivk
            Numeric target value can not be used.: Numerične ciljne spremenljivke ne morem uporabiti
            Sparse data is ignored.: Ignoriram redke podatke.
            'Some variables have been renamed ': 'Spremenljivke s podvojenimi imeni '
            to avoid duplicates.\n{}: so preimenovane.\n{}
        class `Information`:
            Paint Data uses data from the first two attributes.: Gradnik uporablja prvi dve spremenljivki.
        def `_init_ui`:
            Names: Imena
            attr1: false
            'Variable X: ': 'Spremenljivka X: '
            attr2: false
            'Variable Y: ': 'Spremenljivka Y: '
            hasAttr2: true
            Labels: Razredi
            +: true
            Add new class label: Dodaj nov razred
            MINUS SIGN: true
            Remove selected class label: Odstrani razred
            Tools: Orodja
            brushRadius: false
            Radius:: Polmer:
            density: false
            Intensity:: Gostota:
            symbol_size: false
            Symbol:: Velikost:
            Reset to Input Data: Ponastavi na vhodne podatke
            autocommit: false
            bottom: false
            left: false
        def `set_dimensions`:
            left: false
        def `set_data`:
            C1: true
        def `add_new_class_label`:
            C: true
        def `remove_selected_class_label`:
            Delete class label: Odstrani izbrani razred
        def `_on_editing_started`:
            macro: false
        def `execute`:
            Non normalized command: false
        def `_add_command`:
            Name: Ime
            Delete: Brisanje
            Move: Premik
            unreachable: false
        def `_replot`:
            +: true
        def `_attr_name_changed`:
            bottom: false
            left: false
        def `commit`:
            Class: Razred
            ', ': true
            bottom: false
            left: false
        def `send_report`:
            x: true
            y: true
            Axis x: Os x
            Axis y: Os y
            Number of points: Število točk
            Painted data: Narisani podatki
    __main__: false
widgets/data/owpivot.py:
    class `Pivot`:
        def `__init__`:
            Row variable should be DiscreteVariable: false
            ' or ContinuousVariable': false
            Column variable should be DiscreteVariable: false
            Total: Skupno
            total: false
        def `_create_group_tables`:
            ({str(fun).lower()}): false
            {var.name} ({str(fun).lower()}): false
            table: false
            total_h: false
            total_v: false
            total: false
        def `_create_pivot_tables`:
            table: false
            total_h: false
            total_v: false
            total: false
        def `__get_pivot_tab_domain`:
            def `map_values`:
                nan: false
            have_date: false
            have_time: false
            {v}: false
            Total: Skupno
            Aggregate: Vrednost
        def `__get_pivot_tab_x`:
            fill_value: false
            dtype: false
        def `count_defined`:
            nan: false
        Count: Velikost skupine
        Count defined: Število znanih
        Sum: Vsota
        Mean: Povprečje
        Min: Najmanjša
        Max: Največja
        Mode: Najpogostejša
        Median: Mediana
        Var: Varianca
        Majority: Večina
    class `PivotTableView`:
        Total: Skupno
        def `_draw_lines`:
            t: false
        def `_resize`:
            ' ': false
    class `OWPivot`:
        Pivot Table: Pivotna tabela
        Reshape data table based on column values.: Preoblikuj podatke glede na vrednosti stolpcev.
        Transform: Predelava podatkov
        icons/Pivot.svg: false
        pivot table, pivot, group, aggregate: pivot table, pivot, group, aggregate, skupine, agregacija
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Pivot Table: Pivotna tabela
            Filtered Data: Izbrani podatki
            Grouped Data: Skupine podatkov
        class `Warning`:
            Column feature should be selected.: Izbrati je potrebno spremenljivko za stolpce.
            Some aggregations ({}) cannot be computed.: Nekaterih vrednosti ({}) ni mogoče izračunati.
            Some variables have been renamed in some tables: Spremenljivke s podvojenimi imeni so
            to avoid duplicates.\n{}: preimenovane.\n{}
            Selected variable has too many values.: Izbrana spremenljivka ima preveč različnih vrednosti.
            At least 1 primitive variable is required.: Podatki morajo vsebovati vsaj eno nebesedilno spremenljivko.
        def `_add_control_area_controls`:
            Rows: Vrstice
            row_feature: false
            Columns: Stolpci
            col_feature: false
            (Same as rows): (Enako kot vrstice)
            Values: Vrednosti
            val_feature: false
            (None): (Brez)
            auto_commit: false
        def `__add_aggregation_controls`:
            Aggregations: Izračunaj
        def `skipped_aggs`:
            ', ': false
        def `init_attr_values`:
            row_feature: false
            col_feature: false
            val_feature: false
        def `send_report`:
            Row feature: Vrstice
            Column feature: Stolpci
            Value feature: Vrednost
            Group by: Združi po
        def `migrate_settings`:
            sel_agg_functions: false
    __main__: false
    heart_disease: false
widgets/data/owpreprocess.py:
    class `DiscretizeEditor`:
        n: false
        force: false
        None: Brez diskretizacije
        Equal width discretization: Enaka širina intervalov
        Equal frequency discretization: Enaka pogostost vrednosti
        Remove numeric features: Odstrani številske spremenljivke
        Entropy-MDL discretization: Diskretizacija z MDL in entropijo
        def `__init__`:
            Number of intervals (for equal width/frequency): Število intervalov (za enake širine ali pogostosti)
        def `setParameters`:
            method: false
            n: false
        def `parameters`:
            method: false
            n: false
        def `createinstance`:
            method: false
        def `__repr__`:
            ', Number of intervals: {}': , število intervalov: {}
            {}{}: false
    class `ContinuizeEditor`:
        Most frequent is base: Najpogostejša vrednost kot osnova
        One feature per value: Po ena spremenljivka na vrednost
        Remove non-binary features: Odstrani nebinarne spremenljivke
        Remove categorical features: Odstrani kategorične spremenljivke
        Treat as ordinal: Obravnavaj kot kategorične spremenljivke kot ordinalne
        Divide by number of values: Obravnavaj kot ordinalne, a deli s številom vrednosti
        def `setParameters`:
            multinomial_treatment: false
        def `parameters`:
            multinomial_treatment: false
        def `createinstance`:
            multinomial_treatment: false
    class `RemoveSparseEditor`:
        missing values: manjkajočimi vrednostmi
        zeros: ničlami
        def `__init__`:
            Remove features with too many: Odstrani spremenljivke s preveč
            Threshold:: Prag:
            Percentage: Odstotek
            Fixed: Število primerov
        def `parameters`:
            fixedThresh: false
            percThresh: false
            useFixedThreshold: false
            filter0: false
        def `setParameters`:
            percThresh: false
            fixedThresh: false
            useFixedThreshold: false
            filter0: false
        def `createinstance`:
            filter0: false
            useFixedThreshold: false
            fixedThresh: false
            percThresh: false
        def `__repr__`:
            'remove features with too many {self.options[self.filter0]}, threshold: ': 'odstrani spremenljivke s preveč {self.options[self.filter0]}, meja: '
            {self.fixedThresh} {pl(self.fixedThresh, 'instance')}: {self.fixedThresh} {plsi(self.fixedThresh, 'primer')}
            {self.percThresh} %: true
    class `ImputeEditor`:
        Don't impute.: Ne nadomeščaj
        Replace with constant: Nadomesti z določeno vrednostjo
        Average/Most frequent: Povprečna/najpogostejša vrednost
        Model based imputer: Nadomeščanje z modelom
        Replace with random value: Nadomesti z naključno vrednostjo
        Remove rows with missing values.: Odstrani vrstice z manjkajočimi vrednostmi
        def `setParameters`:
            method: false
        def `parameters`:
            method: false
        def `createinstance`:
            method: false
    class `UnivariateFeatureSelect`:
        def `__init__`:
            Score: Kriterij
            Number of features: Število ohranjenih spremenljivk
            Fixed:: Določeno število:
            Proportion:: Delež v odstotkih
            %: true
        def `setItems`:
            text: false
        def `setParameters`:
            score: false
            strategy: false
            k: false
            p: false
        def `parameters`:
            score: false
            strategy: false
            p: false
            k: false
    class `FeatureSelectEditor`:
        Information Gain: Informacijski prispevek
        Gain ratio: Delež informacijskega prispevka
        Gini index: Zmanjšanje Ginijevega indeksa
        ReliefF: true
        Fast Correlation Based Filter: Hitri korelacijski filter
        ANOVA: true
        Chi2: true
        RReliefF: true
        Univariate Linear Regression: Univariatna linearna regresija
        def `__init__`:
            text: false
            Information Gain: Informacijski prispevek
            tooltip: false
            Gain Ratio: Delež informacijskega prispevka
            Gini Index: Zmanjšanje Ginijevega indeksa
            ReliefF: true
            Fast Correlation Based Filter: Hitri korelacijski filter
            ANOVA: true
            Chi2: true
            RReliefF: true
            Univariate Linear Regression: Univariatna linearna regresija
        def `createinstance`:
            score: false
            strategy: false
            k: false
            p: false
        def `__repr__`:
            'Score: {}, Strategy (Fixed): {}': kriterij: {}, število (določeno): {}
            score: false
            k: false
    class `RandomFeatureSelectEditor`:
        def `__init__`:
            Number of features: Število spremenljivk
            Fixed: Določeno število
            Percentage: Odstotek
            %: true
        def `setParameters`:
            strategy: false
            k: false
            p: false
        def `parameters`:
            strategy: false
            p: false
            k: false
        def `createinstance`:
            strategy: false
            k: false
            p: false
        def `__repr__`:
            select {self.__k} {pl(self.__k,'feature')}: izbor {self.__k} {plsi(self.__k,'primer')}
            select {self.__p} % features: izbor {self.__p} % primerov
    class `Scale`:
        Standardize to μ=0, σ²=1: Standardiziraj (μ=0, σ²=1)
        Center to μ=0: Centriraj (μ=0)
        Scale to σ²=1: Skaliraj (σ²=1)
        Normalize to interval [-1, 1]: Normaliziraj v interval [-1, 1]
        Normalize to interval [0, 1]: Normaliziraj v interval [0, 1]
        def `setParameters`:
            method: false
        def `parameters`:
            method: false
        def `createinstance`:
            method: false
    class `Randomize`:
        def `__init__`:
            Classes: Razrede
            Features: Spremenljivke
            Meta data: Meta spremenljivke
            Randomize:: Premešaj:
            Replicable shuffling:: Ponovljivo mešanje:
        def `setParameters`:
            rand_type: false
            rand_seed: false
        def `parameters`:
            rand_type: false
            rand_seed: false
        def `createinstance`:
            rand_type: false
            rand_seed: false
        def `__repr__`:
            {}, {}: true
            Replicable: ponovljivo
            Not replicable: neponovljivo naključno
    class `PCA`:
        def `__init__`:
            Components:: Število komponent:
        def `setParameters`:
            n_components: false
        def `parameters`:
            n_components: false
        def `createinstance`:
            n_components: false
        def `__repr__`:
            'Components: {}': {} komponent
    class `CUR`:
        def `__init__`:
            Rank:: Rang:
            Relative error:: Relativna napaka:
        def `setParameters`:
            rank: false
            max_error: false
        def `parameters`:
            rank: false
            max_error: false
        def `createinstance`:
            rank: false
            max_error: false
        def `__repr__`:
            'Rank: {}, Relative error: {}': rang: {}, relativna napaka: {}
    def `icon_path`:
        icons/: true
    Discretize: Diskretizacija
    orange.preprocess.discretize: false
    Discretization: Diskretizacija
    Discretize Continuous Variables: Diskretiziraj številske spremenljivke
    Discretize.svg: false
    Continuize: Kontinuizacija
    orange.preprocess.continuize: false
    Continuization: Kontinuizacija
    Continuize Discrete Variables: Spremeni kategorične spremenljivke v številske
    Continuize.svg: false
    Impute: Nadomeščanje
    orange.preprocess.impute: false
    Impute Missing Values: Nadomesti manjkajoče vrednosti
    Impute.svg: false
    Feature Selection: Izbor spremenljivk
    orange.preprocess.fss: false
    Select Relevant Features: Izberi relevantne spremenljivke
    SelectColumns.svg: false
    Random Feature Selection: Naključen izbor spremenljivk
    orange.preprocess.randomfss: false
    Select Random Features: Izberi naključno množico spremenljivk
    SelectColumnsRandom.svg: false
    Normalize: Normalizacija
    orange.preprocess.scale: false
    Scale: Skaliraj
    Normalize Features: Normalizacija spremenljivk
    Normalize.svg: false
    Randomize: Premešanje vrednosti
    orange.preprocess.randomize: false
    Randomization: Premešanje vrednosti
    Random.svg: false
    Remove Sparse: Odstranjevanje redkih podatkov
    orange.preprocess.remove_sparse: false
    Remove Sparse Features: Odstrani redke spremenljivke
    PurgeDomain.svg: false
    PCA: true
    orange.preprocess.pca: false
    Principal Component Analysis: Metoda osnovnih komponent
    PCA.svg: false
    CUR: CUR
    orange.preprocess.cur: false
    CUR Matrix Decomposition: Matrična dekompozicija CUR
    class `OWPreprocess`:
        Preprocess: Predprocesiranje
        Construct a data preprocessing pipeline.: Sestavi zaporedje predprocesorjev.
        Transform: Predelava podatkov
        icons/Preprocess.svg: false
        preprocess, process: preprocess, process, proces
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Preprocessor: Predprocesor
            Preprocessed Data: Predprocesirani podatki
        def `__init__`:
            def `mimeData`:
                application/x-qwidget-ref: false
                utf-8: false
            Preprocessors: Predprocesorji
            Drag items from the list on the left: Povleci predprocesorje z leve
            autocommit: false
        def `load`:
            preprocessors: false
            def `dropMimeData`:
                application/x-qwidget-ref: false
        def `save`:
            name: false
            preprocessors: false
        def `migrate_settings`:
            storedsettings: false
            preprocessors: false
            orange.preprocess.scale: false
            center: false
            scale: false
            Mean: false
            NoScaling: false
            NoCentering: false
            Std: false
            Span: false
            method: false
        def `send_report`:
            Settings: Nastavitve
    __main__: false
    brown-selected: false
widgets/data/owpurgedomain.py:
    class `OWPurgeDomain`:
        Purge Domain: Očisti domeno
        'Remove redundant values and features from the dataset. ': 'Odstrani neuporabljene vrednosti in spremenljivke. '
        Sort values.: Uredi vrednosti.
        icons/PurgeDomain.svg: false
        Transform: Predelava podatkov
        remove, delete, unused: remove, delete, unused, odstrani, uredi, neuporabljene
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        sortValues: false
        Sort categorical feature values: Uredi kategorične vrednosti po abecedi
        removeValues: false
        Remove unused feature values: Odstrani neuporabljene vrednosti
        removeAttributes: false
        Remove constant features: Odstrani konstantne spremenljivke
        sortClasses: false
        Sort categorical class values: Uredi razrede po abecedi
        removeClasses: false
        Remove unused class variable values: Odstrani prazne razrede
        removeClassAttribute: false
        Remove constant class variables: Odstrani konstantne ciljne spremenljivke
        removeMetaAttributeValues: false
        Remove unused meta attribute values: Odstrani neuporabljene vrednosti meta spremenljivk
        removeMetaAttributes: false
        Remove constant meta attributes: Odstrani konstantne meta spremenljivke
        Sorted features: Urejene značilke
        resortedAttrs: false
        Reduced features: Poenostavljene značilke
        reducedAttrs: false
        Removed features: Odstranjene značilke
        removedAttrs: false
        Sorted classes: Urejeni razredi
        resortedClasses: false
        Reduced classes: Poenostavljeni razredi
        reducedClasses: false
        Removed classes: Odstranjeni razredi
        removedClasses: false
        Reduced metas: Poenostavljene meta spremenljivke
        reducedMetas: false
        Removed metas: Odstranjene meta spremenljivke
        removedMetas: false
        def `__init__`:
            -: true
            Features: Značilke
            'Sorted: %(resortedAttrs)s, ': 'Urejene: %(resortedAttrs)s, '
            'reduced: %(reducedAttrs)s, removed: %(removedAttrs)s': poenostavljene: %(reducedAttrs)s, odstranjene: %(removedAttrs)s
            Classes: Razredi
            'Sorted: %(resortedClasses)s,': Urejeni: %(resortedClasses)s,
            'reduced: %(reducedClasses)s, removed: %(removedClasses)s': poenostavljeni: %(reducedClasses)s, odstranjeni: %(removedClasses)s
            Meta attributes: Meta spremenljivke
            'Reduced: %(reducedMetas)s, removed: %(removedMetas)s': poenostavljene: %(reducedMetas)s, odstranjene: %(removedMetas)s
            autoSend: false
        def `setData`:
            -: true
        def `commit`:
            removed: false
            reduced: false
            sorted: false
        def `send_report`:
            def `list_opts`:
                '; ': true
                no changes: ni sprememb
            Settings: Nastavitve
            Features: Značilke
            Classes: Razredi
            Metas: Meta spremenljivke
            Statistics: Statistika
    __main__: false
    https://datasets.biolab.si/core/car.tab: false
    buying: false
    v-high: false
widgets/data/owpythonscript.py:
    OWPythonScript: false
    'import numpy as np
from Orange.data import Table, Domain, ContinuousVariable, DiscreteVariable

domain = Domain([ContinuousVariable("age"),
                 ContinuousVariable("height"),
                 DiscreteVariable("gender", values=("M", "F"))])
arr = np.array([
  [25, 186, 0],
  [30, 164, 1]])
out_data = Table.from_numpy(domain, arr)
': false
    def `read_file_content`:
        utf-8: true
        strict: true
    Light: false
    '#000': false
    '#f00': false
    bold #008000: false
    '#212121': false
    '#00f': false
    '#05a': false
    '#aa22ff': false
    '#008000': false
    '#ba2121': false
    '#080': false
    bold #aa22ff: false
    italic #408080: false
    Dark: false
    '#fff': false
    bold #4caf50: false
    '#e0e0e0': false
    '#1e88e5': false
    '#42a5f5': false
    '#43a047': false
    '#ff7070': false
    '#66bb6a': false
    def `make_pygments_style`:
        PygmentsStyle: false
        styles: false
    class `FakeSignatureMixin`:
        def `__init__`:
            4444: false
    class `FunctionSignature`:
        def `__init__`:
            python_script: false
            in_: false
            '<b style="color: ': false
            ' ': false
            ;">def </b>: false
            '<span style="color: ': false
            ;">: false
            </span>: false
            ;">(</span>: false
            ;">):</span>: false
        def `update_signal_text`:
            ', ': false
            's, ': false
    class `ReturnStatement`:
        def `__init__`:
            '<b style="color: ': false
            ' ': false
            ;">return </b>: false
            out_: false
        def `make_signal_labels`:
            <b></b>: false
            ', ': false
            '.QLabel { color: ': false
            ' ': false
            ; }: false
        def `update_signal_text`:
            <b></b>: false
            <b>: false
            </b>: false
    class `VimIndicator`:
        def `__init__`:
            '#33cc33': false
            normal: false
    class `PythonConsole`:
        def `interact`:
            '>>> ': false
            '... ': false
            'Type "help", "copyright", "credits" or "license" ': false
            for more information.: false
            Python %s on %s\n%s\n(%s)\n: false
            %s\n: false
            \n: false
            \nKeyboardInterrupt\n: false
        def `push`:
            sys.excepthook: false
            sys.stdout: false
            sys.stderr: false
        def `keyPressEvent`:
            \n: false
        def `pasteCode`:
            \n: false
    class `Script`:
        def `asdict`:
            _ScriptData: false
        def `fromdict`:
            _ScriptData: false
            Script: false
            name: false
            script: false
            filename: false
    class `ScriptItemDelegate`:
        def `displayText`:
            *: false
    _ScriptData: false
    name: false
    script: false
    filename: false
    class `OWPythonScript`:
        Python Script: Skripta v Pythonu
        Write a Python script and run it on input data or models.: Poženi ročno napisan program v Pythonu.
        Transform: Predelava podatkov
        icons/PythonScript.svg: false
        program, function: program, function, funkcija
        class `Inputs`:
            Data: false
            in_data: false
            Learner: false
            in_learner: false
            Classifier: false
            in_classifier: false
            Object: false
            in_object: false
        class `Outputs`:
            Data: false
            out_data: false
            Learner: false
            out_learner: false
            Classifier: false
            out_classifier: false
            Object: false
            out_object: false
        data: false
        learner: false
        classifier: false
        object: false
        List[_ScriptData]: false
        name: false
        Table from numpy: false
        script: false
        filename: false
        def `__init__`:
            Menlo: false
            darwin: false
            Courier: false
            win32: false
            cygwin: false
            DejaVu Sans Mono: false
            Editor: Urejevalnik
            darkMode: false
            Dark: false
            Light: false
            0000: false
            Preferences: Nastavitve
            vimModeEnabled: false
            Vim mode: Način Vim
            Only for the coolest.: Samo, če si kul.
            Library: Knjižnica
            +: true
            Add a new script to the library: Dodaj novo skripto v knjižnico
            MINUS SIGN: true
            Remove script from library: Odstrani skripto iz knjižnice
            Update: Osveži
            Save changes in the editor to library: Shrani spremembe iz urejevalnika v knjižnico
            More: Več
            More actions: Več možnosti
            Import Script from File: Preberi skripto iz datoteke
            Save Selected Script to File: Shrani izbrano skripto v datoteko
            Undo Changes to Selected Script: Razveljavi spremembe izbrane skripte
            Run: Poženi
            Run script: Poženi skripto
            &Save: &Shrani
            Save script to file: Shrani skripto v datoteko
            Console: Konzola
        def `set_data`:
            data: false
        def `insert_data`:
            data: false
        def `remove_data`:
            data: false
        def `set_learner`:
            learner: false
        def `insert_learner`:
            learner: false
        def `remove_learner`:
            learner: false
        def `set_classifier`:
            classifier: false
        def `insert_classifier`:
            classifier: false
        def `remove_classifier`:
            classifier: false
        def `set_object`:
            object: false
        def `insert_object`:
            object: false
        def `remove_object`:
            object: false
        def `onAddScript`:
            New script: Nova skripta
        def `onAddScriptFromFile`:
            Open Python Script: Odpri skripto v Pythonu
            ~/: false
            Python files (*.py)\nAll files(*.*): Programi v Pythonu (*.py)\nVse datoteke (*.*)
        def `saveScript`:
            ~/: false
            Save Python Script: Shrani skripto v Pythonu
            Python files (*.py)\nAll files(*.*): Programi v Pythonu (*.py)\nVse datoteke (*.*)
            .py: false
            w: false
        def `initial_locals_state`:
            in_: false
            s: false
        def `commit`:
            _script: false
            \nRunning script:\n: \nIzvajam skripto:\n
            exec(_script): false
            out_: false
            "'{}' has to be an instance of '{}'.": "'{}' mora biti '{}'."
        def `migrate_settings`:
            libraryListSource: false
            scriptLibrary: false
    class `OWPythonScriptDropHandler`:
        def `canDropFile`:
            text/x-python: false
        def `parametersFromFile`:
            rt: false
            _ScriptData: false
            name: false
            script: false
            filename: false
            scriptLibrary: false
            def `is_same`:
                _ScriptData: false
                filename: false
            __version__: false
            scriptText: false
    __main__: false
widgets/data/owrandomize.py:
    class `OWRandomize`:
        Randomize: Premešaj
        Randomize features, class and/or metas in data table.: Premeša značilke, razrede in/ali meta spremenljivke.
        Transform: Predelava podatkov
        icons/Random.svg: false
        randomize, random: randomize, random, naključno
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        def `__init__`:
            Shuffled columns: Premešani stolpci
            shuffle_class: false
            Classes: Razredi
            shuffle_attrs: false
            Features: Značilke
            shuffle_metas: false
            Metas: Meta spremenljivke
            Shuffled rows: Delež premešanih vrstic
            None: Nič
            scope_prop: false
            All: Vse
            random_seed: false
            Replicable shuffling: Ponovljivo naključno mešanje
        def `_set_scope_label`:
            {}%: false
        def `send_report`:
            classes: razredi
            features: značilke
            metas: meta spremenljivke
            none: nič
            ' and ': ' in '
            ', ': true
            Settings: Nastavitve
            Shuffled columns: Premešani stolpci
            Proportion of shuffled rows: Delež premešanih vrstic
            {}%: false
            Replicable: Ponovljivo
            yes: da
            no: ne
    __main__: false
    iris: false
widgets/data/owrank.py:
    score_meta: false
    name: false
    shortname: false
    scorer: false
    problem_type: false
    is_default: false
    Information Gain: Informacijski prispevek
    Info. gain: Inf. prisp
    Information Gain Ratio: Delež inform. prispevka
    Gain ratio: Delež inf.
    Gini Decrease: Znižanje Ginijevega indeksa
    Gini: true
    ANOVA: true
    χ²: true
    ReliefF: true
    FCBF: true
    Univariate Regression: Univariatna regresija
    Univar. reg.: Univar. reg.
    RReliefF: true
    def `get_method_scores`:
        ignore: false
        %s doesn't work on this data: false
        '%s had to be computed separately for each ': false
        variable: false
    def `get_scorer_scores`:
        %s doesn't work on this data: false
        _: false
    class `OWRank`:
        Rank: Rangiranje
        Rank and filter data features by their relevance.: Rangiraj in filtriraj spremenljivke glede na pomembnosti.
        icons/Rank.svg: false
        rank, filter: rank, filter, filtriraj
        class `Inputs`:
            Data: Podatki
            Scorer: Kriterij
        class `Outputs`:
            Reduced Data: Reducirani podatki
            Scores: Ocene
            Features: Spremenljivke
        class `Information`:
            Data does not have a (single) target variable.: Podatki nimajo (ene) ciljne spremenljivke.
            Missing values will be imputed as needed.: Manjkajoče vrednosti bodo nadomeščene.
        class `Error`:
            Cannot handle target variable type {}: Vrsta ciljne spremenljivke '{}' ni podprta.
            'Scorer {} inadequate: {}': Kriterij {} ni ustrezen: {}
            Data does not have a single attribute.: Podatki ne vsebujejo nobene spremenljivke.
        class `Warning`:
            Variables with duplicated names have been renamed.: Spremenljivke s podvojenimi imeni so preimenovane.
        def `__init__`:
            Scoring Methods: Kriteriji pomembnosti
            Select Attributes: Izbor spremenljivk
            None: Nobena
            All: Vse
            Manual: Ročno
            Best ranked:: Najboljše ocenjene:
            nSelected: false
            auto_apply: false
        def `handleNewSignals`:
            Running: V teku
        def `on_done`:
            '#': false
        def `send_report`:
            Input: Vhod
            Ranks: Rangi
            {:.3f}: false
            Output: Izhod
        def `create_scores_table`:
            Feature: Spremenljivka
            ', ': true
            Feature Scores: Ocene spremenljivk
        def `migrate_settings`:
            headerState: false
            sorting: false
    __main__: false
    heart_disease.tab: false
    Learner: false
widgets/data/owsave.py:
    ~{os.sep}: false
    class `OWSave`:
        Save Data: Shrani podatke
        Save data to an output file.: Shrani podatke v datoteko.
        icons/Save.svg: false
        Data: Podatki
        save data, export: save data, export, izvoz
        class `Inputs`:
            Data: Podatki
        class `Error`:
            Use Pickle format for sparse data.: Za redke podatke uporabi obliko 'pickle'.
        def `__init__`:
            add_type_annotations: false
            Add type annotations to header: V glavo dodaj oznake tipov stolpcev
            Some formats (Tab-delimited, Comma-separated) can include \n: Nekateri podatki (ločeni z vejico ali s tabulatorji)\n
            additional information about variables types in header rows.: omogočajo shranjevanje informacije o vrstah stolpcev.
        def `get_filters`:
            write_file: false
            EXTENSIONS: false
            {w.DESCRIPTION} (*{w.EXTENSIONS[0]}): false
            Compressed {w.DESCRIPTION} (*{w.EXTENSIONS[0]}.gz): Stisnjeni {w.DESCRIPTION} (*{w.EXTENSIONS[0]}.gz)
        def `send_report`:
            No: Ne
            Yes: Da
            File name: Ime datoteke
            not set: ni nastavljeno
            Format: Oblika
            Type annotations: Oznake tipov
        def `migrate_settings`:
            def `migrate_to_version_2`:
                compression: false
                filter: false
                filetype: false
                compress: false
                .gz: false
            add_type_annotations: false
            stored_name: false
            .xlsx: false
        def `initial_start_dir`:
            name: false
    __main__: false
    iris: false
widgets/data/owselectbydataindex.py:
    class `OWSelectByDataIndex`:
        Select by Data Index: Izberi iste vrstice
        Match instances by index from data subset.: Izberi primere, ki ustrezajo vrsticam iz podmnožice.
        Transform: Predelava podatkov
        icons/SelectByDataIndex.svg: false
        class `Inputs`:
            Data: Podatki
            Data Subset: Podmnožica podatkov
        class `Outputs`:
            Matching Data: Izbrani podatki
            Data: false
            Unmatched Data: Ostali podatki
            Annotated Data: Označeni podatki
        class `Warning`:
            Input tables do not share any instances.: Vhodni tabeli nimata skupnih vrstic.
        def `__init__`:
            '
Data rows keep their identity even when some or all original variables
are replaced by variables computed from the original ones.

This widget gets two data tables ("Data" and "Data Subset") that
can be traced back to the same source. It selects all rows from Data
that appear in Data Subset, based on row identity and not actual data.
': '
Vrstice v podatkih ohranijo svojo identiteto tudi, kadar so nekatere ali
celo vse izvirne spremenljivke zamenjane z drugimi, izračunanimi iz njih.

Ta gradnik sprejme dve tabeli ("Podatki" in "Podmnožica"), ki izhajate
iz istega vira. Izbere tiste vrstice iz Podatki, ki se pojavijo tudi v
Podmnožica, pri čemer se ne ozira na vrednosti spremenljivk temveč na
identiteto vrstic.
'
        def `send_report`:
            def `data_info_text`:
                No data.: Ni podatkov.
                '{data.name}, ': true
                "{len(data)} {pl(len(data), 'instance')}, ": "{len(data)} {plsi(len(data), 'vrstica')}, "
                {nvars} {pl(nvars, 'variable')}: {nvars} {plsi(nvars, 'spremenljivka')}
            Data: Podatki
            Data Subset: Podmnožica podatkov
    __main__: false
    iris.tab: false
widgets/data/owselectcolumns.py:
    class `VariablesListItemModel`:
        application/x-Orange-VariableListModelData: false
        def `mimeData`:
            _items: false
        def `dropMimeData`:
            _items: false
            _moved: false
    class `SelectedVarsView`:
        def `startDrag`:
            _moved: false
    class `PrimitivesView`:
        def `acceptsDropEvent`:
            _items: false
    class `SelectAttributesDomainContextHandler`:
        def `encode_setting`:
            domain_role_hints: false
        def `decode_setting`:
            domain_role_hints: false
        def `match`:
            domain_role_hints: false
            available: false
        def `filter_value`:
            domain_role_hints: false
    class `OWSelectAttributes`:
        Select Columns: Izbor stolpcev
        'Select columns from the data table and assign them to ': 'Izbor stolpcev in določitev njihovih vlog '
        data features, classes or meta variables.: (spremenljivka, ciljna spremenljivka, meta spremenljivka).
        Transform: Predelava podatkov
        icons/SelectColumns.svg: false
        select columns, filter, attributes, target, variable: select columns, filter, attributes, target, variable, atributi, spremenljivke, stolpci
        class `Inputs`:
            Data: Podatki
            Features: Spremenljivke
        class `Outputs`:
            Data: Podatki
            Features: Spremenljivke
        class `Warning`:
            Features and data domain do not match: Tabela ne vsebuje nobene od podanih vhodnih spremenljivk.
            Most widgets do not support multiple targets: Večina gradnikov podpira le eno ciljno spremenljivko.
        def `__init__`:
            Ignored: Odstranjeno
            Features: Spremenljivke
            use_input_features: false
            Use input features: Uporabi vhodne spremenljivke
            Always use input features: Vedno uporabi vhodne spremenljivke
            Target: Cilj
            Metas: Meta spremenljivke
            >: true
            Reset: Povrni
            ignore_new_features: false
            Ignore new variables by default: Privzeto odstrani nove spremenljivke
            'When the widget receives data with additional columns ': Če je ta možnost izbrana, bo gradnik v primeru,\n
            'they are added to the available attributes column if ': da prejme podatke z novimi stolpci, le-te\n
            <i>Ignore new variables by default</i> is checked.: privzeto dodal med odstranjene spremenljivke.
            auto_commit: false
        def `__use_features_changed`:
            use_features_box: false
        def `set_data`:
            attribute: false
            class: false
            meta: false
            available: false
        def `restore_hints`:
            attribute: false
            meta: false
            class: false
            available: false
        def `update_domain_role_hints`:
            available: false
            attribute: false
            class: false
            meta: false
        def `update_var_counts`:
            {name} ({nvars}/{nall}): true
            {name} ({nvars}): true
        def `update_interface_state`:
            >: true
            <: true
        def `send_report`:
            Input data: Vhodni podatki
            Output data: Izhodni podatki
            No changes.: Ni sprememb.
            {len(diff)} ({", ".join(x.name for x in diff)}): true
            Removed: Odstranjene
    __main__: false
    brown-selected: false
widgets/data/owselectrows.py:
    class `SelectRowsContextHandler`:
        def `encode_setting`:
            conditions: false
            x: false
        def `decode_setting`:
            conditions: false
            x: false
            f: false
        def `match`:
            conditions: false
        def `filter_value`:
            conditions: false
    class `FilterDiscreteType`:
        Equal: false
        NotEqual: false
        In: false
        IsDefined: false
    class `OWSelectRows`:
        Select Rows: Izberi vrstice
        Select rows from the data based on values of variables.: Izberi vrstice glede na vrednosti spremenljivk.
        icons/SelectRows.svg: false
        Transform: Predelava podatkov
        select rows, filter: select rows, filter, vrstice
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Matching Data: Izbrani podatki
            Unmatched Data: Neizbrani podatki
        equals: je
        equal: so
        is not: ni
        are not: niso
        is below: je manj kot
        are below: so manjše kot
        is at most: je največ
        are at most: so največ
        is greater than: je več kot
        are greater than: so večje kot
        is at least: je vsaj
        are at least: so vsaj
        is between: je med
        are between: so med
        is outside: je izven
        are outside: so izven
        is defined: je znan
        are defined: so znane
        is: je
        is one of: je eden izmed
        is before: je pred
        are before: so pred
        is equal or before: je enak ali pred
        are equal or before: so enake ali pred
        is after: je za
        are after: so za
        is equal or after: je enak ali za
        are equal or after: so enake ali za
        contains: vsebuje
        contain: vsebujejo
        does not contain: ne vsebuje
        do not contain: ne vsebujejo
        begins with: se začne na
        begin with: se začnejo na
        does not begin with: se ne začne na
        do not begin with: se ne začnejo na
        ends with: se konča na
        end with: se končajo na
        does not end with: se ne konča na
        do not end with: se ne končajo na
        is not defined: ni definiran
        are not defined: niso definirani
        All variables: Vse spremenljivke
        All numeric variables: Vse številske spremenljivke
        All string variables: Vse besedilne spremenljivke
        class `Error`:
            {}: false
        def `__init__`:
            Conditions: Pogoji
            Add Condition: Dodaj pogoj
            Add All Variables: Dodaj vse spremenljivke
            Remove All: Odstrani vse
            purge_attributes: false
            Remove unused values and constant features: Odstrani neuporabljene vrednosti in konstantne spremenljivke
            purge_classes: false
            Remove unused classes: Odstrani prazne razrede
            auto_commit: false
        def `add_row`:
            ×: true
            '* {font-size: 16pt; color: palette(button-text) }': true
            '*:hover {color: palette(bright-text)}': true
        def `add_all`:
            Remove existing filters: Odstrani vse pogoje
            'This will replace the existing filters with ': 'Zamenjam obstoječe pogoje s '
            filters for all variables.: pogoji za vse spremenljivke?
        def `_get_lineedit_contents`:
            controls: false
        def `_get_value_contents`:
            controls: false
            ', ': false
            Type %s not supported.: false
        def `set_new_values`:
            defined: znan
            ' one of': ' eden izmed'
            ' and ': ' in '
        def `_values_to_floats`:
            Some values could not be parsed as floats: Nekaterih vrednosti ni mogoče prebrati kot števila
            ' in the current locale: {values}': ""
        def `commit`:
            invalid operand: false
        def `send_report`:
            No data.: Ni podatkov.
            Data instances: Število primerov
            {} {}: false
            is one of: je eden izmed
            {', '.join(valnames[:-1])} or {valnames[-1]}: {', '.join(valnames[:-1])} ali {valnames[-1]}
            {attr} is {valstr}: {attr} je {valstr}
            {attr} {name} {attr.values[value]}: false
            {attr} {name} {' and '.join(map(repr, values))}: {attr} {name} {' in '.join(map(repr, values))}
            {attr} {name} {' and '.join(values)}: {attr} {name} {' in '.join(values)}
            Instances: Primerov
            Condition: Pogoji
            ' AND ': ' IN '
            no conditions: ni pogojev
            Data: Podatki
            Matching data: Izbrani podatki
            Non-matching data: Neizbrani podatki
            Output: Izhod
            {match_inst} {pl(match_inst, 'instance')}: {match_inst} {plsi(match_inst, 'primer')}
            None: Prazno
            {nonmatch_inst} {pl(nonmatch_inst, 'instance')}: {nonmatch_inst} {plsi(nonmatch_inst, 'primer')}
        def `migrate_context`:
            conditions: false
    class `CheckBoxPopup`:
        def `__init__`:
            ', ': false
    class `DateTimeWidget`:
        def `set_format`:
            yyyy-MM-dd hh:mm:ss: false
            %Y-%m-%d %H:%M:%S: false
            yyyy-MM-dd: false
            %Y-%m-%d: false
            hh:mm:ss: false
            %H:%M:%S: false
    __main__: false
    heart_disease: false
widgets/data/owsql.py:
    def `is_postgres`:
        display_name: false
        PostgreSQL: false
    class `OWSql`:
        SQL Table: Branje SQL
        orange.widgets.data.sql: false
        Load dataset from SQL.: Naloži podatke iz baze SQL.
        icons/SQLTable.svg: false
        Data: Podatki
        sql table, load: sql table, load, naloži,
        class `Outputs`:
            Data: Podatki
            Attribute-valued dataset read from the input file.: Podatki prebrani iz baze
        class `Information`:
            Data description was generated from a sample.: Podatki vsebujejo samo vzorec.
        class `Warning`:
            'Database is missing extensions: {}': Podatkovna baza nima razširitev: {}
        class `Error`:
            Please install a backend to use this widget.: Namestite knjižnico za podatkovno bazo.
        def `_add_tables_controls`:
            Tables: Tabele
            table: tabela
            materialize: false
            'Materialize to table ': 'Materializiraj v tabelo '
            Save results of the query in a table: Shrani podatke poizvedbe v tabelo
            materialize_table_name: false
            Execute: Izvedi
            guess_values: false
            Auto-discover categorical variables: Samodejno zaznaj kategorične spremenljivke
            download: false
            Download data to local memory: Shrani podatke v pomnilnik
        def `highlight_error`:
            'QLineEdit {border: 2px solid red;}': false
            server: false
            host: false
            role: false
            database: false
        def `on_connection_success`:
            missing_extension: false
            ', ': true
        def `on_connection_error`:
            \n: false
        def `refresh_tables`:
            Select a table: Izberi tabelo
            Custom SQL: Prikrojen SQL
        def `select_table`:
            Custom SQL: Prikrojen SQL
            Table: Tabela
            (None): (Brez)
        def `get_table`:
            Table: false
            (None): (Brez)
            Custom SQL: Prikrojen SQL
            Query: Poizvedba
            Specify a table name to materialize the query: Določi ime materializirane tabele
            'DROP TABLE IF EXISTS ': false
            'CREATE TABLE ': false
            ' AS ': false
            'ANALYZE ': false
            'Attribute discovery might take ': 'Samodejno zaznavanje v velikih tabelah lahko zahteva '
            a long time on large tables.\n: veliko časa.\n
            Do you want to auto discover attributes?: Želite samodejno zaznavanje?
            Yes: Da
            No: Ne
            Yes, on a sample: Da, na vzorcu
            'Data appears to be big. Do you really ': 'Podatki so videti veliki. Jih res želite '
            want to download it to local memory?\n: naložiti v pomnilnik?\n
            'Table length: {:,}. Limit {:,}': Dolžina tabele: {:,}. Omejitev {:,}
            Yes, a sample: Da, vzorec
            Warning: Opozorilo
            Data is too big to download.\n: Podatki so preveliki.
            Question: Vprašanje
            want to download it to local memory?: naložiti v pomnilnik?
        def `migrate_settings`:
            host: false
            port: false
            username: false
            password: false
    __main__: false
widgets/data/owtable.py:
    class `HeaderViewWithSubsetIndicator`:
        \N{BULLET}: false
        def `paintSection`:
            ' ': false
        def `sectionSizeFromContents`:
            ' ': false
    class `OWTable`:
        Data Table: Tabela
        View the dataset in a spreadsheet.: Pregled podatkov v tabeli.
        icons/Table.svg: false
        data table, view: data table, view, pogled, podatki
        class `Inputs`:
            Data: Podatki
            Data Subset: Podmnožica podatkov
        class `Outputs`:
            Selected Data: Izbrani podatki
        class `Warning`:
            Cannot restore sorting.\n: Razvrščanja ni mogoče obnoviti.\n
            'Missing columns in input table: {}': Manjkajoči stolpci v vhodni tabeli: {}
            Input table cannot be sorted due to implementation constraints.: Vhodne tabele ni mogoče razvrstiti zaradi izvedbenih omejitev.
        rows: false
        columns: false
        def `__init__`:
            Info: true
            Variables: Spremenljivke
            show_attribute_labels: false
            Show variable labels (if present): Pokaži oznake spremenljivk
            show_distributions: false
            Visualize numeric values: Vizualiziraj številske vrednosti
            color_by_class: false
            Color by instance classes: Obarvaj primere glede na razred
            Selection: Izbor
            select_rows: false
            Select full rows: Izbiraj cele vrstice
            Restore Original Order: Izvirni vrstni red
            Show rows in the original order: Pokaži vrstice v izvirnem vrstnem redu
            auto_commit: false
        def `set_dataset`:
            def `update`:
                _update_info: false
        def `handleNewSignals`:
            rows: false
            columns: false
        def `_update_input_summary`:
            No data.: Ni podatkov.
            \n: false
        def `__restore_sort`:
            ', ': false
        def `__encode_column_id`:
            def `escape`:
                \\: false
            TARGET: false
            META: false
            FEATURES: false
            \\BASKET({lookup[coldesc.role]}): false
        def `__decode_column_id`:
            \\: false
        def `commit`:
            rows: false
            columns: false
    __main__: false
    iris: false
widgets/data/owtransform.py:
    class `TransformRunner`:
        def `run`:
            Transforming...: Spreminjam...
    class `OWTransform`:
        Apply Domain: Spremeni domeno
        Applies template domain on data table.: Spremeni vhodne podatke glede na domeno iz vzorca.
        Transform: Predelava podatkov
        icons/Transform.svg: false
        apply domain, transform: apply domain, transform, predelava
        class `Inputs`:
            Data: Podatki
            Template Data: Podatki z domeno
        class `Outputs`:
            Transformed Data: Spremenjeni podatki
        class `Error`:
            An error occurred while transforming data.\n{}: Napake med spreminjanjem domene.\n{}
        def `__init__`:
            '
The widget takes Data, to which it re-applies transformations
that were applied to Template Data.

These include selecting a subset of variables as well as
computing variables from other variables appearing in the data,
like, for instance, discretization, feature construction, PCA etc.
': '
Gradnik prejme Podatke in na njih ponovno izvede spremembe, ki
so bile izvedena na vzorcu.

Spremembe vključujejo izbor spremenljivk ter sestavljanje novih
spremenljivk iz obstoječih, kot na primer diskretizacijo, PCA in podobno.
'
        def `send_report`:
            Data: Podatki
            Template data: Vzorec
            Transformed data: Spremenjeni podatki
    __main__: false
    iris: false
widgets/data/owtranspose.py:
    class `OWTranspose`:
        Transpose: Transponiraj
        Transpose data table.: Spremeni vrstice v stolpce in obratno.
        Transform: Predelava podatkov
        icons/Transpose.svg: false
        transpose: transpose, spremeni
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        Feature: Spremenljivka
        class `Warning`:
            'Values are not unique.\nTo avoid multiple ': Vrednosti niso unikatne.\n K vrednostim
            'features with the same name, values \nof ': "'{}' so zato dodane številke."
            "'{}' have been augmented with indices.": ""
            Categorical features have been encoded as numbers.: Kategorične vrednosti so predstavljene z indeksi.
        class `Error`:
            {}: false
        def `__init__`:
            feature_type: false
            Feature names: Imena spremenljivk
            Generic: Generična imena
            feature_name: false
            Type a prefix ...: Določi predpono ...
            Custom feature name: Določi predpono imen spremenljivk
            From variable:: Po vrednosti spremenljivke:
            feature_names_column: false
            remove_redundant_inst: false
            Remove redundant instance: Odstrani odvečni primer
        def `send_report`:
            from variable: po spremenljivki
            "  '{}'": false
            Feature names: Imena spremenljivk
            Data: Podatki
    __main__: false
    iris: false
widgets/data/owunique.py:
    class `OWUnique`:
        Unique: Enkratni
        icons/Unique.svg: false
        Filter instances unique by specified key attribute(s).: Filtriraj primere tako, da se ključne vrednosti ne ponavljajo.
        Transform: Predelava podatkov
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Data: Podatki
        Last instance: Zadnji primer
        First instance: Prvi primer
        Middle instance: Srednji primer
        Random instance: Naključni primer
        Discard non-unique instances: Zavrzi skupine z več primeri
        def `__init__`:
            selected_vars: false
            Group by: Upoštevane spremenljivke
            tiebreaker: false
            Instance to select in each group:: Primer, ki predstavlja posamično skupino:
            autocommit: false
            Commit: Uveljavi
    __main__: false
    iris: false
widgets/data/utils/histogram.py:
    class `ProportionalBarItem`:
        def `__init__`:
            If colors are provided, they must match the shape of distribution: false
        def `_draw_bars`:
            '#ccc': false
    class `Histogram`:
        def `__init__`:
            '#000': false
            Border tuple must be of size 4.: false
        def `_histogram`:
            Cannot calculate histogram on empty array: false
        def `_get_colors`:
            '#ccc': false
    __main__: false
    iris: false
    '#000': false
widgets/data/utils/models.py:
    class `RichTableModel`:
        def `__init__`:
            _: false
        def `headerData`:
            \n: false
    class `TableSliceProxy`:
        def `setRowSlice`:
            invalid stride: false
widgets/data/utils/preprocess.py:
    class `StandardItemModel`:
        def `moveRow`:
            '`moveRow` did not succeed! Data model might be ': false
            in an inconsistent state.: false
        def `moveRows`:
            '`moveRows` did not succeed! Data model might be ': false
            in an inconsistent state.: false
    class `Controller`:
        application/x-qwidget-ref: false
    class `SequenceFlow`:
        class `Frame`:
            def `__init__`:
                Remove: Odstrani
        def `dropEvent`:
            application/x-internal-move: false
        def `dragEnterEvent`:
            application/x-internal-move: false
        def `__startInternalDrag`:
            application/x-internal-move: false
widgets/data/utils/tablesummary.py:
    class `ApproxSummary`:
        Future[int]: false
    def `_sql_table_len`:
        Future[int]: false
    def `format_summary`:
        def `format_part`:
            ' ({perc:.1f} % missing data)': ' ({perc:.1f} % manjkajočih podatkov)'
            sparse: redki
            tags: oznake
            ' ({tag}, density {dens:.2f} %)': ' ({tag}, gostota {dens:.2f} %)'
        {ninst} {pl(ninst, 'instance')}: {ninst} {plsi(ninst, "primer")}
        ~{ninst} {pl(ninst, 'instance')}: ~{ninst} {plsi(ninst, "primer")}
        ' (no missing data)': ' (ni manjkajočih podatkov)'
        {nattrs} {pl(nattrs, 'feature')}: {nattrs} {plsi(nattrs, 'spremenljivka')}
        No target variable.: Ni ciljne spremenljivke.
        {nclasses} {pl(nclasses, 'outcome')}: {nclasses} {plsi(nclasses, 'ciljna spremenljivka|ciljni spremenljivki|ciljne spremenljivke|ciljnih spremenljivk')}
        Numeric outcome: Številska ciljna spremenljivka
        Target with {nvalues} {pl(nvalues, 'value')}: Ciljna spremenljivka {plsi_sz(nvalues)} {z_besedo(nvalues, 6, "m")} {plsi(nvalues, "razredom|razredoma|razredi")}
        {nmetas} {pl(nmetas, 'meta attribute')}: {nmetas} meta {plsi(nmetas, "spremenljivka")}
        No meta attributes.: Ni meta spremenljivk.
widgets/data/utils/tableview.py:
    class `DataTableView`:
        def `__init__`:
            darwin: false
    class `RichTableView`:
        def `__headerDataChanged`:
            \n: false
widgets/data/utils/pythoneditor/brackethighlighter.py:
    class `BracketHighlighter`:
        '#0b0': false
        '#a22': false
        ({[: false
        )}]: false
        def `_iterateDocumentCharsForward`:
            Time is over: false
        def `_iterateDocumentCharsBackward`:
            Time is over: false
        def `_makeMatchSelection`:
            darkMode: false
            '#111111': false
widgets/data/utils/pythoneditor/completer.py:
    module: false
    class: false
    instance: false
    function: false
    param: false
    path: false
    keyword: false
    property: false
    statement: false
    class `CompletionWidget`:
        def `__init__`:
            QListWidget::item:selected {: false
            'background-color: lightgray;': false
            }: false
        def `show_list`:
            point: false
        def `update_list`:
            end: false
            start: false
            text: false
        def `_get_cached_icon`:
            %s is not a valid jedi type: false
            ..: false
            icons: false
            pythonscript: false
            .svg: false
        def `set_item_display`:
            text: false
            type: false
        def `get_html_item_representation`:
            <table width=": false
            '" height="': false
            '">': false
            <tr>: false
            '<td valign="middle" style="color: black;" style="margin-left:22px;">': false
            ' ': false
            &nbsp;: false
            </td>: false
            '<td valign="middle" align="right" float="right" ': false
            'style="color: black;">': false
            </tr>: false
            </table>: false
        def `hide`:
            tooltip_widget: false
        def `keyPressEvent`:
            .: false
            :: false
        def `is_up_to_date`:
            text: false
        def `focusOutEvent`:
            darwin: false
        def `trigger_completion_hint`:
            point: false
            textEdit: false
            newText: false
            insertText: false
            $: false
            python: false
            (: false
            documentation: false
    class `Completer`:
        def `_send_completion_request`:
            complete: false
        _CompletionRequest: false
        id: false
        code: false
        pos: false
        def `_handle_complete_reply`:
            complete: false
            parent_header: false
            msg_id: false
            content: false
            metadata: false
            _jupyter_types_experimental: false
            Jupyter API has changed, completions are unavailable.: false
            cursor_start: false
            type: false
            <unknown>: false
widgets/data/utils/pythoneditor/editor.py:
    class `PythonEditor`:
        e: false
        w: false
        n: false
        \n: false
        def `__init__`:
            darkMode: false
            '#111111': false
            '#ffffff': false
            '#444444': false
            '#000000': false
            '#ffee00': false
        def `_initActions`:
            Toggle comment line: false
            Ctrl+/: false
            Scroll up: false
            Ctrl+Up: false
            go-up: false
            Scroll down: false
            Ctrl+Down: false
            go-down: false
            Select and scroll Up: false
            Ctrl+Shift+Up: false
            Select and scroll Down: false
            Ctrl+Shift+Down: false
            Increase indentation: false
            Tab: false
            format-indent-more: false
            Decrease indentation: false
            Shift+Tab: false
            format-indent-less: false
            Autoindent line: false
            Ctrl+I: false
            Indent with 1 space: false
            Ctrl+Shift+Space: false
            Unindent with 1 space: false
            Ctrl+Shift+Backspace: false
            Undo: false
            edit-undo: false
            Redo: false
            edit-redo: false
            Move line up: false
            Alt+Up: false
            Move line down: false
            Alt+Down: false
            Delete line: false
            Alt+Del: false
            edit-delete: false
            Cut line: false
            Alt+X: false
            edit-cut: false
            Copy line: false
            Alt+C: false
            edit-copy: false
            Paste line: false
            Alt+V: false
            edit-paste: false
            Duplicate line: false
            Alt+D: false
        def `_onToggleCommentLine`:
            def `isHashCommentSelected`:
                '#': false
            '# ': false
        def `selectedText`:
            \u2029: false
            \n: false
        def `eol`:
            \r: false
            \n: false
            \r\n: false
            Invalid EOL value: false
        def `replaceText`:
            Invalid start position %d: false
            Invalid end position %d: false
        def `_setSolidEdgeGeometry`:
            9: false
        def `keyPressEvent`:
            def `backspaceOverwrite`:
                ' ': false
            darwin: false
        def `_updateTabStopWidth`:
            ' ': false
        def `lines`:
            Invalid new value of "lines" attribute: false
            \n: false
        def `textForSaving`:
            \n: false
        def `_get_token_at`:
            tokens: false
            syntax_stack: false
        def `mapToAbsPosition`:
            Invalid line index %d: false
            Invalid column index %d: false
        def `mapToLineCol`:
            Invalid absolute position %d: false
        def `insert_completion`:
            start: false
            end: false
            text: false
        def `keyReleaseEvent`:
            _: false
            .: false
            'from ': false
            'import ': false
        def `_chooseVisibleWhitespace`:
            \t: false
            ' ': false
        def `_drawIndentMarkersAndEdge`:
            def `drawWhiteSpace`:
                ' ': false
            def `effectiveEdgePos`:
                \t: false
        def `insertFromMimeData`:
            ', ': false
            "'": false
            "'\""'\""'": false
        def `get_current_word_and_position`:
            def `is_special_character`:
                ([^\d\W]\w*): false
            ([^\d\W]\w*): false
    class `LineNumberArea`:
        def `__init__`:
            line_numbers: false
        def `__calculateWidth`:
            9: false
        def `__allocateBits`:
            A margin cannot request negative number of bits: false
        def `setBlockValue`:
            The margin ': false
            "' did not allocate any bits for the values": false
            "' must be a positive integer": false
            "' value exceeds the allocated bit range": false
        def `getBlockValue`:
            The margin ': false
            "' did not allocate any bits for the values": false
widgets/data/utils/pythoneditor/indenter.py:
    class `Indenter`:
        def `text`:
            \t: false
            ' ': false
        def `autoIndentBlock`:
            \n: false
        def `onChangeSelectedBlocksIndent`:
            def `indentBlock`:
                ' ': false
            def `spacesCount`:
                ' ': false
            def `unIndentBlock`:
                \t: false
        def `onShortcutIndentAfterCursor`:
            def `insertIndent`:
                \t: false
                ' ': false
    class `IndentAlgBase`:
        def `computeIndent`:
            \n: false
        def `_makeIndentFromWidth`:
            \t: false
            ' ': false
        def `_makeIndentAsColumn`:
            \t: false
        def `findBracketBackward`:
            (: false
            ): false
            [: false
            ]: false
            {: false
            }: false
            Invalid bracket "%s": false
            Not found: false
        def `findAnyBracketBackward`:
            (): false
            []: false
            {}: false
            Not found: false
    class `IndentAlgPython`:
        def `_computeSmartIndent`:
            )]}: false
            ,: false
            continue: false
            break: false
            pass: false
            raise: false
            return: false
            'raise ': false
            'return ': false
            :: false
            {[: false
widgets/data/utils/pythoneditor/lines.py:
    class `Lines`:
        def `_checkAndConvertIndex`:
            Invalid block index: false
        def `__setitem__`:
            Attempt to replace %d lines with %d lines: false
        def `insert`:
            Invalid block index: false
widgets/data/utils/pythoneditor/rectangularselection.py:
    class `RectangularSelection`:
        text/rectangular-selection: false
        def `_visibleCharPositionGenerator`:
            \t: false
        def `_visibleToRealColumn`:
            \t: false
        def `cursors`:
            Rectangular selection area is too big: false
        def `copy`:
            \n: false
            utf8: false
        def `_indentUpTo`:
            \t: false
            ' ': false
        def `paste`:
            utf8: false
widgets/data/utils/pythoneditor/vim.py:
    a: false
    z: false
    Key_: false
    _: false
    def `isChar`:
        ' ': false
    normal: false
    insert: false
    replace character: false
    '#33cc33': false
    '#ff9900': false
    '#ff3300': false
    class `Vim`:
        def `extraSelections`:
            '#ffcc22': false
            '#000000': false
    class `Insert`:
        '#ff9900': false
        def `text`:
            insert: false
    class `ReplaceChar`:
        '#ee7777': false
        def `text`:
            replace char: false
    class `Replace`:
        '#ee7777': false
        def `text`:
            replace: false
    class `BaseCommandMode`:
        gg: false
        def `_moveCursor`:
            gg: false
            'Not expected motion ': false
    class `BaseVisual`:
        '#6699ff': false
        def `_processChar`:
            gg: false
            \n: false
        def `cmdJoinLines`:
            ' ': false
        def `cmdInternalPaste`:
            \n: false
    class `Visual`:
        visual: false
    class `VisualLines`:
        visual lines: false
    class `Normal`:
        '#33cc33': false
        normal: false
        def `_processChar`:
            gg: false
        def `cmdJoinLines`:
            ' ': false
        def `cmdInternalPaste`:
            \n: false
        def `cmdCompositeDelete`:
            gg: false
widgets/data/utils/pythoneditor/tests/run_all.py:
    __main__: false
    .: false
    test_*: false
    Suite created: false
    Run done: false
    OK: false
    Failed: false
widgets/evaluate/__init__.py:
    Evaluate: Vrednotenje
    orange.widgets.evaluate: false
    Evaluate model performance: Vrednotenje uspešnosti modela
    '#C3F3F3': false
    icons/Category-Evaluate.svg: false
widgets/evaluate/owcalibrationplot.py:
    metric_definition: false
    name: false
    functions: false
    short_names: false
    explanation: false
    Calibration curve: Kalibracijska krivulja
    Classification accuracy: Klasifikacijska točnost
    F1: true
    Sensitivity and specificity: Senzitivnost in specifičnost
    sens: senz
    spec: spec
    # Tule puščam TP, TN in tako naprej. Moremo to kako prevesti?
    '<p><b>Sensitivity</b> (falling) is the proportion of correctly ': '<p><b>Senzitivnost</b> (padajoča) je delež pravilno '
    detected positive instances (TP&nbsp;/&nbsp;P).</p>: zaznanih pozitivnih primerov, TP&nbsp;/&nbsp;P.</p>
    '<p><b>Specificity</b> (rising) is the proportion of detected ': '"<p><b>Specifičnost</b> (naraščajoča) je delež pravilno '
    negative instances (TN&nbsp;/&nbsp;N).</p>: zaznanih negativnih primerov, TN&nbsp;/&nbsp;N.</p>
    Precision and recall: Preciznost in priklic
    prec: spec
    recall: priklic
    '<p><b>Precision</b> (rising) is the fraction of retrieved instances ': '<p><b>Preciznost</b> (naraščajoča) je delež zaznanih relevantnih primerov, '
    that are relevant, TP&nbsp;/&nbsp;(TP&nbsp;+&nbsp;FP).</p>: TP&nbsp;/&nbsp;(TP&nbsp;+&nbsp;FP).</p>
    '<p><b>Recall</b> (falling) is the proportion of discovered relevant ': '<p><b>Priklic</b> (padajoč) je delež odkritih relevantnih primerov, '
    instances, TP&nbsp;/&nbsp;P.</p>: TP&nbsp;/&nbsp;P.</p>
    Pos and neg predictive value: Poz in neg nap. vrednost
    PPV: true
    TPV: true
    '<p><b>Positive predictive value</b> (rising) is the proportion of ': '<p><b>Pozitivna napovedna vrednost</b> (naraščajoča) je delež '
    correct positives, TP&nbsp;/&nbsp;(TP&nbsp;+&nbsp;FP).</p>: dejansko pozitivnih, TP&nbsp;/&nbsp;(TP&nbsp;+&nbsp;FP).</p>
    '<p><b>Negative predictive value</b> is the proportion of correct ': '<p><b>Negativna napovedna vrednost</b> (naraščajoča) je delež '
    negatives, TN&nbsp;/&nbsp;(TN&nbsp;+&nbsp;FN).</p>: dejanstko negativnih, , TN&nbsp;/&nbsp;(TN&nbsp;+&nbsp;FN).</p>
    True and false positive rate: Delež zaznanih poz in neg
    TPR: true
    FPR: true
    '<p><b>True and false positive rate</b> are proportions of detected ': '"<p><b>Delež zaznanih pozitivnih in negativnih primerov</b> izmed vseh '
    and omitted positive instances</p>: pozitivnih oz. negativnih primerov.
    class `ParameterSetter`:
        def `axis_items`:
            item: false
    class `OWCalibrationPlot`:
        Calibration Plot: Kalibracijska krivulja
        Calibration plot based on evaluation of classifiers.: Kalibracijska krivulja na osnovi rezultatov vrednotenja modelov.
        icons/CalibrationPlot.svg: false
        calibration plot: calibration plot, krivulja
        class `Inputs`:
            Evaluation Results: Rezultati vrednotenja
        class `Outputs`:
            Calibrated Model: Kalibrirani model
        class `Error`:
            'Calibration plot requires a categorical ': Kalibracijska krivulja zahteva kategorično ciljno spremenljivko.
            target variable.: ""
            Empty result on input. Nothing to display.: Ni rezultatov za prikaz.
            Remove test data instances with unknown classes.: Odstrani testne primere z neznanim razredom.
            All data instances belong to target class.: Vsi testni primeri pripadajo ciljnemu razredu.
            No data instances belong to target class.: Noben testni primer ne pripada ciljnemu razredu.
        class `Warning`:
            Test folds where all data belongs to (non)-target are not shown.: Testne množice, v katerih vsi podatki pripadajo (ne)-ciljnemu razredu, so izpuščene.
            Instance for which the model couldn't compute probabilities are: Primeri, za katere model ne more izračunati verjetnosti, so izpuščeni.
            skipped.: ""
            No valid data for model(s) {}: Ni veljavnih podatkov za model(e) {}
        class `Information`:
            "Can't output a model: {}": Na izhodu ni modela: {}
        plot: false
        def `__init__`:
            Settings: Nastavitve
            target_index: false
            Target:: Cilj:
            display_rug: false
            Show rug: Pokaži preprogo
            fold_curves: false
            Curves for individual folds: Krivulje za podmnožice
            selected_classifiers: false
            classifier_names: false
            Classifier: Modeli
            Metrics: Metrika
            score: false
            output_calibration: false
            Sigmoid calibration: Sigmoidna kalibracija
            Isotonic calibration: Izotonična kalibracija
            Output model calibration: Kalibracija izhodnega modela
            Info: Rezultati
            auto_commit: false
            bottom: false
            left: false
        def `_set_explanation`:
            bottom: false
            Predicted probability: Napovedana verjetnost
            Threshold probability to classify as positive: Prag za klasifikacijo v pozitivni razred
            left: false
        def `_initialize`:
            learner_names: false
            '#{}': false
        def `_rug`:
            pen: false
            pairs: false
        def `_prob_curve`:
            +: false
        def `_setup_plot`:
            ', ': false
            k: false
        def `get_info_text`:
            def `elided`:
                ...: false
            "<table>
                            <tr>
                                <th align='right'>Threshold: p=</th>
                                <td colspan='4'>{self.threshold:.2f}<br/></td>
                            </tr>": "<table>
                            <tr>
                                <th align='right'>Prag:</th>
                                <td colspan='4'>{self.threshold:.2f}<br/></td>
                            </tr>"
            "<table>
                            <tr>
                                <th align='right'>Threshold:</th>
                                <td colspan='4'>p = {self.threshold:.2f}<br/>
                                </td>
                                <tr/>
                            </tr>": "<table>
                            <tr>
                                <th align='right'>Prag:</th>
                                <td colspan='4'>p = {self.threshold:.2f}<br/>
                                </td>
                                <tr/>
                            </tr>"
            "<tr>
                                <th></th>
                                {""<td></td>"".join(f""<td align='right'>{n}</td>""
                                  for n in short_names)}
                            </tr>": false
            <tr><th align='right'>{elided(name)}:</th>: false
            <td>/</td>: false
            <td>{curve[ind]:.3f}</td>: false
            </tr>: false
            <table>: false
        def `send_report`:
            Target class: Ciljni razred
            Output model calibration: Kalibracija izhodnega modela
            Sigmoid calibration: Sigmoidna kalibracija
            Isotonic calibration: Izotonična kalibracija
    __main__: false
widgets/evaluate/owconfusionmatrix.py:
    class `BorderedItemDelegate`:
        def `paint`:
            t: false
            r: false
            b: false
            l: false
    class `OWConfusionMatrix`:
        Confusion Matrix: Matrika zmot
        'Display a confusion matrix constructed from ': 'Pokaži matriko zmot glede na '
        the results of classifier evaluations.: rezultate vrednotenja.
        icons/ConfusionMatrix.svg: false
        confusion matrix: confusion matrix
        class `Inputs`:
            Evaluation Results: Rezultati vrednotenja
        class `Outputs`:
            Selected Data: Izbrani podatki
        Number of instances: Število primerov
        Proportion of predicted: Delež od napovedanih
        Proportion of actual: Delež od dejanskih
        Sum of probabilities: Vsota verjetnosti
        Number of correctly and incorrectly classified instances: Število pravilno oz. napačno uvrščenih primerov
        'Number of instances, distributed across columns ': 'Podobno kot število primerov, le da je vsak primer\n"razmazan" po stolpcih '
        according to predicted probabilities: glede na napovedane verjetnosti.
        'Clicking on cells or in headers outputs the corresponding ': 'Izberite eno ali več celic (ali kliknite glavo tabele) in pripadajoči '
        data instances: primeri bodo na izhodu.
        click_cell: false
        class `Error`:
            Confusion Matrix cannot show regression results.: Matrika zmot obravnava klasifikacijo, ne regresije.
            Evaluation Results input contains invalid values: Rezultati vrednotenja vsebujejo neveljavne vrednosti.
            Empty result on input. Nothing to display.: Ni podatkov za prikaz.
        def `__init__`:
            selected_learner: false
            learners: false
            Learners: Modeli
            Output: Izhod
            append_predictions: false
            Predictions: Napovedi
            append_probabilities: false
            Probabilities: Verjetnosti
            autocommit: false
            selected_quantity: false
            'Show: ': 'Pokaži: '
            Select Correct: Izberi pravilne
            Select Misclassified: Izberi napačne
            Clear Selection: Počisti izbor
        def `_init_table`:
            Predicted: Napovedana vrednost
            Actual: Dejanska vrednost
            br: false
            ' ': false
        def `set_results`:
            N-ARY SUMMATION: false
            learner_names: false
            Learner #{i + 1}: Model #{i + 1}
        def `_prepare_data`:
            {}({}): false
            p({value}): true
        def `_update`:
            {}: false
            {:2.1f} %: false
            {:2.1f}: false
            NA: NN
            trbl: false
            'actual: {}\npredicted: {}': dejanski: {}\nnapovedani: {}
            t: false
            l: false
        def `send_report`:
            Confusion matrix for {} (showing {}): Matrika zmot za model {} (prikazano {})
        def `migrate_settings`:
            selected_learner: false
    __main__: false
    iris: false
widgets/evaluate/owliftcurve.py:
    CurveData: false
    contacted: false
    respondents: false
    thresholds: false
    class `ParameterSetter`:
        Line: Črta
        Default Line: Privzeta črta
        Solid line: Polna črta
        Dash line: Prekinjena črta
        def `axis_items`:
            item: false
    class `OWLiftCurve`:
        Performance Curve: Krivulja zmogljivosti
        'Construct and display a performance curve ': 'Sestavi in pokaže krivuljo zmogljivosti '
        from the evaluation of classifiers.: iz rezultatov vrednotenja.
        icons/LiftCurve.svg: false
        performance curve, lift, cumulative gain, precision, recall, curve: performance curve, lift, cumulative gain, precision, recall, curve, dvig, kumulativni dobiček, preciznost, priklic, krivulja
        class `Inputs`:
            Evaluation Results: Rezultati vrednotenja
        class `Outputs`:
            Calibrated Model: Kalibriran model
        class `Warning`:
            Some curves are undefined; check models and data: Nekatere krivulje niso definirane; preverite modele in podatke.
        class `Error`:
            No defined curves; check models and data: Ni veljavnih krivulj; preverite modele in podatke.
        class `Information`:
            "Can't output a model: {}": Ni izhodnega modela: {}
        plot: false
        P Rate: Delež pozitivnih
        Recall: Priklic
        Lift: Dvig
        TP Rate: Delež resničnih pozitivnih
        Precision: Preciznost
        def `__init__`:
            Curve: Krivulja
            target_index: false
            'Target: ': 'Cilj: '
            curve_type: false
            Lift Curve: Krivulja dviga
            Cumulative Gains: Kumulativni dobiček
            Precision Recall: Preciznost - Priklic
            selected_classifiers: false
            classifier_names: false
            Models: Modeli
            Settings: Nastavitve
            show_threshold: false
            Show thresholds: Pokaži prag
            show_points: false
            Show points: Pokaži točke
            Area under the curve: Površina pod krivuljo
            /: false
            auto_commit: false
            bottom: false
            left: false
        def `_initialize`:
            learner_names: false
            '#{i}': false
        def `_set_axes_labels`:
            bottom: false
            left: false
        def `_setup_plot`:
            k: false
        def `_plot_curve`:
            def `tip`:
                '{xlabel}: {round(x, 3)}\n': false
                '{ylabel}: {round(y, 3)}\n': false
                'Threshold: {round(data, 3)}': Prag: {round(data, 3)}
            def `_plot`:
                hoverable: false
                tip: false
            symbol: false
            o: false
            symbolSize: false
            symbolPen: false
            symbolBrush: false
            data: false
            stepMode: false
            right: false
        def `_update_info`:
            /: false
            <table>: false
            {round(area, 3)}: false
            <tr align=left>: false
            <td style='color:{self.colors[clf_idx].name()}'>■</td>: false
            '<td>{self.classifier_names[clf_idx]}:  </td>': false
            <td align=right>{area}</td>: false
            </tr>: false
        def `_set_tooltip`:
            '<div style="color: #333; font-size: 12px;"': false
            ' <span>Probability threshold(s):</span>': ' <span>{plsi(len(self.plot.curve_items), "prag|praga|pragi")} verjetnosti:</span>'
            data: false
            <div>: false
            '<span style="font-weight: 700; ': false
            'color: {item.opts["pen"].color().name()}"> — </span>': false
            <span>{round(threshold, 3)}</span>: false
            </div>: false
        def `commit`:
            data: false
        def `send_report`:
            Target class: Ciljni razred
    def `cumulative_gains`:
        array dimensions don't match: false
        mergesort: false
    __main__: false
widgets/evaluate/owpredictions.py:
    PredictorSlot: false
    predictor: false
    name: false
    results: false
    (None): (Ne kaži)
    Difference: razlika
    Absolute difference: absolutna razlika
    Relative: relativna napaka
    Absolute relative: absolutna relativna napaka
    Don't show columns with errors: Ne kaži stolpcev z napakami
    Show difference between predicted and actual value: Pokaži razliko med napovedano in resnično vrednostjo
    Show absolute difference between predicted and actual value: Pokaži absolutno razliko med napovedano in resnično vrednostjo
    Show relative difference between predicted and actual value: Pokaži relativno napako
    Show absolute value of relative difference between predicted and actual value: Pokaži absolutno vrednost relativne napake
    class `OWPredictions`:
        Predictions: Napovedi
        icons/Predictions.svg: false
        Display predictions of models for an input dataset.: Pokaži napovedi modela na tabeli podatkov.
        predictions: predictions
        class `Inputs`:
            Data: Podatki
            Predictors: Modeli
        class `Outputs`:
            Selected Predictions: Izbrane napovedi
            Predictions: Napovedi
            Evaluation Results: Rezultati vrednotenja
        class `Warning`:
            Empty dataset: Prazna tabela
            Some model(s) predict a different target (see more ...)\n{}: Nekateri modeli napovedujejo drugo spremenljivko (več...)\n{}
            'Instances with missing targets ': 'Primeri z manjkajočimi ciljnimi vrednostmi niso '
            are ignored while scoring.: upoštevani pri vrednotenju.
        class `Error`:
            Some predictor(s) failed (see more ...)\n{}: V nekaterih modelih je prišlo do napake (več...)\n{}
            Some scorer(s) failed (see more ...)\n{}: Nekatere cenilke niso izračunani (več...)\n{}
        (None): (Ne kaži)
        Classes in data: razrede iz tabele
        Classes known to the model: razrede modelov
        Classes in data and model: razrede iz tabele in modelov
        Don't show probabilities: Ne kaži verjetnosti
        Show probabilities for classes in the data: Pokaži verjetnosti razredov v tabeli
        Show probabilities for classes known to the model,\n: Pokaži verjetnosti razredov, ki jih napovedujejo modeli,\m
        including those that don't appear in this data: vključno s temi, ki jih v podatkih ni.
        Show probabilities for classes in data that are also\n: Pokaži verjetnosti razredov, ki se pojavijo v podatkih\n
        known to the model: in so znani tudi modelom.
        (Average over classes): (Povprečje prek razredov)
        def `__init__`:
            Show probabilities for: Pokaži verjetnosti za
            shown_probs: false
            show_probability_errors: false
            Show classification errors: Pokaži klasifikacijske napake
            Show 1 - probability assigned to the correct class: Pokaže 1 - verjetnost, napovedano pravilnemu razredu
            'Shown regression error: ': Prikazana napaka:
            show_reg_errors: false
            See tooltips for individual options: Poglej namige ob posameznih možnostih
            Restore Original Order: Izvirni vrstni red
            Show rows in the original order: Pokaži vrstice v izvirnem vrstnem redu
            show_scores: false
            Show perfomance scores: Pokaži rezultate vrednotenja
            Target class:: Ciljni razred:
            target_class: false
        def `_call_predictors`:
            '{predictor.name}: {err}': false
        def `_update_scores`:
            N/A: NN
            NA: NN
            {score:.3f}: false
        def `_update_score_table_visibility`:
            \n: false
        def `_set_errors`:
            \n: false
            '- {p.predictor.name}: {p.results}': false
            - {pred.name} predicts '{pred.domain.class_var.name}': false
        def `_get_details`:
            Data:<br>: Podatki:<br>
            <hr>: false
            "Model: {n_predictors} {pl(n_predictors, 'model')}": Modeli: {n_predictors} {plsi(n_predictors, "model")}
            ' ({n_predictors - n_valid} failed)': ' ({n_predictors - n_valid} z napako)'
            <ul>: false
            <li>{name}</li>: false
            </ul>: false
            Model:<br>No model on input.: Model:<br>Ni vhodnih modelov.
        def `_update_prediction_delegate`:
            ignore: false
            .*All-NaN.*: false
        def `_add_classification_out_columns`:
            {name} ({value}): false
        def `_add_error_out_columns`:
            {slot.predictor.name} (error): {slot.predictor.name} (napaka)
        def `send_report`:
            \n: false
            <br>: false
            '<br>Showing probabilities for ': '<br/>Verjetnosti za '
            all classes known to the model.: razrede, ki jih napovedujejo modeli.
            all classes that appear in the data.: razrede, ki se pojavijo v podatkih.
            'all classes that appear in the data ': 'razrede, ki jih napovedujejo modeli '
            and are known to the model.: in se pojavljajo v podatkih.
            "'{self.class_var.values[class_idx]}.'": false
            Info: true
            Data & Predictions: Podatki in napovedi
            Scores: Rezultati
            Target class: Ciljni razred
        def `migrate_settings`:
            score_table: false
    class `ClassificationItemDelegate`:
        def `__init__`:
            ' : ': false
            {{dist[{i}]:.2f}}: false
            -: true
            {probs} → {{value!s}}: true
            {value!s}: false
            p({', '.join(tooltip_probabilities)}): true
        def `sizeHint`:
            {x}.{x}{x}: false
    class `ErrorDelegate`:
        def `sizeHint`:
            X: false
    class `ClassificationErrorDelegate`:
        def `displayText`:
            ?: true
            {value:.3f}: false
    class `RegressionItemDelegate`:
        def `__init__`:
            {{value:{(target_format or '%.2f')[1:]}}}: false
    class `RegressionErrorDelegate`:
        def `displayText`:
            ?: true
            -∞: true
            ∞: true
    class `PredictionsModel`:
        def `headerData`:
            error: false
        def `errorColumn`:
            ignore: false
    def `tool_tip`:
        {value:!s} {dist:!s}: false
    __main__: false
    iris.tab: false
    To err is human: false
widgets/evaluate/owrocanalysis.py:
    ROCPoints: false
    fpr: false
    tpr: false
    thresholds: false
    ROCCurve: false
    points: false
    hull: false
    ROCAveragedVert: false
    tpr_std: false
    ROCAveragedThresh: false
    fpr_std: false
    ROCData: false
    merged: false
    folds: false
    avg_vertical: false
    avg_threshold: false
    PlotCurve: false
    curve: false
    curve_item: false
    hull_item: false
    def `plot_curve`:
        +: false
    PlotAvgCurve: false
    confint_item: false
    def `plot_avg_curve`:
        +: false
    Some: false
    val: false
    PlotCurves: false
    merge: false
    class `OWROCAnalysis`:
        ROC Analysis: Analiza ROC
        'Display the Receiver Operating Characteristics curve ': 'Pokaže krivuljo ROC za '
        based on the evaluation of classifiers.: rezultate vrednotenja.
        icons/ROCAnalysis.svg: false
        roc analysis, analyse: roc analysis, analyse
        class `Inputs`:
            Evaluation Results: Rezultati vrednotenja
        class `Outputs`:
            Calibrated Model: Kalibriran model
        class `Information`:
            "Can't output a model: {}": Ne morem sestaviti modela: {}
        plot: false
        def `__init__`:
            Plot: Krivulja
            target_index: false
            Target: Ciljni razred
            Classifiers: Modeli
            selected_classifiers: false
            classifier_names: false
            Curves: Krivulje
            roc_averaging: false
            Merge Predictions from Folds: Združi napovedi na podmnožicah
            Mean TP Rate: Povprečni delež resničnih poz.
            Mean TP and FP at Threshold: Povprečni res. poz. in laž. neg. na pragu
            Show Individual Curves: Pokaži posamične krivulje
            display_convex_curve: false
            Show convex ROC curves: Pokaži konveksne krivulje
            display_convex_hull: false
            Show ROC convex hull: Pokaži konveksno ovojnico
            Analysis: Analiza
            display_def_threshold: false
            Default threshold (0.5) point: Privzeti prag (0.5)
            display_perf_line: false
            Show performance line: Pokaži črto delovanja
            fp_cost: false
            FP Cost:: Cena lažnega neg.
            fn_cost: false
            FN Cost:: Cena lažnega poz.
            target_prior: false
            ' %': true
            Auto: false
            Prior probability:: Apriorna verjetnost:
            bottom: false
            FP Rate (1-Specificity): Delež lažnih pozitivnih (1 - specifičnost)
            left: false
            TP Rate (Sensitivity): Delež resničnih pozitivnih (senzitivnost)
        def `_initialize`:
            learner_names: false
            '#{}': true
        def `_set_target_prior`:
            'color: gray;': false
        def `_setup_plot`:
            def `merge_averaging`:
                {:.3f}: false
            Some ROC curves are undefined: Nekatere krivulje ROC niso definirane.
            All ROC curves are undefined: Nobene krivulja ROC ni definirana.
        def `_update_axes_ticks`:
            def `enumticks`:
                {x:.2f}: false
            bottom: false
            left: false
        def `_on_mouse_moved`:
            Thresholds:\n: Pragi:\n
            \n: false
            ({:s}) {:.3f}: false
        def `_on_target_prior_changed`:
            'color: black;': false
        def `send_report`:
            Target class: Ciljni razred
            Costs: Cene
            FP = {}, FN = {}: Lažni pozitivni = {}, lažni negativni = {}
            Target probability: Ciljna verjetnost
            {} %: false
    def `interp`:
        xp and fp must have the same shape: false
        right: false
    def `roc_curve_vertical_average`:
        No curves: false
    def `roc_curve_threshold_average`:
        No curves: false
        left: false
    RocPoint: false
    threshold: false
    def `_create_results`:
        heart_disease: false
        1100111001001000: false
    __main__: false
widgets/evaluate/owtestandscore.py:
    class `InputLearner`:
        Try[Orange.evaluation.Results]: false
        Try[float]: false
    class `Try`:
        class `Success`:
            __value: false
            def `__repr__`:
                {}({!r}): false
        class `Fail`:
            __exception: false
            def `__repr__`:
                {}({!r}): false
    class `State`:
        Waiting: false
        Running: false
        Done: false
        Cancelled: false
    class `OWTestAndScore`:
        Test and Score: Testiraj in meri
        Cross-validation accuracy estimation.: Ocenjevanje modeliranja s prečnim preverjanjem.
        icons/TestLearners1.svg: false
        test and score, cross validation, cv: test and score, cross validation, cv, prečno preverjanje
        Orange.widgets.evaluate.owtestlearners.OWTestLearners: false
        class `Inputs`:
            Data: Podatki
            Test Data: Testni podatki
            Learner: Algoritmi učenja
            Preprocessor: Predprocesorji
        class `Outputs`:
            Predictions: Napovedi
            Evaluation Results: Rezultati vrednotenja
        (None, show average over classes): (Brez, pokaži poprečje prek razredov)
        class `Error`:
            Test dataset is empty.: Tabela testnih podatkov je prazna
            Test data input requires a target variable.: Testni podatki morajo imeti ciljno spremenljivko.
            Number of folds exceeds the data size: Števil podmnožic presega število primerov.
            'Test and train datasets ': 'Učni in testni podatki '
            have different target variables.: nimajo iste ciljne spremenljivke.
            Not enough memory.: Premalo pomnilnika.
            Test data may be incompatible with train data.: Testni podatki niso združljivi z učnimi.
            {}: false
        class `Warning`:
            Instances with unknown target values were removed from{}data.: Primeri z manjkajočo ciljni spremenljivko so odstranjenih iz{}podatkov.
            Missing separate test data input.: Na vhodu ni testnih primerov.
            Some scores could not be computed.: Nekaterih mer ni bilo mogoče izračunati.
            'Test data is present but unused. ': 'Testni primeri so podani, a neuporabljeni. '
            Select 'Test on test data' to use it.: Izberite "Testiraj na testnih primerih".
            "Can't run stratified {}-fold cross validation; ": 'Ne morem uporabiti {}-kratnega stratificiranega prečnega preverjanja; '
            the least common class has only {} instances.: najmanjši razred ima samo {} primerov.
        class `Information`:
            Train data has been sampled: Učni primeri so bili vzorčeni.
            Test data has been sampled: Testni primeri so bili vzorčeni.
            Test data has been transformed to match the train data.: Testni podatki so transformirani, da ustrezajo učnim.
            Stratification is ignored for regression: Testiranje regresije ne uporablja stratifikacije.
            Stratification is ignored when there are: Stratifikacija ne deluje z več ciljnimi spremenljivkami.
            ' multiple target variables.': ""
        def `__init__`:
            resampling: false
            Cross validation: Prečno preverjanje
            n_folds: false
            'Number of folds: ': Število podmnožic
            cv_stratified: false
            Stratified: Stratificirano
            Cross validation by feature: Prečno po spremenljivki
            fold_feature: false
            Random sampling: Naključno vzorčenje
            n_repeats: false
            'Repeat train/test: ': Število ponovitev:
            sample_size: false
            'Training set size: ': 'Delež učne množice: '
            {} %: false
            shuffle_stratified: false
            Leave one out: Izpusti enega
            Test on train data: Testiraj na učnih primerih
            Test on test data: Testiraj na testnih primerih
            class_selection: false
            Evaluation results for target: Rezultati vrednotenja za cilj
            comparison_criterion: false
            Compare models by:: Primerjaj modele glede na:
            use_rope: false
            'Negligible diff.: ': Zanemarljiva razlika
            rope: false
            '<small>Table shows probabilities that the score for the model in ': '"<small>Tabela kaže verjetnost, da je model v '
            'the row is higher than that of the model in the column. ': 'vrstici dejansko boljši od modela v stolpcu. '
            'Small numbers show the probability that the difference is ': Majhne številke pomenijo zanemarljivo verjetnost.
            negligible.</small>: </small>
        def `set_train_data`:
            Train dataset is empty.: Tabela učnih primerov je prazna.
            Train data input requires a target variable.: Učni primeri morajo imeti ciljno spremenljivko.
            Target variable has no values.: Cijna spremenljivka nima vrednosti.
            Target variable has only one value.: Ciljna spremenljivka ima samo eno vrednost.
            Data has no features to learn from.: Podatki nimajo spremenljivk za učenje.
        def `_which_missing_data`:
            ' ': false
            ' train ': ' učnih '
            ' test ': ' testnih '
        def `update_stats_model`:
            {:.3f}: false
            {} (error): {} (napaka)
            {name} failed with error:\n: {name} je javil napako\:n
            '{exc.__class__.__name__}: {exc!s}': false
            \n: false
        def `_scores_by_folds`:
            weighted: false
        def `_fill_table`:
            {p0:.3f}<br/><small>{rope:.3f}</small>: false
            p({row_name} > {col_name}) = {p0:.3f}\n: false
            p({row_name} = {col_name}) = {rope:.3f}: false
            {p1:.3f}<br/><small>{rope:.3f}</small>: false
            p({col_name} > {row_name}) = {p1:.3f}\n: false
            p({col_name} = {row_name}) = {rope:.3f}: false
            {p0:.3f}: false
            p({row_name} > {col_name}) = {p0:.3f}: false
            {p1:.3f}: false
            p({col_name} > {row_name}) = {p1:.3f}: false
        def `_set_cells_na`:
            NA: false
            comparison cannot be computed: false
        def `send_report`:
            'Stratified ': 'Stratificirano '
            Sampling type: Vrsta vzorčenja
            {}{}-fold Cross validation: {}{}-kratno prečno preverjanje.
            Leave one out: Izpusti enega
            '{}Shuffle split, {} random samples with {}% data ': '{}vzorčenje, {} naključnih vzorcev z {}% podatkov '
            No sampling, test on training data: Ni vzorčenja, testiranje na učnih podatkih.
            No sampling, test on testing data: Ni vzorčenja, testiranje na testnih podatkih.
            Target class: Ciljni razred
            (): false
            Settings: Nastavitve
            Scores: Rezultati
        def `migrate_settings`:
            resampling: false
            context_settings: false
            classes: false
            score_table: false
        def `__update`:
            self.resampling %s: false
        def `__submit`:
            Running: V teku
        def `__task_complete`:
            Future[Results]: false
            testing error (in __task_complete):: false
            \n: false
    def `results_add_by_model`:
        def `is_empty`:
            models: false
            row_indices: false
        probabilities: false
    def `results_one_vs_rest`:
        I({}=={}): false
        False: false
        True: false
    __main__: false
    iris: false
widgets/evaluate/utils.py:
    def `check_results_adequacy`:
        invalid_results: false
        Categorical target variable is required.: Potrebna je kategorična spremenljivka.
        Empty result on input. Nothing to display.: Prazni rezultati vrednotenja.
        Results contain invalid values.: Rezultati vrednotenja vsebujejo neveljavne vrednosti
    def `check_can_calibrate`:
        each training data sample produces a different model: vsaka podmnožica učnih podatkov sestavi drug model
        'test results do not contain stored models - try testing ': 'rezultati vrednotenja ne vsebujejo modelov - poskusite testirati '
        on separate data or on training data: na ločenih podatkih ali na učni množici.
        select a single model - the widget can output only one: izberite posamični model
        cannot calibrate non-binary models: ne morem kalibrirati nebinarnih modelov
        \n - {problem}: true
    def `results_for_preview`:
        heart_disease: false
        l2: false
        l1: false
        LR l2: false
        LR l1: false
        SVM: false
        Nu SVM: false
    def `learner_name`:
        name: false
    def `usable_scorers`:
        abstract: false
        priority: false
    def `scorer_caller`:
        def `thunked`:
            ignore: false
            ((F-score|Precision)) is ill-defined.*: false
            weighted: false
    Model_: false
    Train_: false
    Test_: false
    class `SelectableColumnsHeader`:
        def `__init__`:
            'border: none; background-color: {col.name(QColor.NameFormat.HexRgb)}': false
    class `ScoreTable`:
        class `ItemDelegate`:
            def `displayText`:
                {value:.3f}: false
        def `update_header`:
            Model: true
            Model_: false
            Train: Učenje
            Train time [s]: Čas učenja [s]
            Train_: false
            Test: Test
            Test time [s]: Čas testiranja [s]
            Test_: false
            ' ({score.name})': false
        def `migrate_to_show_scores_hints`:
            show_score_hints: false
            shown_scores: false
widgets/evaluate/tests/base.py:
    class `EvaluateTest`:
        def `setUp`:
            y: false
            a: false
            b: false
            datasets/lenses.tab: false
            majority: false
            knn-3: false
            knn-1: false
        def `test_many_evaluation_results`:
            widget: false
            iris: false
            Evaluation Results: Rezultati vrednotenja
widgets/model/__init__.py:
    Model: true
    orange.widgets.model: false
    Prediction: Napoved
    '#FAC1D9': false
    icons/Category-Model.svg: false
widgets/model/owadaboost.py:
    class `OWAdaBoost`:
        AdaBoost: true
        'An ensemble meta-algorithm that combines weak learners ': 'Skupinski algoritem učenja, ki združuje šibke algoritme '
        "and adapts to the 'hardness' of each training sample. ": in prilagaja "težavnosti" učnih primerov.
        icons/AdaBoost.svg: false
        Orange.widgets.classify.owadaboost.OWAdaBoostClassification: false
        Orange.widgets.regression.owadaboostregression.OWAdaBoostRegression: false
        adaboost, boost: adaboost, boost
        class `Inputs`:
            Learner: Učni algoritem
        SAMME: true
        SAMME.R: true
        Linear: Linearna
        Square: Kvadratna
        Exponential: Eksponentna
        class `Error`:
            The base learner does not support weights.: Učni algoritem ne podpira uteži.
        def `add_main_layout`:
            Parameters: Parametri
            'Base estimator: ': 'Osnovni model: '
            n_estimators: false
            Number of estimators:: Število modelov:
            learning_rate: false
            Learning rate:: Hitrost učenja:
            random_seed: false
            Fixed seed for random generator:: Seme generatorja naključnih števil:
            use_random_seed: false
            Boosting method: Metoda pospeševanja (boosting)
            algorithm_index: false
            Classification algorithm:: Algoritem (za klasifikacijo):
            loss_index: false
            Regression loss function:: Funkcija izgube (za regresijo):
        def `set_base_learner`:
            'Base estimator: INVALID': Osnovni model: neveljaven
            'Base estimator: %s': Osnovni model: %s
        def `get_learner_parameters`:
            Base estimator: Osnovni model
            Number of estimators: Število modelov
            Algorithm (classification): Algoritem (za klasifikacijo)
            Loss (regression): Izguba (za regresijo)
    __main__: false
    iris: false
widgets/model/owcalibratedlearner.py:
    class `OWCalibratedLearner`:
        Calibrated Learner: Kalibriran model
        'Wraps another learner with probability calibration and ': 'Ovije drug učni algoritem z modelom za kalibracijo verjetnosti '
        decision threshold optimization: in optimiranje klasifikacijskega praga.
        icons/CalibratedLearner.svg: false
        calibrated learner, calibration, threshold: calibrated learner, calibration, threshold, kalibracija, prag
        Sigmoid calibration: Sigmoidna kalibracija
        Isotonic calibration: Izotonična kalibracija
        No calibration: Brez kalibracije
        Sigmoid: Sigmoidna
        Isotonic: Izotonična
        Optimize classification accuracy: Optimiraj napovedno točnost
        Optimize F1 score: Optimiraj F1
        No threshold optimization: Brez optimizacije praga
        CA: točnost
        F1: F1
        class `Inputs`:
            Base Learner: Učni algoritem
        def `add_main_layout`:
            calibration: false
            Probability calibration: Kalibracija verjetnosti
            threshold: false
            Decision threshold optimization: Optimiranje napovednega praga
        def `_set_default_name`:
            ' + ': false
        def `get_learner_parameters`:
            Calibrate probabilities: Kalibracija verjetnosti
            Threshold optimization: Optimiranje praga
    __main__: false
    heart_disease: false
widgets/model/owconstant.py:
    class `OWConstant`:
        Constant: Konstanta
        'Predict the most frequent class or mean value ': 'Vedno napove isti, večinski razred oz. povprečno vrednost '
        from the training set.: učnih primerov.
        icons/Constant.svg: false
        Orange.widgets.classify.owmajority.OWMajority: false
        Orange.widgets.regression.owmean.OWMean: false
        constant, majority, mean: constant, majority, mean, večina, povprečje
    __main__: false
    iris: false
widgets/model/owcurvefit.py:
    isclose: false
    inf: false
    nan: false
    arccos: false
    arccosh: false
    arcsin: false
    arcsinh: false
    arctan: false
    arctan2: false
    arctanh: false
    ceil: false
    copysign: false
    cos: false
    cosh: false
    degrees: false
    e: false
    exp: false
    expm1: false
    fabs: false
    floor: false
    fmod: false
    gcd: false
    hypot: false
    isfinite: false
    isinf: false
    isnan: false
    ldexp: false
    log: false
    log10: false
    log1p: false
    log2: false
    pi: false
    power: false
    radians: false
    remainder: false
    sin: false
    sinh: false
    sqrt: false
    tan: false
    tanh: false
    trunc: false
    round: false
    abs: false
    any: false
    all: false
    class `Parameter`:
        def `__repr__`:
            'Parameter(name={self.name}, initial={self.initial}, ': false
            'use_lower={self.use_lower}, lower={self.lower}, ': false
            use_upper={self.use_upper}, upper={self.upper}): false
    class `ParametersWidget`:
        def `_setup_gui`:
            Name: Ime
            Initial value: Začetna vrednost
            Lower bound: Spodnja meja
            Upper bound: Zgornja meja
            +: false
        def `_add_row`:
            p{row_id + 1}: true
            ×: true
            minimum: false
            maximum: false
    class `OWCurveFit`:
        Curve Fit: Prileganje krivulje
        Fit a function to data.: Prilagodi krivuljo podatkom.
        icons/CurveFit.svg: false
        curve fit, function: curve fit, function, krivulja, prilagajanje
        class `Outputs`:
            Coefficients: Koeficienti
        class `Warning`:
            Duplicated parameter name.: Podvojeno ime parametra
            "Unused parameter '{}' in ": Neuporabljen parameter '{}'
            "'Parameters' declaration.": ""
            Provide data on the input.: Priskrbite vhodne podatke.
        class `Error`:
            Invalid expression.: Nepravilen izraz.
            Missing a fitting parameter.\n: Manjkajoč parameter.
            Use 'Feature Constructor' widget instead.: Uporabite gradnik Sestavi značilke.
            Unknown parameter '{}'.\n: Neznan parameter '{}'.\n
            Declare the parameter in 'Parameters' box: Deklarirajte ga v škatli "Parametri"
            'Some parameters and features have the same ': 'Nekateri parametri in spremenljivke imajo '
            name '{}'.: enaka imena '{}'.
        Select Feature: Izberite spremenljivko
        Select Parameter: Izberite parameter
        Select Function: Izberite funkcijo
        def `add_main_layout`:
            Parameters: Parametri
            Expression: Izrazi
            expression: false
            Expression...: Izraz...
            _feature: false
            _parameter: false
            _function: false
        def `__on_function_added`:
            arctan2: false
            copysign: false
            fmod: false
            gcd: false
            hypot: false
            isclose: false
            ldexp: false
            power: false
            remainder: false
            (,): false
            (): false
        def `get_learner_parameters`:
            Expression: Izraz
        def `check_data`:
            Data has no continuous features.: Podatki nimajo numeričnih spremenljivk
        def `__validate_expression`:
            eval: false
    __main__: false
    housing: false
widgets/model/owgradientboosting.py:
    class `LearnerItemModel`:
        Extreme Gradient Boosting (xgboost): true
        xgboost: false
        Extreme Gradient Boosting Random Forest (xgboost): true
        Gradient Boosting (catboost): true
        catboost: false
        def `_add_data`:
            {name}: false
            {lib} is not installed: {lib} ni nameščen
    class `BaseEditor`:
        def `_add_main_layout`:
            callback: false
            alignment: false
            controlWidth: false
            Basic Properties: Osnovne lastnosti
            n_estimators: false
            Number of trees:: Število dreves:
            learning_rate: false
            'Learning rate: ': 'Hitrost učenja: '
            random_state: false
            Replicable training: Ponovno učenje
            Growth Control: Nadzor rasti
            max_depth: false
            'Limit depth of individual trees: ': 'Omejitev globine posamičnih dreves: '
            Subsampling: Podvzorčenje
        def `get_arguments`:
            n_estimators: false
            learning_rate: false
            random_state: false
            max_depth: false
        def `get_learner_parameters`:
            Method: Metoda
            Number of trees: Število dreves
            Learning rate: Hitrost učenja
            Replicable training: Ponovno učenje
            Yes: Da
            No: Ne
            Maximum tree depth: Največja globina drevesa
    class `RegEditor`:
        def `_add_main_layout`:
            Regularization:: Regularizacija
            lambda_index: false
        def `_set_lambda_label`:
            'Lambda: {}': true
        def `get_arguments`:
            reg_lambda: false
        def `get_learner_parameters`:
            Regularization strength: Moč regularizacije
    class `GBLearnerEditor`:
        def `_add_main_layout`:
            subsample: false
            'Fraction of training instances: ': 'Delež učnih primerov: '
            min_samples_split: false
            'Do not split subsets smaller than: ': 'Ne deli podmnožic manjših od: '
        def `get_arguments`:
            subsample: false
            min_samples_split: false
        def `get_learner_parameters`:
            Fraction of training instances: Delež učnih primerov
            Stop splitting nodes with maximum instances: Ne deli vozlišč z manj primeri kot
    class `CatGBLearnerEditor`:
        def `_add_main_layout`:
            colsample_bylevel: false
            'Fraction of features for each tree: ': 'Delež spremenljivk za vsako drevo: '
        def `get_arguments`:
            colsample_bylevel: false
        def `get_learner_parameters`:
            Fraction of features for each tree: Delež spremenljivk za vsako drevo
    class `XGBBaseEditor`:
        def `_add_main_layout`:
            callback: false
            alignment: false
            controlWidth: false
            subsample: false
            'Fraction of training instances: ': 'Delež učnih primerov: '
            colsample_bytree: false
            'Fraction of features for each tree: ': 'Delež spremenljivk za posamezno drevo: '
            colsample_bylevel: false
            'Fraction of features for each level: ': 'Delež spremenljivk za posamezno stopnjo: '
            colsample_bynode: false
            'Fraction of features for each split: ': 'Delež spremenljivk za posamezno delitev: '
        def `get_arguments`:
            subsample: false
            colsample_bytree: false
            colsample_bylevel: false
            colsample_bynode: false
        def `get_learner_parameters`:
            Fraction of training instances: Delež učnih primerov
            Fraction of features for each tree: Delež spremenljivk za vsako drevo
            Fraction of features for each level: Delež spremenljivk za posamezno stopnjo
            Fraction of features for each split: Delež spremenljivk za posamezno delitev
    class `OWGradientBoosting`:
        Gradient Boosting: true
        Predict using gradient boosting on decision trees.: Napovedovanje z modelom Gradient Boosting na odločitvenih drevesih.
        icons/GradientBoosting.svg: false
        gradient boosting, catboost, gradient, boost, tree, forest, xgb, gb, extreme: gradient boosting, catboost, gradient, boost, tree, forest, xgb, gb, extreme, drevo, gozd
        def `add_main_layout`:
            Method: Metoda
            method_index: false
    __main__: false
    iris: false
widgets/model/owknn.py:
    class `OWKNNLearner`:
        kNN: k sosedov
        Predict according to the nearest training instances.: Napoveduje glede na najbližje sosede iz učnih primerov.
        icons/KNN.svg: false
        Orange.widgets.classify.owknn.OWKNNLearner: false
        Orange.widgets.regression.owknnregression.OWKNNRegression: false
        knn, k nearest, knearest, neighbor, neighbour: knn, k nearest, knearest, neighbor, neighbour, najbližji, sosedi
        uniform: false
        distance: false
        euclidean: false
        manhattan: false
        chebyshev: false
        mahalanobis: false
        Uniform: Enake
        By Distances: Po razdalji
        Euclidean: Evklidska
        Manhattan: Manhattanska
        Chebyshev: Čebiševa
        Mahalanobis: Mahalanobisova
        def `add_main_layout`:
            Neighbors: Sosedi
            n_neighbors: false
            Number of neighbors:: Število sosedov:
            metric_index: false
            Metric:: Metrika:
            weight_index: false
            Weight:: Uteži:
        def `get_learner_parameters`:
            Number of neighbours: Število sosedov
            Metric: Metrika
            Weight: Uteži
    __main__: false
    iris: false
widgets/model/owlinearregression.py:
    class `OWLinearRegression`:
        Linear Regression: Linearna regresija
        'A linear regression algorithm with optional L1 (LASSO), ': 'Linearna regresija z '
        L2 (ridge) or L1L2 (elastic net) regularization.: različnimi vrstami regularizacije.
        icons/LinearRegression.svg: false
        Orange.widgets.regression.owlinearregression.OWLinearRegression: false
        linear regression, ridge, lasso, elastic net: linear regression, ridge, lasso, elastic net, regresija, regularizacija
        class `Outputs`:
            Coefficients: Koeficienti
        No regularization: Brez regularizacije
        Ridge regression (L2): Ridge (L2)
        Lasso regression (L1): Lasso (L2)
        Elastic net regression: Elastična mreža
        def `add_main_layout`:
            Parameters: Parametri
            fit_intercept: false
            Fit intercept (unchecking it fixes it to zero): Uporabi prosti člen (sicer bo enak 0)
            Regularization: Regularizacija
            reg_type: false
            Regularization strength:: Moč regularizacije:
            alpha_index: false
            Elastic net mixing:: Mešanica elastične mreže
            L1: true
            l2_ratio: false
            L2: true
        def `_set_alpha_label`:
            'Alpha: {}': α = {}
        def `_set_l2_ratio_label`:
            '{:.{}f} : {:.{}f}': false
        def `update_model`:
            coef: false
            name: false
            intercept: false
            coefficients: koeficienti
        def `get_learner_parameters`:
            No Regularization: Brez regularizacije
            Ridge Regression (L2) with α={}: Ridge (L2) z α={}
            Lasso Regression (L1) with α={}: Lasso (L1) z α={}
            Elastic Net Regression with α={}: Elastična mreža z α={}
            ' and L1:L2 ratio of {}:{}': ' in L1:L2 v razmerju {}:{}'
            Regularization: Regularizacija
            Fit intercept: Prosti člen
            No: Ne
            Yes: Da
    __main__: false
    housing: false
widgets/model/owloadmodel.py:
    class `OWLoadModel`:
        Load Model: Naloži model
        Load a model from an input file.: Preberi model iz datoteke.
        Orange.widgets.classify.owloadclassifier.OWLoadClassifier: false
        icons/LoadModel.svg: false
        load model, file, open, model: load model, file, open, model, datoteka, odpri
        class `Outputs`:
            Model: true
        class `Error`:
            An error occured while reading '{}': Napaka pri branju '{}'
        ;;: false
        def `__init__`:
            File: Datoteka
            ...: true
            Reload: Ponovno naloži
        def `browse_file`:
            Open Model File: Odpri datoteko z modelom
        def `open_file`:
            rb: false
    class `OWLoadModelDropHandler`:
        def `canDropFile`:
            .pkcls: false
        def `parametersFromFile`:
            recent_paths: false
    __main__: false
widgets/model/owlogisticregression.py:
    class `OWLogisticRegression`:
        Logistic Regression: Logistična regresija
        'The logistic regression classification algorithm with ': Logistična regresija z regularizacijo.
        LASSO (L1) or ridge (L2) regularization.: ""
        icons/LogisticRegression.svg: false
        Orange.widgets.classify.owlogisticregression.OWLogisticRegression: false
        logistic regression: logistic regression, regresija, regularizacija
        class `Outputs`:
            Coefficients: Koeficienti
        Lasso (L1): true
        Ridge (L2): true
        None: Brez
        l1: false
        l2: false
        none: false
        class `Warning`:
            Weighting by class may decrease performance.: Uteževanje glede na razred lahko upočasni učenje.
        def `add_main_layout`:
            penalty_type: false
            'Regularization type: ': 'Vrsta regularizacije: '
            Strength:: Moč:
            Weak: Šibka
            margin-top:6px: false
            C_index: false
            Strong: Močna
            class_weight: false
            Balance class distribution: Uravnoteži razrede
            Weigh classes inversely proportional to their frequencies.: Uteži razrede obratno sorazmerno njihovi pogostosti
        def `set_c`:
            none: false
            C={}: true
            C={:.3f}: true
            N/A: NN
        def `create_learner`:
            balanced: false
            none: false
        def `get_learner_parameters`:
            Regularization: Regularizacija
            '{}, C={}, class weights: {}': {}, C={}, uteži razredov: {}
    def `create_coef_table`:
        name: ime
        intercept: odsek
        coefficients: koeficienti
    __main__: false
    zoo: false
widgets/model/ownaivebayes.py:
    class `OWNaiveBayes`:
        Naive Bayes: Naivni Bayes
        'A fast and simple probabilistic classifier based on ': 'Preprost model, ki temelji na Bayesovi formuli '
        Bayes' theorem with the assumption of feature independence.: in predpostavlja pogojno neodvisnost spremenljivk.
        icons/NaiveBayes.svg: false
        Orange.widgets.classify.ownaivebayes.OWNaiveBayes: false
        naive bayes: naive bayes, bayes, pogojna neodvisnost
    __main__: false
    iris: false
widgets/model/owneuralnetwork.py:
    class `Task`:
        def `setFuture`:
            future is already set: false
    class `OWNNLearner`:
        Neural Network: Nevronska mreža
        'A multi-layer perceptron (MLP) algorithm with ': Večnivojski perceptron z vzvratnim širjenjem
        backpropagation.: ' (backpropagation).'
        icons/NN.svg: false
        neural network, mlp: neural network, mlp, večnivojskost, mreža
        identity: false
        logistic: false
        tanh: false
        relu: false
        Identity: Identiteta
        Logistic: Logistična
        ReLu: ReLu
        lbfgs: false
        sgd: false
        adam: false
        L-BFGS-B: true
        SGD: true
        Adam: true
        100,: false
        class `Warning`:
            'ANN without hidden layers is equivalent to logistic ': 'Nevronska mreža brez skritih nivojev je enaka logistični '
            'regression with worse fitting.\nWe recommend using ': 'regresiji s slabšim algoritmom prileganja.\nPriporočamo uporabo '
            logistic regression.: logistične regresije.
        def `add_main_layout`:
            Neurons in hidden layers:: Nevroni v skritih nivojih
            hidden_layers_input: false
            'A list of integers defining neurons. Length of list ': 'Seznam števil, ki določijo število nevronov. Dolžina seznama '
            defines the number of layers. E.g. 4, 2, 2, 3.: določi število nivojev. Npr. 4, 2, 2, 3
            e.g. 10,: npr. 10,
            Activation:: Aktivacija:
            activation_index: false
            Solver:: Algoritem reševanja:
            solver_index: false
            alpha_index: false
            Maximal number of iterations:: Omejitev števila ponovitev:
            max_iterations: false
            Max iterations:: Omejitev ponovitev:
            replicable: false
            Replicable training: Ponovljivo učenje
        def `set_alpha`:
            Regularization, α={}:: Regularizacija, α={}:
        def `setup_layout`:
            Cancel: Prekini
        def `get_learner_parameters`:
            Hidden layers: Skriti nivoji
            ', ': false
            Activation: Aktivacija
            Solver: Algoritem reševanja
            Alpha: Alfa
            Max iterations: Omejitev števila ponovitev
            Replicable training: Ponovljivo učenje
        def `get_hidden_layers`:
            \d+: false
        def `__update`:
            max_iter: false
        def `migrate_settings`:
            alpha: false
            alpha_index: false
    __main__: false
    iris: false
widgets/model/owrandomforest.py:
    class `OWRandomForest`:
        Random Forest: Naključni gozd
        Predict using an ensemble of decision trees.: Skupinsko napovedovanje z drevesi.
        icons/RandomForest.svg: false
        Orange.widgets.classify.owrandomforest.OWRandomForest: false
        Orange.widgets.regression.owrandomforestregression.OWRandomForestRegression: false
        random forest: random forest, drevesa
        class `Error`:
            Insufficient number of attributes ({}): Nezadostno število spremenljivk ({})
        class `Warning`:
            Weighting by class may decrease performance.: Uteževanje razredov lahko upočasni izvajanje.
        def `add_main_layout`:
            Basic Properties: Osnovne lastnosti
            n_estimators: false
            'Number of trees: ': 'Število dreves: '
            max_features: false
            'Number of attributes considered at each split: ': 'Število obravnavanih spremenljivk ob vsaki delitvi: '
            use_max_features: false
            use_random_state: false
            Replicable training: Ponovljivo učenje
            class_weight: false
            Balance class distribution: Uravnoteži razrede
            Weigh classes inversely proportional to their frequencies.: Uteži razrede obratno sorazmerno njihovi pogostosti.
            Growth Control: Nadzor rasti
            max_depth: false
            'Limit depth of individual trees: ': 'Omejitev globine posamičnih dreves: '
            use_max_depth: false
            min_samples_split: false
            'Do not split subsets smaller than: ': 'Ne deli množic z manj primeri kot: '
            use_min_samples_split: false
        def `create_learner`:
            n_estimators: false
            max_features: false
            random_state: false
            max_depth: false
            min_samples_split: false
            class_weight: false
            balanced: false
        def `get_learner_parameters`:
            Number of trees: Število dreves
            Maximal number of considered features: Število obravnavanih spremenljivk
            unlimited: neomejeno
            Replicable training: Ponovljivo učenje
            No: Ne
            Yes: Da
            Maximal tree depth: Največja globina dreves
            Stop splitting nodes with maximum instances: Ne deli množic z manj primeri kot
            Class weights: Uteževanje razredov
    __main__: false
    iris: false
widgets/model/owrules.py:
    class `CustomRuleClassifier`:
        def `__init__`:
            Rule ordering: Urejenost pravil
            Covering algorithm: Način prekrivanja
        def `predict`:
            ordered: urejena
            exclusive: eno pravilo
            unordered: neurejena
            weighted: utežena
    class `CustomRuleLearner`:
        Custom rule inducer: false
        def `__init__`:
            Rule ordering: Urejenost pravil
            Covering algorithm: Način prekrivanja
            exclusive: eno pravilo
            weighted: utežena
            Gamma: Gama
            Beam width: Širina snopa
            Evaluation measure: Ocena kvalitete pravila
            entropy: entropija
            laplace: Laplacova natančnost
            wracc: WRACC
            Minimum rule coverage: Najmanjše število pokritih primerov
            Maximum rule length: Največja dolžina pravila
            Default alpha: Zahtevana statistična značilnost
            Parent alpha: Značilnost prednika
        def `fit_storage`:
            ordered: urejena
            weighted: utežena
            unordered: neurejena
    class `OWRuleLearner`:
        CN2 Rule Induction: Odločitvena pravila
        Induce rules from data using CN2 algorithm.: Sestavi odločitvena pravila z algoritmom CN2.
        icons/CN2RuleInduction.svg: false
        Orange.widgets.classify.owrules.OWRuleLearner: false
        cn2 rule induction: cn2 rule induction
        ordered: urejena
        unordered: neurejena
        exclusive: eno pravilo
        weighted: utežena
        entropy: entropija
        laplace: Laplacova natančnost
        wracc: WRACC
        def `add_main_layout`:
            Rule ordering: Urejenost pravil
            rule_ordering: false
            Ordered: Urejena
            Unordered: Neurejena
            Covering algorithm: Način prekrivanja
            covering_algorithm: false
            Exclusive: Z enim pravilom
            Weighted: Uteženo
            gamma: false
            γ:: true
            Rule search: Iskanje pravil
            evaluation_measure: false
            Evaluation measure:: Mera kvalitete:
            Entropy: Entropija
            Laplace accuracy: Laplacova natančnost
            WRAcc: WRACC
            beam_width: false
            Beam width:: Širina snopa:
            Rule filtering: Presejanje pravil
            min_covered_examples: false
            Minimum rule coverage:: Najmanjše število pokritih primerov:
            max_rule_length: false
            Maximum rule length:: Najdaljša dolžina pravila:
            default_alpha: false
            Statistical significance (default α):: Statistična značilnost (privzeti α):
            checked_default_alpha: false
            parent_alpha: false
            Relative significance (parent α):: Relativna značilnost (predniko α):
            checked_parent_alpha: false
        def `get_learner_parameters`:
            Rule ordering: Urejenost pravil
            Covering algorithm: Način prekrivanja
            Gamma: Gama
            Evaluation measure: Ocena kvalitete pravila
            Beam width: Širina snopa
            Minimum rule coverage: Najmanjše število pokritih primerov
            Maximum rule length: Največja dolžina pravila
            Default alpha: Zahtevana statistična značilnost
            Parent alpha: Značilnost prednika
    __main__: false
    iris: false
widgets/model/owsavemodel.py:
    class `OWSaveModel`:
        Save Model: Shrani model
        Save a trained model to an output file.: Shrani model v datoteko.
        icons/SaveModel.svg: false
        Orange.widgets.classify.owsaveclassifier.OWSaveClassifier: false
        save model, save: save model, save
        class `Inputs`:
            Model: true
        Pickled model (*.pkcls): Pickle z modelom (*.pickle)
        def `do_save`:
            wb: false
    __main__: false
widgets/model/owsgd.py:
    class `OWSGD`:
        Stochastic Gradient Descent: Stohastični gradientni spust
        'Minimize an objective function using a stochastic ': 'Minimiziranje ciljne funkcije z uporabo stohastičnega '
        approximation of gradient descent.: približka gradientnega spusta.
        icons/SGD.svg: false
        Orange.widgets.regression.owsgdregression.OWSGDRegression: false
        stochastic gradient descent, sgd: stochastic gradient descent, sgd
        class `Outputs`:
            Coefficients: Koeficienti
        Squared Loss: Kvadratna izguba
        squared_error: false
        Huber: Huberjeva
        huber: false
        ε insensitive: ε-neobčutljiva
        epsilon_insensitive: false
        Squared ε insensitive: Kvadratna ε-neobčutljiva
        squared_epsilon_insensitive: false
        Hinge: Rob (Hinge)
        hinge: false
        Logistic regression: Logistična regresija
        log: false
        Modified Huber: Modificirana Huberjeva
        modified_huber: false
        Squared Hinge: Kvadrat roba (Squared Hinge)
        squared_hinge: false
        Perceptron: true
        perceptron: false
        None: Brez
        none: false
        Lasso (L1): true
        l1: false
        Ridge (L2): true
        l2: false
        Elastic Net: Elastična mreža
        elasticnet: false
        Constant: Konstanta
        constant: false
        Optimal: Optimalno
        optimal: false
        Inverse scaling: Inverzno skaliranje
        invscaling: false
        def `_add_algorithm_to_layout`:
            Loss functions: Funkcije izgube
            cls_loss_function_index: false
            cls_epsilon: false
            'ε: ': false
            'Classification: ': 'Klasifikacija: '
            reg_loss_function_index: false
            reg_epsilon: false
            'Regression: ': 'Regresija: '
        def `_add_regularization_to_layout`:
            Regularization: Regularizacija
            penalty_index: false
            l1_ratio: false
            'Mixing: ': 'Mešanje: '
            alpha: false
            'Strength (α): ': 'Moč (α): '
        def `_add_learning_params_to_layout`:
            Optimization: Optimizacija
            learning_rate_index: false
            'Learning rate: ': 'Hitrost učenja: '
            eta0: false
            'Initial learning rate (η<sub>0</sub>): ': 'Začetna hitrost učenja (η<sub>0</sub>): '
            power_t: false
            'Inverse scaling exponent (t): ': 'Inverzni eksponent skaliranja (t): '
            max_iter: false
            'Number of iterations: ': 'Število iteracij: '
            tol: false
            'Tolerance (stopping criterion): ': 'Toleranca (zaustavitveni kriterij): '
            tol_enabled: false
            shuffle: false
            Shuffle data after each iteration: Premešaj podatke po vsaki iteraciji
            random_state: false
            'Fixed seed for random shuffling: ': 'Določeno seme za naključno mešanje: '
            use_random_state: false
        def `_on_cls_loss_change`:
            huber: false
            epsilon_insensitive: false
            squared_epsilon_insensitive: false
        def `_on_reg_loss_change`:
            huber: false
            epsilon_insensitive: false
            squared_epsilon_insensitive: false
        def `_on_regularization_change`:
            l1: false
            l2: false
            elasticnet: false
        def `_on_learning_rate_change`:
            constant: false
            invscaling: false
        def `create_learner`:
            random_state: false
        def `get_learner_parameters`:
            Classification loss function: Klasifikacijska funkcija izgube
            huber: false
            epsilon_insensitive: false
            squared_epsilon_insensitive: false
            Epsilon (ε) for classification: Epsilon (ε) za klasifikacijo
            Regression loss function: Regresijska funkcija izgube
            Epsilon (ε) for regression: Epsilon (ε) za regresijo
            Regularization: Regularizacija
            l1: false
            l2: false
            elasticnet: false
            Regularization strength (α): Moč regularizacije (α)
            Elastic Net mixing parameter (L1 ratio): Parameter mešanja pri elastični mreži (delež L1)
            Learning rate: Hitrost učenja
            constant: false
            invscaling: false
            Initial learning rate (η<sub>0</sub>): Začetna hitrost učenja (η<sub>0</sub>)
            Inverse scaling exponent (t): Inverzni eksponent skaliranja (t)
            Shuffle data after each iteration: Premešaj podatke po vsaki iteraciji
            Random seed for shuffling: Naključno seme za mešanje
        def `update_model`:
            coef: false
            name: false
            intercept: false
            coefficients: koeficienti
        def `migrate_settings`:
            max_iter: false
            n_iter: false
            tol_enabled: false
    __main__: false
    iris: false
widgets/model/owstack.py:
    class `OWStackedLearner`:
        Stacking: Sklad modelov
        Stack multiple models.: Sestavi več modelov v model.
        icons/Stacking.svg: false
        Stack: Sklad
        class `Inputs`:
            Learners: Modeli
            Aggregate: Združevalnik
        def `get_learner_parameters`:
            Base learners: Osnovni modeli
            Aggregator: Združevalnik
            default: privzeti
    __main__: false
    iris: false
widgets/model/owsvm.py:
    class `OWSVM`:
        SVM: true
        'Support Vector Machines map inputs to higher-dimensional ': Metoda podpornih vektorjev.
        feature spaces.: ""
        icons/SVM.svg: false
        Orange.widgets.classify.owsvmclassification.OWSVMClassification: false
        Orange.widgets.regression.owsvmregression.OWSVMRegression: false
        svm, support vector machines: svm, support vector machines, podporni vektorji
        class `Outputs`:
            Support Vectors: Podporni vektorji
            Support vectors: Podporni vektorji
        class `Warning`:
            Input data is sparse, default preprocessing is to scale it.: Podatki so redki; privzeti predprocesor jih skalira.
        auto: true
        Linear: Linearno
        x⋅y: true
        Polynomial: Polinomsko
        (g x⋅y + c)<sup>d</sup>: true
        RBF: true
        exp(-g|x-y|²): true
        Sigmoid: Sigmoidno
        tanh(g x⋅y + c): true
        def `_add_type_box`:
            svm_type: false
            SVM Type: Vrsta SVM
            SVM: true
            C: false
            epsilon: false
            Cost (C):: Cena (C):
            Regression loss epsilon (ε):: Koeficient izgube pri regresiji (ε):
            ν-SVM: true
            nu_C: false
            nu: false
            Regression cost (C):: Cena (pri regresiji) (C):
            Complexity bound (ν):: Meja kompleksnosti (ν):
        def `_add_kernel_box`:
            Kernel: Jedro
            kernel_type: false
            'Kernel: %(kernel_eq)s': Jedro: %(kernel_eq)s
            gamma: false
            ' g: ': true
            coef0: false
            ' c: ': true
            degree: false
            ' d: ': true
        def `_add_optimization_box`:
            Optimization Parameters: Parametri optimizacije
            tol: false
            'Numerical tolerance: ': 'Numerična toleranca: '
            max_iter: false
            'Iteration limit: ': 'Največje število ponovitev: '
            limit_iter: false
        def `create_learner`:
            linear: false
            poly: false
            rbf: false
            sigmoid: false
            kernel: false
            degree: false
            gamma: false
            coef0: false
            probability: false
            tol: false
            max_iter: false
            preprocessors: false
        def `get_learner_parameters`:
            SVM type: Vrsta SVM
            SVM, C={}, ε={}: true
            ν-SVM, ν={}, C={}: true
            Numerical tolerance: Numerična toleranca
            {:.6}: false
            Iteration limt: Število ponovitev:
            unlimited: neomejeno
        def `_report_kernel_parameters`:
            Kernel: Jedro
            Linear: Linearno
            Polynomial, ({g:.4} x⋅y + {c:.4})<sup>{d}</sup>: Polinomsko, ({g:.4} x⋅y + {c:.4})<sup>{d}</sup>
            RBF, exp(-{:.4}|x-y|²): true
            Sigmoid, tanh({g:.4} x⋅y + {c:.4}): Sigmoidno, tanh({g:.4} x⋅y + {c:.4})
    __main__: false
    iris: false
widgets/model/owtree.py:
    class `OWTreeLearner`:
        Tree: Drevo
        A tree algorithm with forward pruning.: Gradnja drevesa z rezanjem.
        icons/Tree.svg: false
        Orange.widgets.classify.owclassificationtree.OWClassificationTree: false
        Orange.widgets.regression.owregressiontree.OWRegressionTree: false
        Orange.widgets.classify.owclassificationtree.OWTreeLearner: false
        Orange.widgets.regression.owregressiontree.OWTreeLearner: false
        tree, classification tree: tree, classification tree, klasifikacijsko drevo
        'Min. number of instances in leaves: ': 'Min. število primerov v listu: '
        limit_min_leaf: false
        min_leaf: false
        'Do not split subsets smaller than: ': 'Ne deli podmnožic manjših od: '
        limit_min_internal: false
        min_internal: false
        'Limit the maximal tree depth to: ': 'Omeji globino drevesa na: '
        limit_depth: false
        max_depth: false
        'Stop when majority reaches [%]: ': 'Ustavi delitev, ko delež večinskega razreda doseže [%]: '
        limit_majority: false
        sufficient_majority: false
        def `add_main_layout`:
            Parameters: Parametri
            binary_trees: false
            Induce binary tree: Sestavi binarno drevo
        def `get_learner_parameters`:
            Pruning: Rezanje
            ', ': true
            'at least {self.min_leaf} ': 'vsaj {self.min_leaf} '
            {pl(self.min_leaf, "instance")} in leaves: {plsi(self.min_leaf, "primer")} v  listih
            'at least {self.min_internal} ': 'vsaj {self.min_internal} '
            {pl(self.min_internal, "instance")} in internal nodes: {plsi(self.min_internal, "primer")} v notranjih vozliščih
            maximum depth {self.max_depth}: dovoljena globina je {self.max_depth}
            None: Brez
            Splitting: Delitev
            'Stop splitting when majority reaches %d%% ': Ustavi, ko delež večinskega razreda doseže %d%%
            (classification only): (samo za klasifikacijo)
            Binary trees: Dvojiško drevo
            No: Ne
            Yes: Da
    __main__: false
    iris: false
widgets/obsolete/owtable.py:
    TableSlot: false
    input_id: false
    table: false
    summary: false
    view: false
    class `OWDataTable`:
        Orange Obsolete: Zastarelo
        Orange.widgets.data.owtable.OWDataTable: false
        Data Table: Tabela
        View the dataset in a spreadsheet.: Pregled podatkov v tabeli.
        ../data/icons/Table.svg: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Selected Data: Izbrani podatki
        class `Warning`:
            Multiple Data inputs are deprecated.\n: Uporaba več podatkovnih vnosov je zastarela.\n
            This functionality will be removed soon.\n: Ta funkcija bo kmalu odstranjena.\n
            Use multiple Tables instead.: Namesto tega uporabite več tabel.
        def `__init__`:
            Info: true
            Variables: Spremenljivke
            show_attribute_labels: false
            Show variable labels (if present): Pokaži oznake spremenljivk
            show_distributions: false
            Visualize numeric values: Vizualiziraj številske vrednosti
            color_by_class: false
            Color by instance classes: Obarvaj primere glede na razred
            Selection: Izbor
            select_rows: false
            Select full rows: Izbiraj cele vrstice
            Restore Original Order: Izvirni vrstni red
            Show rows in the original order: Pokaži vrstice v izvirnem vrstnem redu
            auto_commit: false
        def `set_dataset`:
            name: false
            Data: Podatki
        def `insert_dataset`:
            name: false
            Data: Podatki
        def `handleNewSignals`:
            def `update`:
                _update_info: false
        def `_set_input_summary`:
            No data.: Ni podatkov.
            \n: false
    __main__: false
    iris: false
    brown-selected: false
    housing: false
widgets/report/owreport.py:
    OWReport: false
    HAVE_REPORT: false
    __main__: false
    iris: false
widgets/report/report.py:
    DataReport: false
    describe_data: false
    describe_data_brief: false
    describe_domain: false
    describe_domain_brief: false
    def `describe_domain`:
        def `clip_attrs`:
            ' (total: {nitems} {desc})': ' (skupno: {nitems} {desc})'
        Features: Spremenljivke
        features: {plsi(len(domain.attributes), "spremenljivka")}
        Meta attributes: Meta atributi
        meta attributes: meta {plsi(len(domain.metas), "spremenljivka")}
        Target: Ciljna spremenljivka
        target variables: ciljne spremenljivke
    def `describe_data`:
        Data instances: Število primerov
    def `describe_domain_brief`:
        Features: Spremenljivke
        None: brez
        Meta attributes: Meta atributi
        Target: Ciljna spremenljivka
        Class '{}': Razred '{}'
        Numeric variable '{}': Numerična ciljna spremenljivka '{}'
        Targets: Ciljne spremenljivke
    def `describe_data_brief`:
        Data instances: Število primerov
widgets/report/tests/__init__.py:
    def `suite`:
        test*.py: false
    __main__: false
    suite: false
widgets/tests/__init__.py:
    def `load_tests`:
        _in_load_tests: false
        test*.py: false
widgets/tests/base.py:
    class `BaseParameterMapping`:
        def `__init__`:
            both: false
        def `__str__`:
            both: false
            %s (%s): false
    class `ParameterMapping`:
        def `_default_values`:
            {} is not supported: false
        def `_default_get_value`:
            {} is not supported: false
        def `_default_set_value`:
            {} is not supported: false
    class `WidgetLearnerTestMixin`:
        def `init`:
            testing_dataset_cls: false
            testing_dataset_reg: false
            Model: false
            Classifier: false
            Predictor: false
        def `test_has_unconditional_apply`:
            unconditional_apply: false
        def `test_input_preprocessor`:
            Preprocessor not added to widget preprocessors: false
            Preprocessors were not passed to the learner: false
        def `test_input_preprocessors`:
            `PreprocessorList` was not added to preprocessors: false
        def `test_input_preprocessor_disconnect`:
            Preprocessors not removed on disconnect.: false
        def `test_output_learner`:
            Does not initialize the learner output: false
            Does not send a new learner instance on `Apply`.: false
        def `test_output_learner_name`:
            Learner Name: false
        def `test_output_model_name`:
            Model Name: false
        def `_get_param_value`:
            both: false
        def `test_parameters`:
            Mismatching setting for parameter '%s': false
        def `test_params_trigger_settings_changed`:
            apply(%s): false
        def `_should_check_parameter`:
            classification: false
            regression: false
            both: false
    class `WidgetOutputsTestMixin`:
        def `init`:
            iris: false
        def `_select_data`:
            Subclasses should implement select_data: false
    class `ProjectionWidgetTestMixin`:
        def `init`:
            iris: false
        def `test_setup_graph`:
            Did not finish in the specified {timeout}ms timeout: false
        def `test_attr_label_metas`:
            zoo: false
        def `test_plot_once`:
            heart_disease: false
        def `test_subset_data_color`:
            Did not finish in the specified {timeout}ms timeout: false
            '#46befa': false
            brush: false
            '#000000': false
        def `test_dragging_tooltip`:
            heart_disease: false
        def `test_sparse_data`:
            iris: false
        def `test_saved_selection`:
            Did not finish in the specified {timeout}ms timeout: false
        def `test_hidden_effective_variables`:
            c1: false
            hidden: false
            c2: false
            cls: false
            a: false
            b: false
        def `test_visual_settings`:
            Helvetica: false
            Fonts: false
            Font family: false
            Title: false
            Font size: false
            Italic: false
            Label: false
            Categorical legend: false
            Numerical legend: false
            Annotations: false
            Foo: false
    class `AnchorProjectionWidgetTestMixin`:
        def `test_embedding_missing_values`:
            heart_disease: false
        def `test_sparse_data`:
            iris: false
        def `test_visual_settings`:
            Helvetica: false
            Fonts: false
            Anchor: false
            Font size: false
            Italic: false
    class `datasets`:
        def `path`:
            datasets: false
        def `missing_data_1`:
            missing_data_1.tab: false
        def `missing_data_2`:
            missing_data_2.tab: false
        def `missing_data_3`:
            missing_data_3.tab: false
        def `data_one_column_vals`:
            a: false
            b: false
            c: false
            y: false
            n: false
            ynyn: false
        def `datasets`:
            testing_dataset_cls: false
            testing_dataset_reg: false
    def `open_widget_classes`:
        __init_subclass__: false
widgets/tests/utils.py:
    def `possible_duplicate_table`:
        iris: false
widgets/unsupervised/__init__.py:
    Unsupervised: Nenadzorovano učenje
    orange.widgets.unsupervised: false
    Unsupervised learning.: Nenadzorovano učenje
    '#CAE1EF': true
    icons/Category-Unsupervised.svg: false
widgets/unsupervised/owcorrespondence.py:
    class `OWCorrespondenceAnalysis`:
        Correspondence Analysis: Korespondenčna analiza
        Correspondence analysis for categorical multivariate data.: Korespondenčna analiza kategoričnih multivariatnih podatkov.
        icons/CorrespondenceAnalysis.svg: false
        correspondence analysis: correspondence analysis
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Coordinates: Koordinate
        plot.plotItem: false
        class `Error`:
            Empty dataset: Prazna tabela podatkov
            No categorical data: Ni kategoričnih podatkov
        def `__init__`:
            Variables: Spremenljivke
            Axes: Osi
            component_x: false
            X:: true
            component_y: false
            Y:: true
            Contribution to Inertia: Prispevek k vztrajnosti
            \n: true
            auto_commit: false
        def `set_data`:
            ignore: false
            combo box 'component_[xy]' .*: false
        def `commit`:
            Component {i + 1}: Komponenta {i + 1}
            Variable: Spremenljivka
            Value: Vrednost
        def `_update_CA`:
            ignore: false
            combo box 'component_[xy]' .*: false
        def `update_XY`:
            {}: false
        def `_setup_plot`:
            def `get_minmax`:
                inf: false
                -inf: false
            bottom: false
            Component {} ({:.1f}%): Komponenta {} ({:.1f}%)
            left: false
        def `_update_info`:
            \n\n: false
            'Axis 1: {:.2f}\n': Os 1: {:.2f}\n
            'Axis 2: {:.2f}': Os 2: {:.2f}
        def `send_report`:
            Data instances: Vhodni primeri
            Selected variable: Izbrana spremenljivka
            Selected variables: Izbrane spremenljivke
            {} and {}: {} in {}
            ', ': false
    def `correspondence`:
        ignore: false
    CA: false
    U: false
    D: false
    V: false
    row_factors: false
    col_factors: false
    row_sums: false
    column_sums: false
    __main__: false
    titanic: false
widgets/unsupervised/owdbscan.py:
    class `OWDBSCAN`:
        DBSCAN: true
        Density-based spatial clustering.: Gručenje na podlagi prostorske gostote.
        icons/DBSCAN.svg: false
        class `Inputs`:
            Data: Podatki
        class `Error`:
            'Not enough unique data instances. ': 'Ni dovolj primerov. '
            At least two are required.: Potrebna sta vsaj dva.
        Euclidean: Evklidska
        euclidean: false
        Manhattan: Manhattanska
        cityblock: false
        Cosine: Kosinusna
        cosine: false
        def `__init__`:
            Parameters: Parametri
            min_samples: false
            Core point neighbors: Število sosedov
            eps: false
            Neighborhood distance: Velikost soseščine
            Distance Metric: Mera razdalje
            metric_idx: false
            normalize: false
            Normalize features: Normiraj spremenljivke
            auto_commit: false
            Data items sorted by score: Primeri iz podatkov, urejeni po oceni
            Distance to the k-th nearest neighbour: Razdalja do k-tega najbližjega soseda
        def `_plot_graph`:
            red: false
        def `send_data`:
            Cluster: Gruča
            C%d: G%d
            DBSCAN Core: Jedro DBSCAN-a
            0: false
            1: false
    __main__: false
    iris.tab: false
widgets/unsupervised/owdistancefile.py:
    class `OWDistanceFile`:
        Distance File: Branje razdalj
        orange.widgets.unsupervised.distancefile: false
        Read distances from a file.: Prebere matriko razdalj iz datoteke.
        icons/DistanceFile.svg: false
        distance file, load, read, open: distance file, load, read, open, naloži, preberi, odpri
        class `Outputs`:
            Distances: Razdalje
        class `Error`:
            Data was not loaded:{}: Branje ni uspelo:{}
            'Matrix is not square. ': 'Matrika ni pravokotna. '
            Reformat the file and use the File widget to read it.: Preoblikujte datoteko in jo preberite z gradnikom Datoteka.
        def `__init__`:
            Distance File: Datoteka z razdaljami
            ...: true
            Reload: Ponovno naloži
            Options: Opcije
            auto_symmetric: false
            Treat triangular matrices as symmetric: Obravnavaj trikotne matrike kot simetrične
            'If matrix is triangular, this will copy the data to the ': 'Če je matrika trikotna, bo to preslikalo podatke '
            other triangle: še v nasprotni trikotnik.
            Browse documentation datasets: Prebrskaj podatke iz dokumentacije
        def `browse_file`:
            File: Datoteka
            Cannot find the directory with documentation datasets: Ne najdem imenika z datotekami iz dokumentacije
            ~/: false
            Open Distance File: Odpri datoteko razdalj
            Excel File (*.xlsx);;Distance File (*.dst): Excelova datoteka (*.xlsx); Razdalje (*.dst)
        def `open_file`:
            .: false
            (none): (prazno)
            ' \n': false
        def `send_report`:
            No data was loaded.: Podatki niso naloženi.
            File name: Ime datoteke
    class `OWDistanceFileDropHandler`:
        def `parametersFromFile`:
            recent_paths: false
        def `canDropFile`:
            .dst: false
            .xlsx: false
    __main__: false
widgets/unsupervised/owdistancemap.py:
    class `DistanceMapItem`:
        def `hoverMoveEvent`:
            '{}, {}: {:.3f}': false
    class `OWDistanceMap`:
        Distance Map: Slika razdalj
        Visualize a distance matrix.: Prikaže matriko razdalj s toplo gredo.
        icons/DistanceMap.svg: false
        distance map: distance map, slika razdalj
        class `Inputs`:
            Distances: Razdalje
        class `Outputs`:
            Selected Data: Izbrani podatki
            Features: Spremenljivke
        class `Error`:
            Empty distance matrix: Prazna matrika razdalj
            Distance matrix is not symmetric.: Matrika razdalj ni simetrična.
        grid_widget: false
        def `__init__`:
            sorting: false
            Element Sorting: Urejanje
            None: (Brez)
            Clustering: Gručenje
            Clustering with ordered leaves: Gručenje z urejenimi listi
            Colors: Barve
            annotation_idx: false
            Annotations: Oznake
            Enumeration: Oštevilčenje
            autocommit: false
        def `set_distances`:
            'Cluster ordering was disabled due to the input ': Urejeno gručenje
            matrix being to big: ' je izključeno, ker je podatkov preveč.'
            'Clustering was disabled due to the input ': Gručenje
        def `set_items`:
            None: (Brez)
            Enumeration: Oštevilčenje
            Attribute names: Imena spremenljivk
            Name: Imena
        def `_update_labels`:
            Attribute names: Imena spremenljivk
        def `send_report`:
            Sorting: Urejenost
            Annotations: Oznake
    __main__: false
    iris: false
widgets/unsupervised/owdistancematrix.py:
    class `OWDistanceMatrix`:
        Distance Matrix: Matrika razdalj
        View distance matrix.: Pokaže matriko razdalj.
        icons/DistanceMatrix.svg: false
        distance matrix: distance matrix
        class `Inputs`:
            Distances: Razdalje
        class `Outputs`:
            Distances: Razdalje
            Selected Data: Izbrani podatki
            Table: Tabela
        class `Error`:
            Distance matrix is empty.: Matrika razdalj je prazna.
        def `__init__`:
            annotation_idx: false
            'Labels: ': 'Oznake: '
            None: Brez
            Enumeration: Oštevilčenje
            auto_commit: false
        def `set_distances`:
            None: Brez
            Enumerate: Oštevilčenje
            Labels: Oznake
            Attribute names: Imena spremenljivk
            Name: Imena
        def `_choose_label`:
            Enumerate: Oštevilčenje
        def `_update_labels`:
            Attribute names: Imena spremenljivk
            Labels: Oznake
        def `_set_selection`:
            wrong data for symmetric selection: false
            wrong data for asymmetric selection: false
        def `send_report`:
            def `cell`:
                ' style="background-color: {brush.color().name()}"': false
                {label:.{ndec}f}: false
                <td {style}>{label}</td>\n: false
            <table style="border-collapse:collapse">: false
            <tr>: false
            <td></td>: false
            </tr>: false
            </table>: false
    __main__: false
    zoo: falaseg
widgets/unsupervised/owdistances.py:
    Euclidean (normalized): Evklidska (normalizirana)
    Square root of summed difference between normalized values: Kvadratni koren vsote razlik med normaliziranimi vrednostmi
    Euclidean: Evklidska
    Square root of summed difference between values: Kvadratni koren vsote razlik med vrednostmi
    Manhattan (normalized): Manhattanska (normalizirana)
    Sum of absolute differences between normalized values: Vsota absolutnih razlik med normaliziranimi vrednostmi
    Manhattan: Manhattanska
    Sum of absolute differences between values: Vsota absolutnih razlik med vrednostmi
    Mahalanobis: Mahalanobisova
    Mahalanobis distance: Mahalanobisova razdalja
    Hamming: Hammingova
    Hamming distance: Hammingova razdalja
    Cosine: kosinusna
    Cosine distance: kosinusna razdalja
    Pearson: Pearsonova
    Pearson correlation; distance = 1 - ρ/2: Pearsonova korelacija; razdalja = 1 - ρ/2
    Pearson (absolute): Pearsonova (absolutna)
    Absolute value of Pearson correlation; distance = 1 - |ρ|: Absolutna vrednost Pearsonove korelacije; razdalja = 1 - |ρ|
    Spearman: Spearmanova
    Spearman (absolute): Spearmanova (absolutna)
    Jaccard: Jaccardova
    Jaccard distance: Jaccardova razdalja
    class `DistanceRunner`:
        def `run`:
            Calculating...: Računam ...
            axis: false
            impute: false
            callback: false
            normalize: false
    class `OWDistances`:
        Distances: Razdalje
        Compute a matrix of pairwise distances.: Izračunaj matriko razdalj.
        icons/Distance.svg: false
        distances: distances
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Distances: Razdalje
        class `Error`:
            No numeric features: Ni številskih spremenljivk
            No binary features: Ni binarnih spremenljivk
            {} requires dense data.: {} zahteva goste podatke.
            Not enough memory: Premalo pomnilnika
            Problem in calculation:\n{}: Težava pri izračunu:\n{}
            Mahalanobis handles up to 1000 {}.: Mahalanobisova razdalja zmore do 1000 {}.
        class `Warning`:
            Ignoring categorical features: Kategoričnih spremenljivk ne upoštevam
            Ignoring non-binary features: Ne-binarnih spremenljivk ne upoštevam
            Some metrics don't support sparse data\n: Nekatere metrike ne podpirajo redkih podatkov\n
            'and were disabled: {}': in so bile onemogočene: {}
            Missing values were imputed: Manjkajoče vrednosti so bile nadomeščene
            Data has no features: Podatki nimajo spremenljivk.
        def `__init__`:
            axis: false
            Rows: Vrstice
            Columns: Stolpce
            Compare: Primerjaj
            Distance Metric: Razdalja
            autocommit: false
        def `refresh_radios`:
            ', ': false
        def `compute_distances`:
            def `_fix_discrete`:
                fallback: false
            def `_check_tractability`:
                rows: vrstic
                columns: stolpcev
        def `send_report`:
            Distances Between: Razdalje med
            Rows: vrsticami
            Columns: stolpci
            Metric: Razdalja
        def `migrate_settings`:
            normalized_dist: false
            metric_idx: false
            metric_id: false
    __main__: false
    iris: false
widgets/unsupervised/owdistancetransformation.py:
    class `OWDistanceTransformation`:
        Distance Transformation: Transformacija razdalj
        Transform distances according to selected criteria.: Transformira razdalje v matriki.
        icons/DistancesTransformation.svg: false
        distance transformation: distance transformation
        class `Inputs`:
            Distances: Razdalje
        class `Outputs`:
            Distances: Razdalje
        No normalization: Brez normiranja
        To interval [0, 1]: V interval [0, 1]
        To interval [-1, 1]: V interval [-1, 1]
        'Sigmoid function: 1/(1+exp(-X))': Sigmoidna funkcija: 1/(1+exp(-X))
        No inversion: Brez obračanja
        -X: true
        1 - X: true
        max(X) - X: true
        1/X: true
        def `__init__`:
            normalization_method: false
            Normalization: Normiranje
            inversion_method: false
            Inversion: Obračanje
            autocommit: false
        def `send_report`:
            inversion ({}): obračanje ({})
            normalization ({}): normiranje ({})
            Model parameters: Parametri modela
            Transformation: Transformacija
            ', ': false
            None: Brez
    __main__: false
    iris: false
widgets/unsupervised/owhierarchicalclustering.py:
    OWHierarchicalClustering: false
    Single: Minimalna
    Average: Povprečna
    Weighted: Utežena
    Complete: Maksimalna
    Ward: Wardova
    single: false
    average: false
    weighted: false
    complete: false
    ward: false
    class `SaveStateSettingsHandler`:
        def `initialize`:
            __session_state_data: false
        def `pack_data`:
            __session_state_data: false
    class `OWHierarchicalClustering`:
        Hierarchical Clustering: Hierarhično gručenje
        'Display a dendrogram of a hierarchical clustering ': 'Prikaži dendrogram hierarhičnega razvrščanja v skupine, '
        constructed from the input distance matrix.: zgrajenega iz matrike razdalj.
        icons/HierarchicalClustering.svg: false
        hierarchical clustering: hierarchical clustering, dendrogram, razvrščanje, skupine
        class `Inputs`:
            Distances: Razdalje
            Data Subset: Podmnožica podatkov
        class `Outputs`:
            Selected Data: Izbrani podatki
        Enumeration: Številčenje
        Name: Ime
        scene: false
        class `Error`:
            Distance matrix is empty.: Matrika razdalj je prazna
            Some distances are infinite: Nekatere razdalje so neskončne.
            Distance matrix is not symmetric.: Matrika razdalj ni simetrična
        class `Warning`:
            'Unused data subset: distances do not refer to data instances': Neuporabljeni podatki: matrika razdalj se ne nanaša na podane vhodne podatke.
            Some data from the subset does not appear in distance matrix: Nekateri izmed primerov v vhodnih podatkih se ne pojavijo v matriki razdalj.
            Subset data refers to a different table: Podmnožica podatkov pripada drugi tabeli podatkov.
            Pruned cluster doesn't show colors and indicate subset: Porezano gručenje ne kaže barv in podmnožic.
        def `__init__`:
            M: false
            linkage: false
            Linkage: Razdalja med gručami
            None: Brez
            Annotations: Oznake
            annotation: false
            label_only_subset: false
            Show labels only for subset: Pokaži oznake samo za podmnožico
            color_by: false
            Color by:: Barva:
            pruning: false
            Pruning: Rezanje
            max_depth: false
            Max depth:: Največja globina
            selection_method: false
            Selection: Izbor
            Manual: Ročno
            Height ratio:: Razmerje višine:
            cut_ratio: false
            ' %': true
            Top N:: Prvih N:
            top_n: false
            zoom_factor: false
            Zoom: Povečava
            Zoom in: Povečaj
            Zoom out: Pomanjšaj
            Reset zoom: Ponastavi zoom
            autocommit: false
            top: false
            bottom: false
        def `_set_items`:
            Name: Ime
        def `_update_labels`:
            label_model: false
            Enumeration: Številčenje
            Name: Ime
            ', ': true
        def `commit`:
            items: false
            Cluster: Gruča
            C{i + 1}: true
            Other: Drugo
            cluster: Gruča
        def `save_state`:
            version: false
            selection_state: false
        def `set_restore_state`:
            selection_state: false
        def `send_report`:
            manual: ročno
            at {:.1f} of height: pri {:.1f} višine
            top {self.top_n} {pl(self.top_n, 'cluster')}: {plsi(self.top_n, 'vrhnja|vrhnji|vrhnje|vrhnjih')} {self.top_n} {plsi(self.top_n, 'gruča')}
            Linkage: Razdalja med gručami
            Annotation: Oznake
            Pruning: Rezanje
            {} levels: {} nivojev
            Selection: Izbor
        def `migrate_context`:
            annotation: false
            None: false
    def `main`:
        iris: false
    __main__: false
widgets/unsupervised/owkmeans.py:
    class `ClusterTableModel`:
        def `data`:
            {:.3f}: false
            NA: NN
    class `OWKMeans`:
        k-Means: K gruč
        'k-Means clustering algorithm with silhouette-based ': Gručenje v k gruč in izbor s silhueto.
        quality estimation.: ""
        icons/KMeans.svg: false
        k-means, kmeans, clustering: k-means, kmeans, clustering, gručenje
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Annotated Data: Označeni podatki
            Centroids: Centroidi
        class `Error`:
            'Clustering failed\nError: {}': Gručenje ni uspelo.\nNapaka: {}
            Too few ({}) unique data instances for {} clusters: Premalo ({}) neponovljenih primerov za {} gruč.
            Data is missing features.: Podatki nimajo spremenljivk.
        class `Warning`:
            Silhouette scores are not computed for >{} samples: Silhuet za več kot {} primerov ne računam.
            Too few ({}) unique data instances for {} clusters: Premalo ({}) neponovljenih primerov za {} gruč.
            Sparse data cannot be normalized: Redkih podatkov ni možno normirati.
        Initialize with KMeans++: Začni s KMeans++
        k-means++: false
        Random initialization: Začni naključno
        random: false
        def `migrate_settings`:
            auto_apply: false
            auto_commit: false
        def `__init__`:
            optimize_k: false
            Number of Clusters: Število gruč
            Fixed:: Določeno:
            k: false
            From: Od
            k_from: false
            to: do
            k_to: false
            Preprocessing: Predprocesiranje
            normalize: false
            Normalize columns: Normiraj stolpce
            Initialization: Postopek
            smart_init: false
            'Re-runs: ': Število ponovitev
            n_init: false
            'Maximum iterations: ': 'Največje število korakov: '
            max_iterations: false
            Silhouette Scores: Silhuete
            auto_commit: false
        def `send_data`:
            Cluster: Gruča
            C%d: G%d
            Silhouette: Silhuete
            centroids: centroidi
            {self.data.name} centroids: centroidi {self.data.name}
        def `send_report`:
            Number of clusters: Število gruč
            Optimization: Optimizacija
            {}, {} re-runs limited to {} steps: {}, {} ponovitev, omejenih na {} korakov
            Data: Podatki
            Silhouette scores for different numbers of clusters: Silhuete za različno število gruč
    __main__: false
    heart_disease: false
widgets/unsupervised/owlouvainclustering.py:
    Euclidean: Evklidska
    l2: false
    Manhattan: Manhattanska
    l1: false
    Cosine: Kosinusna
    cosine: false
    class `OWLouvainClustering`:
        Louvain Clustering: Louvainsko gručenje
        Detects communities in a network of nearest neighbors.: Poišče zgostitve v mreži najbližjih sosedov.
        icons/LouvainClustering.svg: false
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Network: Mreža
        class `Information`:
            Press commit to recompute clusters and send new data: Pritisnite Uveljavi za izračun novih gruč in pošiljanje podatkov
        class `Error`:
            No features in data: Podatki ne vsebujejo spremenljivk
        def `__init__`:
            Info: Info
            No data on input.: Ni podatkov na vhodu
            Preprocessing: Predprocesiranje
            normalize: false
            Normalize data: Normiraj podatke
            apply_pca: false
            Apply PCA preprocessing: Predprocesiraj s PCA
            pca_components: false
            'PCA Components: ': Število komponent
            Graph parameters: Parametri mreže
            metric_idx: false
            Distance metric: Mera razdalje
            k_neighbors: false
            k neighbors: Število sosedov
            resolution: false
            Resolution: Ločljivost
            %.1f: false
            'The resolution parameter affects the number of clusters to find. ': Ločljivost vpliva na število najdenih gruč.
            'Smaller values tend to produce more clusters and larger values ': Manjša ločljivost običajno vodi v več gruč, večja ločljivost pa v manj.
            retrieve less clusters.: ""
            auto_commit: false
        def `commit`:
            Running...: Tečem...
        def `__set_partial_results`:
            pca_projection: false
            graph: false
            partition: false
        def `__set_results`:
            {num_clusters} {pl(num_clusters, 'cluster')} found.: {plsi(num_clusters, "Najdena|Najdeni|Najdene|Najdenih")} {z_besedo(num_clusters, 1, "f")} {plsi(num_clusters, "gruča")}.
        def `_send_data`:
            Cluster: Gruča
            C%d: G%d
        def `set_data`:
            Clustering not yet run.: Gručenje še ni steklo.
        def `clear`:
            No data on input.: Ni podatkov na vhodu.
        def `send_report`:
            , {self.pca_components} {pl(self.pca_components, 'component')}: , {self.pca_components} {plsi(self.pca_components, "komponenta")}
            Normalize data: Normiranje podatkov
            PCA preprocessing: Predprocesiranje s PCA
            Metric: Mera razdalje
            k neighbors: Število sosedov
            Resolution: Ločljivost
        def `migrate_settings`:
            context_settings: false
            apply_pca: false
            k_neighbors: false
            metric_idx: false
            normalize: false
            pca_components: false
            resolution: false
    def `run_on_data`:
        Computing PCA...: Računam PCA...
        pca_projection: false
        Building graph...: Sestavljam mrežo...
        graph: false
        Detecting communities...: Iščem zgostitve...
        partition: false
    def `run_on_graph`:
        Detecting communities...: Iščem zgostitve...
        partition: false
    __main__: false
    iris: false
widgets/unsupervised/owmanifoldlearning.py:
    class `ManifoldParametersEditor`:
        def `_create_spin_parameter`:
            0: false
        def `_create_combo_parameter`:
            _values: false
            _index: false
        def `__combo_parameter_update`:
            _index: false
            _values: false
        def `_create_radio_parameter`:
            _values: false
            _index: false
        def `__radio_parameter_update`:
            _index: false
            _values: false
    class `TSNEParametersEditor`:
        euclidean: false
        manhattan: false
        chebyshev: false
        jaccard: false
        Euclidean: Evklidska
        Manhattan: Manhattanska
        Chebyshev: Čebiševa
        Jaccard: Jaccardova
        pca: false
        PCA: true
        random: false
        Random: Naključno
        def `__init__`:
            metric: false
            Metric:: Metrika:
            perplexity: false
            Perplexity:: Zmedenost (perplexity):
            early_exaggeration: false
            Early exaggeration:: Zgodnje pretiravanje (exaggeration):
            learning_rate: false
            Learning rate:: Hitrost učenja:
            n_iter: false
            Max iterations:: Največje število ponovitev:
            initialization: false
            Initialization:: Uporabi:
        def `get_report_parameters`:
            Metric: Metrika
            metric: false
            Perplexity: Zmedenost (perplexity)
            perplexity: false
            Early exaggeration: Zgodnje pretiravanje (exaggeration)
            early_exaggeration: false
            Learning rate: Hitrost učenja
            learning_rate: false
            Max iterations: Največje število ponovitev
            n_iter: false
            Initialization: Uporabi
            initialization: false
    class `MDSParametersEditor`:
        PCA: false
        PCA (Torgerson): true
        random: false
        Random: Naključno
        def `__init__`:
            max_iter: false
            Max iterations:: Največje število ponovitev:
            init_type: false
            Initialization:: Uporabi:
        def `get_parameters`:
            n_init: false
        def `get_report_parameters`:
            Max iterations: Največje število ponovitev
            max_iter: false
            Initialization: Uporabi
            init_type: false
    class `IsomapParametersEditor`:
        def `__init__`:
            n_neighbors: false
            Neighbors:: Sosedi:
        def `get_report_parameters`:
            Neighbors: Sosedi
            n_neighbors: false
    class `LocallyLinearEmbeddingParametersEditor`:
        standard: false
        Standard: Standardno
        modified: false
        Modified: Modificirano
        hessian: false
        Hessian eigenmap: Hessijev lastni zemljevid
        ltsa: false
        Local: Lokalno
        def `__init__`:
            method: false
            Method:: Metoda:
            n_neighbors: false
            Neighbors:: Sosedi:
            max_iter: false
            Max iterations:: Največje število ponovitev:
        def `get_report_parameters`:
            Method: Metoda
            method: false
            Neighbors: Sosedi
            n_neighbors: false
            Max iterations: Največje število ponovitev
            max_iter: false
    class `SpectralEmbeddingParametersEditor`:
        nearest_neighbors: false
        Nearest neighbors: Najbližji sosedje
        rbf: false
        RBF kernel: Jedro RBF
        def `__init__`:
            affinity: false
            Affinity:: Povezanost:
        def `get_report_parameters`:
            Affinity: Povezanost
            affinity: false
    class `OWManifoldLearning`:
        Manifold Learning: Večplastno učenje
        Nonlinear dimensionality reduction.: Nelinearno zmanjšanje dimenzionalnosti.
        icons/Manifold.svg: false
        manifold learning: manifold learning
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Transformed Data: Spremenjeni podatki
            Transformed data: Spremenjeni podatki
        class `Error`:
            'For chosen method and components, ': 'Za izbrano metodo in komponente '
            neighbors must be greater than {}: morajo biti sosedje večji od {}
            {}: false
            Sparse data is not supported.: Redki podatki niso podprti.
            Out of memory: Premalo pomnilnika
        class `Warning`:
            Disconnected graph, embedding may not work: Graf je nepovezan, vložitev morda ne bo delovala.
        def `migrate_settings`:
            tsne_editor: false
            init_index: false
            initialization_index: false
            metric_index: false
        def `__init__`:
            Method: Metoda
            manifold_method_index: false
            Output: Izhod
            n_components: false
            Components:: Število komponent:
            0: false
        def `commit`:
            def `_handle_disconnected_graph_warning`:
                Graph is not fully connected: Graf ni povsem povezan
            C{}: false
            "for method='hessian', n_neighbors ": false
            must be greater than [n_components: false
            ' * (n_components + 3) / 2]': false
            {}: false
        def `send_report`:
            Method: Metoda
            Number of components: Število komponent
            Method parameters: Parametri metode
            Data: Podatki
    __main__: false
    brown-selected: false
widgets/unsupervised/owmds.py:
    def `run_mds`:
        Running...: Tečem...
        precomputed: false
        eps: false
    class `OWMDSGraph`:
        def `update_pairs`:
            pairs: false
            on: false
    class `OWMDS`:
        MDS: Večrazsežnostno lestvičenje
        'Two-dimensional data projection by multidimensional ': 'Dvodimenzionalna projekcija večdimenzionalnih podatkov, '
        scaling constructed from a distance matrix.: ki poskuša ohraniti razdalje med primeri.
        icons/MDS.svg: false
        mds, multidimensional scaling, multi dimensional scaling: mds, multidimensional scaling, multi dimensional scaling, večdimenzionalnost
        class `Inputs`:
            Distances: Razdalja
        Every iteration: po vsakem koraku
        Every 5 steps: vsakih pet korakov
        Every 10 steps: vsakih deset korako
        Every 25 steps: vsakih 25 korakov
        Every 50 steps: vsakih 50 korakov
        None: nikoli
        mds-x: false
        mds-y: false
        class `Error`:
            Input data needs at least 2 rows: Podatki morajo imeti vsaj dva primera.
            Distance matrix is not symmetric: Matrika razdalj ni simetrična.
            Input matrix must be at least 2x2: Matrika razdalj mora biti velika vsaj 2x2
            Data has no attributes: Podatki nimajo spremenljivk
            Data and distances dimensions do not match.: Podatki in matrika razdalj so različno veliki
            Out of memory: Premalo pomnilnika
            Error during optimization\n{}: Napaka med računanjem\n{}
        def `__init__`:
            Stress: Napetost
        def `_add_controls`:
            Show similar pairs:: Pokaži podobne pare:
            connected_pairs: false
        def `_add_controls_optimization`:
            Optimize: Izračun
            PCA: PCA
            Randomize: Razmeči
            Jitter: Potresi
            Start: Začni
            Refresh:: Izris:
            refresh_rate: false
            'Kruskal Stress: -': Kruskalova napetost: -
        def `_initialize`:
            labels: false
        def `init_attr_values`:
            labels: false
        def `_toggle_run`:
            Resume: Nadaljuj
        def `_run`:
            Stop: Stoj
            PCA: Pca
            random: false
        def `on_done`:
            Start: Začni
        def `update_stress`:
            -: false
            {self.stress:.3f}: false
            'Kruskal Stress: {stress_val}': Kruskalova napetost: {stress_val}
        def `on_exception`:
            Start: Začni
        def `do_initialization`:
            Start: Začni
        def `get_size_data`:
            Stress: Napetost
        def `get_stress`:
            euclidean: false
        def `migrate_settings`:
            label_only_selected: false
            symbol_opacity: false
            alpha_value: false
            symbol_size: false
            point_width: false
            jitter: false
            jitter_size: false
            graph: false
            auto_commit: false
            autocommit: false
            connected_pairs: false
        def `migrate_context`:
            color_value: false
            attr_color: false
            shape_value: false
            attr_shape: false
            size_value: false
            attr_size: false
            label_value: false
            attr_label: false
            Stress: false
            graph: false
    '<?xml version="1.0" encoding="utf-8"?>
<svg version="1.1"
	 id="svg3025" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:svg="http://www.w3.org/2000/svg"
	 xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 1347.7 1178.5"
	 style="enable-background:new 0 0 1347.7 1178.5;" xml:space="preserve">
<sodipodi:namedview  bordercolor="#666666" borderopacity="1" gridtolerance="10" guidetolerance="10" id="namedview3031" inkscape:current-layer="svg3025" inkscape:cx="896" inkscape:cy="896" inkscape:pageopacity="0" inkscape:pageshadow="2" inkscape:window-height="480" inkscape:window-maximized="0" inkscape:window-width="640" inkscape:window-x="0" inkscape:window-y="25" inkscape:zoom="0.13169643" objecttolerance="10" pagecolor="#ffffff" showgrid="false">
	</sodipodi:namedview>
<g id="g3027" transform="matrix(1,0,0,-1,37.966102,1320.6441)">
	<path inkscape:connector-curvature="0" d="M1003,628.1c-1-4.2-4.5-7.6-7.6-11.1L581,202.5c-7.4-7.4-13.6-9.9-18.7-7.6
		c-5.1,2.3-7.6,8.6-7.6,18.7v414.5c-1.9-3.9-4.5-7.6-7.6-11.1L132.6,202.5c-7.4-7.4-13.6-9.9-18.7-7.6c-5.1,2.3-7.6,8.6-7.6,18.7
		v859.3c0,10.1,2.5,16.3,7.6,18.7c5.1,2.3,11.3-0.2,18.7-7.6l414.5-414.5c3.1-3.1,5.6-6.8,7.6-11.1v414.5c0,10.1,2.5,16.3,7.6,18.7
		c5.1,2.3,11.3-0.2,18.7-7.6l414.5-414.5c3.1-3.1,6.4-6.5,7.6-11.1C1004.9,651.1,1004.8,635.4,1003,628.1z"/>
	<path inkscape:connector-curvature="0" d="M1038,650v404.2c0,10.1,3.7,18.9,11.1,26.3c7.4,7.4,16.2,11.1,26.3,11.1h74.7
		c10.1,0,18.9-3.7,26.3-11.1c7.4-7.4,11.1-16.2,11.1-26.3v-822c0-10.1-3.7-18.9-11.1-26.3c-7.4-7.4-16.2-11.1-26.3-11.1h-74.7
		c-10.1,0-18.9,3.7-26.3,11.1c-7.4,7.4-11.1,16.2-11.1,26.3V650"/>
	<path d="M918.9,404.1"/>
</g>
</svg>
': false
    __main__: false
    iris: false
widgets/unsupervised/owpca.py:
    component variance: varianca kompomente
    cumulative variance: skupna varianca
    class `OWPCA`:
        PCA: PCA
        Principal component analysis with a scree-diagram.: Analiza osnovnih komponent.
        icons/PCA.svg: false
        pca, principal component analysis, linear transformation: pca, principal component analysis, linear transformation, osnovne komponente, linearna transformacija
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Transformed Data: Spremenjeni podatki
            Transformed data: Spremenjeni podatki
            Data: Podatki
            Components: Komponente
            PCA: PCA
        plot.plotItem: false
        class `Warning`:
            'All components of the PCA are trivial (explain 0 variance). ': Vse komponente so trivialne
            Input data is constant (or near constant).: Vhodni podatki so konstantni (ali skoraj konstantni)
        class `Error`:
            At least 1 feature is required: Potreben je vsaj en faktor.
            At least 1 data instance is required: Tabela s podatki je prazna.
        def `__init__`:
            Components Selection: Izbor komponent
            ncomponents: false
            All: Vse
            variance_covered: false
            %: true
            Components:: Komponente:
            Explained variance:: Razložena varianca:
            Options: Opcije
            normalize: false
            Normalize variables: Normiraj spremenljivke
            maxp: false
            Show only first: Pokaži le prvih
            auto_commit: false
            Principal Components: Osnovne komponente
            Proportion of variance: Delež variance
        def `set_data`:
            Data has been sampled: Podatki so bili vzorčeni
        def `_update_axis`:
            bottom: false
        def `commit`:
            variance: false
            components: komponente
            PC{i + 1}: Komp{i + 1}
        def `send_report`:
            Normalize data: Normiranje podatkov
            Selected components: Število komponent
            Explained variance: Razložena varianca
            {self.variance_covered:.3f} %: false
        def `migrate_settings`:
            variance_covered: false
            ncomponents: false
            decomposition_idx: false
            batch_size: false
            address: false
            auto_update: false
    __main__: false
    housing: false
widgets/unsupervised/owsavedistances.py:
    class `OWSaveDistances`:
        Save Distance Matrix: Shrani matriko razdalj
        Save distance matrix to an output file.: Shrani matriko razdalj v datoteko.
        icons/SaveDistances.svg: false
        save distance matrix, distance matrix, save: save distance matrix, distance matrix, matrika, razdalje
        Excel File (*.xlsx): Excelova datoteka (*.xlsx)
        Distance File (*.dst): Datoteka razdalj (*.dst)
        class `Warning`:
            Associated data was not saved.: Pripeta tabela podatkov ni shranjena.
            Data associated with {} was not saved.: Podatki o {} niso shranjeni.
        class `Inputs`:
            Distances: Razdalje
        def `do_save`:
            columns: stolpcih
            rows: vrsticah
        def `send_report`:
            Input: Vhod
            none: brez
            File name: Ime datoteke
            not set: ni nastavljeno
        def `_description`:
            ' and ': ' in '
            row: vrstic
            column: stolpcev
            ; {labels} labels: ; oznake {labels}
            {len(dist)}-dimensional matrix{labels}: {len(dist)}-dimenzionalna matrika{labels}
    __main__: false
    iris: false
widgets/unsupervised/owsom.py:
    class `SomSharedValueCompute`:
        def `__getstate__`:
            __hash: false
    class `OWSOM`:
        Self-Organizing Map: SOM
        Computation of self-organizing map.: Samodejni zemljevid.
        icons/SOM.svg: false
        self-organizing map, som: self-organizing map, som, samodejni zemljevid
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Selected Data: Izbrani podatki
        view: false
        OptControls: false
        shape: false
        auto_dim: false
        spin_x: false
        spin_y: false
        initialization: false
        start: false
        class `Information`:
            'The parameter settings have been changed. Press "Start" to ': 'Parametri so bili spremenjeni. Pritisnite "Začni", da '
            rerun with the new settings.: zaženete z novimi nastavitvami.
        class `Warning`:
            SOM ignores categorical variables.: SOM ne upošteva kategoričnih spremenljivk.
            Some data instances have undefined value of '{}'.: Nekatere vrstice imajo neznane vrednosti '{}'.
            "'{}' has no defined values.": "'{}' ima neznane vrednosti."
            {}: false
            Data contains a single numeric column.: Podatki imajo le eno številsko spremenljivko.
        class `Error`:
            Data contains no numeric columns.: Podatki nimajo številskih spremenljivk.
            SOM needs at least two data rows without missing values.: SOM potrebuje vsaj dva primera brez neznanih vrednosti.
        def `__init__`:
            SOM: SOM
            Hexagonal grid: Šestkotna mreža
            Square grid: Pravokotna mreža
            auto_dimension: false
            Set dimensions automatically: Samodejno nastavi velikost mreže
            ×: false
            initialization: false
            Initialize with PCA: Uporabi PCA
            Random initialization: Naključni razpored
            Replicable random: Ponovljivo naključje
            Restart: Ponovno poženi
            Color: Barva
            attr_color: false
            (Same color): (Enobarvno)
            pie_charts: false
            Show pie charts: Pokaži tortne diagrame
            size_by_instances: false
            Size by number of instances: Velikost odraža število primerov
        def `set_data`:
            def `set_warnings`:
                {missing} data {pl(missing, "instance")} with undefined value(s) {pl(missing, "is|are")} not shown.: {missing} {plsi(missing, "primer")} z neznanimi vrednostmi {pl(missing, "ni prikazan|nista prikazana|niso prikazani|ni prikazanih")}.
        def `enable_controls`:
            Start: Začni
            Stop: Stoj
        def `_draw_same_color`:
            {n} instances: {n} {plsi(n, "primer")}
        def `_get_color_column`:
            ignore: false
        def `_tooltip`:
            (N/A): (NN)
            \N{NON-BREAKING HYPHEN}: false
            '<table style="white-space: nowrap">': false
            '
            <tr>
                <td>
                    <font color={color.name()}>■</font>
                    <b>{escape(val).replace("-", nbhp)}</b>:
                </td>
                <td>
                    {n} ({n / tot * 100:.1f}&nbsp;%)
                </td>
            </tr>
            ': false
            </table>: false
        def `update_output`:
            som_cell: false
            r{row + 1}c{col + 1}: false
            som_row: false
            som_col: false
            som_error: false
            Unselected: Neizbrani
            No: Ne
            Yes: Da
        def `_bin_names`:
            < {labels[0]}: true
            {x} - {y}: true
            ≥ {labels[-1]}: true
        def `send_report`:
            Self-organizing map colored by '{self.attr_color.name}': Samodejni zemljevid, pobarvan glede na '{self.attr_color.name}'
        def `migrate_settings`:
            selection: false
    __main__: false
    iris: false
widgets/unsupervised/owtsne.py:
    PCA: true
    pca: false
    Spectral: Spektralna
    spectral: false
    Euclidean: Evklidska
    l2: false
    Manhattan: Manhattan
    l1: false
    Cosine: Kosinusna
    cosine: false
    class `Task`:
        def `validate`:
            Task: false
            Both `distance_matrix` and `data` cannot be `None`: false
            precomputed: false
            '`distance_metric` must be set to `precomputed` when using ': false
            a distance matrix: false
            spectral: false
            '`initialization_method` must be set to `spectral` when ': false
            using a distance matrix: false
            '`distance_metric` cannot be set to `precomputed` when no ': false
            distance matrix is provided: false
            Data normalization is not supported for sparse data: false
    class `TSNERunner`:
        def `compute_tsne_preprocessing`:
            Preprocessing data...: Predobdelujem podatke...
            preprocessed_data: false
        def `compute_normalization`:
            Normalizing data...: Normaliziram podatke...
            normalized_data: false
        def `compute_pca`:
            Computing PCA...: Računam PCA...
            pca_projection: false
        def `compute_initialization`:
            Preparing initialization...: Pripravljam začetno stanje...
            pca: false
            spectral: false
            Unrecognized initialization scheme `{task.initialization_method}`!: false
            initialization: false
        def `compute_affinities`:
            Finding nearest neighbors...: Iščem najbližje sosede...
            precomputed: false
            affinities: false
        def `compute_tsne`:
            Running optimization...: Optimizacija teče...
            precomputed: false
            tsne_embedding: false
            def `run_optimization`:
                tsne_embedding: false
        def `run`:
            preprocessing: false
            normalization: false
            pca: false
            init: false
            aff: false
            tsne: false
            precomputed: false
    class `invalidated`:
        def `__str__`:
            %s(%s): false
            ', ': false
            =: false
            preprocessed_data: false
            normalized_data: false
            pca_projection: false
            initialization: false
            affinities: false
            tsne_embedding: false
    class `OWtSNE`:
        t-SNE: false
        Two-dimensional data projection with t-SNE.: Dvodimenzionalna projekcija podatkov s t-SNE.
        icons/TSNE.svg: false
        t-sne, tsne: tsne, projekcija podatkov
        t-SNE-x: false
        t-SNE-y: false
        class `Inputs`:
            Distances: Razdalje
        class `Information`:
            'The parameter settings have been changed. Press ': 'Parametri so spremenjeni. Pritisnite '
            \"Start\" to rerun with the new settings.: '"Začni" za ponovni izračun.'
        class `Warning`:
            The input data contains a large number of features, which may slow: Vhodni podatki vsebujejo veliko spremeljivk, kar lahko upočasni
            ' down t-SNE computation. Consider enabling PCA preprocessing.': ' t-SNE. Priporočamo predobdelavo s PCA.'
        class `Error`:
            Input data needs at least 2 rows: Podatki morajo vsebovati vsaj dva primera.
            Input data needs at least 2 attributes: Podatki morajo vsebovati vsaj dve spremenljivki.
            Input data is constant: Podatki so konstantni.
            No projection due to no valid data: Ni veljavnih podatkov - ni projekcije.
            Distance matrix is not symmetric: Matrika razdalj ni simetrična.
            Input matrix must be at least 2x2: Matrika mora biti vsaj 2x2.
            Data and distance dimensions do not match: Dimenzije podatkov in razdalj se ne ujemajo.
        def `_add_controls_start_box`:
            Preprocessing: Predobdelava
            normalize: false
            Normalize data: Normiraj podatke
            use_pca_preprocessing: false
            Apply PCA preprocessing: Uporabi predobdelavo s PCA
            pca_components: false
            PCA Components:: Komponente PCA:
            Parameters: Parametri
            initialization_method_idx: false
            Initialization:: Začetno stanje:
            distance_metric_idx: false
            Distance metric:: Mera razdalje:
            perplexity: false
            Perplexity:: Zmedenost (perplexity):
            multiscale: false
            Preserve global structure: Ohrani globalni razpored:
            exaggeration: false
            %.2f: false
            Exaggeration:: Pretiravanje (exaggeration):
            Start: Začni
        def `_stop_running_task`:
            Start: Začni
        def `check_data`:
            ignore: false
            Degrees of freedom .*: false
        def `_toggle_run`:
            Resume: Nadaljuj
        def `enable_controls`:
            Precomputed distances provided. Preprocessing is unnecessary!: Kadar so na voljo predizračunane razdalje, predobdelava ni potrebna.
            Spectral: Spektralna
            'Only spectral intialization is supported with precomputed ': 'Kadar uporabljamo predizračunane razdalje, je na voljo le spektralna '
            distance matrices.: inicializacija.
            Precomputed distances provided.: Na voljo so predizračunane razdalje.
            Data normalization is not supported on sparse matrices.: Normalizacija redkih podatkov ni podprta.
        def `run`:
            Stop: Prekini
            precomputed: false
            spectral: false
        def `__ensure_task_same_for_preprocessing`:
            precomputed: false
        def `__ensure_task_same_for_normalization`:
            precomputed: false
        def `__ensure_task_same_for_pca`:
            precomputed: false
        def `__ensure_task_same_for_affinities`:
            precomputed: false
        def `on_partial_result`:
            preprocessed_data: false
            normalized_data: false
            pca_projection: false
            initialization: false
            affinities: false
            tsne_embedding: false
            Unrecognized partial result called with `%s`: false
        def `on_done`:
            Start: Začni
        def `cancel`:
            Start: Začni
        def `migrate_settings`:
            selection_indices: false
            selection: false
            max_iter: false
        def `migrate_context`:
            attr_color: false
            graph: false
            attr_size: false
            attr_shape: false
            attr_label: false
    __main__: false
    iris: false
widgets/utils/PDFExporter.py:
    PDFExporter: false
widgets/utils/SVGExporter.py:
    SVGExporter: false
widgets/utils/__init__.py:
    def `to_html`:
        <=: false
        ≤: false
        >=: false
        ≥: false
        <: false
        &lt;: false
        >: false
        &gt;: false
        =\\=: false
        ≠: false
    def `dumpObjectTree`:
        {indent}{type} "{name}": false
        ' ': false
    def `qname`:
        {0.__module__}.{0.__qualname__}: false
    _T1: false
    _E: false
    _A: false
    _B: false
    def `instance_tooltip`:
        def `show_part`:
            {} = {}: false
            ... and {n_vars - max_shown + 1} others: ... in še {n_vars - max_shown + 1} {plsi(n_vars - max_shown + 1, "spremenljivka|spremenljivki|druge spremenljivke|drugih spremenljivk")}
            <b>{}</b>:<br/>: false
            <br/>: false
        Class: Razred
        Classes: Razredi
        Meta: Meta
        Metas: Meta
        Feature: Spremenljivka
        Features: Spremenljivke
        <br/>: false
widgets/utils/annotated_data.py:
    Data: Podatki
    Selected: Izbrani podatki
    def `domain_with_annotation_column`:
        No: Ne
        Yes: Da
    def `create_annotated_table`:
        No: Ne
        Yes: Da
    def `group_values`:
        G{}: true
        Unselected: Neizbrani
widgets/utils/buttons.py:
    VariableTextPushButton: false
    SimpleButton: false
    FixedSizeButton: false
    def `tooltip_with_shortcut`:
        <span>{}</span>: false
        <kbd>{}</kbd>: false
        &nbsp;&nbsp;: false
widgets/utils/classdensity.py:
    def `compute_density`:
        C_CONTIGUOUS: false
widgets/utils/colorgradientselection.py:
    class `ColorGradientSelection`:
        def `__init__`:
            gradient-combo-box: false
            Low gradient threshold: Spodnja meja gradienta
            'Applying a low threshold will squeeze the ': 'Določa vrednost, pri kateri se začne '
            gradient from the lower end: barva spreminjati
            Range:: Razpon:
        def `__update_center_visibility`:
            Center at:: Središče v:
widgets/utils/colorpalettes.py:
    Palette: false
    IndexedPalette: false
    DiscretePalette: false
    LimitedDiscretePalette: false
    DiscretePalettes: false
    DefaultDiscretePalette: false
    DefaultDiscretePaletteName: false
    HuePalette: false
    DefaultRGBColors: false
    Dark2Colors: false
    Glasbey: false
    ContinuousPalette: false
    ContinuousPalettes: false
    BinnedContinuousPalette: false
    DefaultContinuousPalette: false
    DefaultContinuousPaletteName: false
    ColorIcon: false
    get_default_curve_colors: false
    patch_variable_colors: false
    NAN_COLOR: false
    class `Palette`:
        PaletteFlags: false
        Palette.Flags: false
        def `__init__`:
            _: false
    class `DiscretePalette`:
        def `from_colors`:
            Custom: Paleta
    class `LimitedDiscretePalette`:
        def `__init__`:
            "LimitedDiscretePalette: argument 'force_hsv' is deprecated; ": false
            use 'force_glasbey' instead: false
            custom: false
    class `HuePalette`:
        def `__init__`:
            custom: false
    class `ContinuousPalette`:
        def `from_colors`:
            Custom: Paleta
    class `BinnedContinuousPalette`:
        def `from_palette`:
            can't create palette from '{type(palette).__name__}': false
    Default: Privzeta
    Dark: Temna
    default: false
    dark: false
    glasbey: false
    linear_bgyw_20_98_c66: false
    Blue-Green-Yellow: Modra-Zelena-Rumena
    linear_bmy_10_95_c78: false
    Blue-Magenta-Yellow: Modra-Vijolična-Rumena
    linear_grey_10_95_c0: false
    Dim gray: Temno siva
    linear_inferno: false
    Inferno: true
    linear_viridis: false
    Viridis: true
    diverging_bwr_40_95_c42: false
    Coolwarm: Hladno-topla
    diverging_gkr_60_10_c40: false
    Green-Red: Zelena-Rdeča
    diverging_protanopic_deuteranopic_bwy_60_95_c32: false
    Diverging protanopic: Divergentna protanopična
    Color-blind friendly: Prijazna do barvno slepih
    diverging_tritanopic_cwr_75_98_c20: false
    Diverging tritanopic: Divergentna triptanopična
    linear_protanopic_deuteranopic_kbw_5_98_c40: false
    Linear protanopic: Linearna protanopična
    linear_tritanopic_krjcw_5_95_c24: false
    Linear tritanopic: Linearna tritanopična
    isoluminant_cgo_80_c38: false
    Isoluminant: Enako svetla
    Other: Druge
    rainbow_bgyr_35_85_c73: false
    Rainbow: Mavrica
    def `patch_variable_colors`:
        def `set_colors`:
            palette: false
        def `continuous_set_colors`:
            colors: false
        def `set_palette`:
            palette: false
            colors: false
        def `continuous_get_colors`:
            'ContinuousVariable.color is deprecated; ': false
            use ContinuousVariable.palette: false
            colors: false
            palette: false
        def `continuous_get_palette`:
            palette: false
            colors: false
        def `discrete_get_colors`:
            def `retrieve_colors`:
                palette: false
                colors: false
        def `discrete_set_colors`:
            colors: false
        def `discrete_get_palette`:
            palette: false
            colors: false
widgets/utils/combobox.py:
    ComboBoxSearch: false
    ComboBox: false
    ItemStyledComboBox: false
    TextEditCombo: false
    class `ItemStyledComboBox`:
        def `initStyleOption`:
            QStyleOptionComboBox: false
    class `TextEditCombo`:
        def `__init__`:
            editable: false
            activated: false
widgets/utils/concurrent.py:
    FutureWatcher: false
    FutureSetWatcher: false
    methodinvoke: false
    TaskState: false
    ConcurrentMixin: false
    ConcurrentWidgetMixin: false
    PyOwned: false
    class `_TaskDepotThread`:
        def `__new__`:
            Already exists: false
    class `_TaskRunnable`:
        def `run`:
            transfer: false
    class `FutureRunnable`:
        def `run`:
            Exception in worker thread.: false
    class `ThreadExecutor`:
        def `__init__`:
            Invalid `threadPool` type '{}': false
        def `submit`:
            'Cannot schedule new futures after ': false
            shutdown.: false
            Use `submit_task` to run `Task`s: false
        def `submit_task`:
            `submit_task` will be deprecated: false
            'Cannot schedule new futures after ': false
            shutdown.: false
        def `__make_task_runnable`:
            "Can only submit Tasks from it's own ": false
            thread.: false
            Can not submit Tasks with a parent.: false
    class `Task`:
        def `__init__`:
            `Task` has been deprecated: false
        def `_execute`:
            Exception in Task: false
    class `ConcurrentMixin`:
        def `start`:
            `task` must be callable!: false
        def `_on_task_done`:
            'Starting new task from ': false
            {'on_done' if ex is None else 'on_exception'} is forbidden: false
widgets/utils/datacaching.py:
    def `getCached`:
        __data_cache: false
    def `setCached`:
        __data_cache: false
    def `delCached`:
        __data_cache: false
widgets/utils/dendrogram.py:
    DendrogramWidget: false
    Point: false
    x: false
    y: false
    Element: false
    anchor: false
    path: false
    class `DendrogramWidget`:
        def `_create_label`:
            C{i + 1}: false
widgets/utils/distmatrixmodel.py:
    class `DistMatrixModel`:
        diverging_tritanopic_cwr_75_98_c20: false
widgets/utils/domaineditor.py:
    class `VarTableModel`:
        feature: spremenljivka
        target: ciljna
        meta: meta
        skip: izpusti
        categorical: kategorična
        numeric: številska
        text: besedilna
        datetime: časovna
        def `headerData`:
            Name: Ime
            Type: Vrsta
            Role: Vloga
            Values: Vrednosti
    class `VarTypeDelegate`:
        def `setEditorData`:
            numeric: številska
            datetime: časovna
    class `DomainEditor`:
        def `_is_missing`:
            nan: true
        def `parse_domain`:
            def `discrete_value_display`:
                ', ': false
                , ...: false
widgets/utils/encodings.py:
    utf-8: false
    utf-16: false
    utf-32: false
    iso8859-1: false
    shift_jis: false
    iso2022_jp: false
    gb18030: false
    euc_kr: false
    Unicode (UTF-8): false
    Unicode (UTF-16): false
    utf-16-le: false
    Unicode (UTF-16LE): false
    utf-16-be: false
    Unicode (UTF-16BE): false
    Unicode (UTF-32): false
    utf-32-le: false
    Unicode (UTF-32LE): false
    utf-32-be: false
    Unicode (UTF-32BE): false
    utf-7: false
    Unicode (UTF-7): false
    ascii: false
    English (US-ASCII): false
    Western Europe (ISO Latin 1): false
    iso8859-15: false
    Western Europe (ISO-8859-15): false
    cp1252: false
    Western Europe (Windows-1252): false
    mac_roman: false
    Western Europe (Mac OS Roman): false
    iso8859-2: false
    Central and Eastern Europe (ISO Latin 2): false
    cp1250: false
    Central and Eastern Europe (Windows-1250): false
    mac_latin2: false
    Central and Eastern Europe (Mac Latin-2): false
    iso8859-3: false
    Esperanto, Maltese (ISO Latin 3): false
    iso8859-4: false
    Baltic Languages (ISO Latin 4): false
    cp1257: false
    Baltic Languages (Windows-1257): false
    iso8859-13: false
    Baltic Languages (ISO-8859-13): false
    iso8859-16: false
    South-Eastern Europe (ISO-8859-16): false
    iso8859-5: false
    Cyrillic (ISO-8859-5): false
    cp1251: false
    Cyrillic (Windows-1251): false
    mac_cyrillic: false
    Cyrillic (Mac OS Cyrillic): false
    koi8-r: false
    Cyrillic (KOI8-R): false
    koi8-u: false
    Cyrillic (KOI8-U): false
    iso8859-14: false
    Celtic Languages (ISO-8859-14): false
    iso8859-10: false
    Nordic Languages (ISO-8859-10): false
    mac_iceland: false
    Icelandic (Mac Iceland): false
    iso8859-7: false
    Greek (ISO-8859-7): false
    cp1253: false
    Greek (Windows-1253): false
    mac_greek: false
    Greek (Mac Greek): false
    iso8859-8: false
    Hebrew (ISO-8859-8): false
    cp1255: false
    Hebrew (Windows-1255): false
    iso8859-6: false
    Arabic (ISO-8859-6): false
    cp1256: false
    Arabic (Windows-1256): false
    iso8859-9: false
    Turkish (ISO-8859-9): false
    cp1254: false
    Turkish (Windows-1254): false
    mac_turkish: false
    Turkish (Mac Turkish): false
    iso8859-11: false
    Thai (ISO-8859-11): false
    Japanese (ISO-2022-JP): false
    iso2022_jp_1: false
    Japanese (ISO-2022-JP-1): false
    iso2022_jp_2: false
    Japanese (ISO-2022-JP-2): false
    iso2022_jp_2004: false
    Japanese (ISO-2022-JP-2004): false
    iso2022_jp_3: false
    Japanese (ISO-2022-JP-3): false
    Japanese (Shift JIS): false
    shift_jis_2004: false
    Japanese (Shift JIS 2004): false
    euc_jp: false
    Japanese (EUC-JP): false
    iso2022_kr: false
    Korean (ISO-2022-KR): false
    Korean (EUC-KR): false
    gb2312: false
    Simplified Chinese (GB 2312): false
    gbk: false
    Chinese (GBK): false
    Chinese (GB 18030): false
    big5: false
    Traditional Chinese (BIG5): false
    big5hkscs: false
    Traditional Chinese (BIG5-HKSC): false
    cp1258: false
    Vietnamese (Windows-1258): false
    koi8-t: false
    Tajik (KOI8-T): false
    class `SelectEncodingsWidget`:
        def `__init__`:
            -top-heading-text: false
            Select all: Izberi vse
    '#selected-text-encodings': false
    def `encodings_model`:
        '; ': false
    def `main`:
        Select encodings visible in text encoding menus: Izberi kodiranja, ki bodo na voljo v menuju
    __main__: false
widgets/utils/filedialogs.py:
    open_filename_dialog_save: false
    open_filename_dialog: false
    RecentPath: false
    RecentPathsWidgetMixin: false
    RecentPathsWComboMixin: false
    stored_recent_paths_prepend: false
    OWUrlDropBase: false
    def `dialog_formats`:
        All readable files ({});;: Vse berljive datoteke ({});;
        *: false
        ' *': false
        ;;: false
        {} (*{}): false
    def `get_stored_default_recent_paths`:
        recent_paths: false
widgets/utils/graphicslayoutitem.py:
    SimpleLayoutItem: false
    scaled: false
    class `SimpleLayoutItem`:
        __anchorThis: false
        __anchorItem: false
        item: false
        __resizeContents: false
        __aspectMode: false
        __transform: false
        __scale: false
        def `__init__`:
            sizePolicy: false
widgets/utils/graphicsscene.py:
    GraphicsScene: false
    graphicsscene_help_event: false
widgets/utils/graphicstextlist.py:
    TextListWidget: false
    class `_FuncArray`:
        func: false
        length: false
    class `TextListBase`:
        def `__init__`:
            sizePolicy: false
widgets/utils/graphicsview.py:
    GraphicsWidgetView: false
    class `GraphicsWidgetView`:
        def `__init__`:
            Zoom in: Povečaj
            zoom-in-action: false
            Zoom out: Zmanjšaj
            zoom-out-action: false
            Actual Size: Izvirna velikost
            zoom-reset-action: false
            Zoom to fit: Prilagodi oknu
            zoom-to-fit-action: false
            setShortcutVisibleInContextMenu: false
    def `main`:
        def `context`:
            Aspect mode: false
            Ignore: false
            Keep: false
            Keep by expanding: false
    __main__: false
widgets/utils/headerview.py:
    class `HeaderView`:
        def `__init__`:
            QHeaderView: false
        def `initStyleOptionForIndex`:
            textElideMode: false
widgets/utils/image.py:
    def `qimage_from_array`:
        Wrong number of channels (need 3 or 4, got {c}: false
widgets/utils/intervalslider.py:
    class `IntervalSlider`:
        def `__init__`:
            set{opt[0].upper()}{opt[1:]}: false
        def `setOrientation`:
            IntervalSlider supports only horizontal direction: false
widgets/utils/itemdelegates.py:
    class `FixedFormatNumericColumnDelegate`:
        def `displayText`:
            f: false
        def `template`:
            X: false
            .: false
            -: false
        def `sizeHint`:
            X: false
widgets/utils/itemmodels.py:
    PyListModel: false
    VariableListModel: false
    PyListModelTooltip: false
    DomainModel: false
    AbstractSortTableModel: false
    PyTableModel: false
    TableModel: false
    ModelActionsWidget: false
    ListSingleSelectionModel: false
    def `_as_contiguous_range`:
        Non-contiguous range.: false
    class `AbstractSortTableModel`:
        def `mapFromTableRows`:
            Orange.widgets.utils.itemmodels.AbstractSortTableModel.mapFromSourceRows: false
        def `mapToTableRows`:
            Orange.widgets.utils.itemmodels.AbstractSortTableModel.mapToSourceRows: false
    class `PyTableModel`:
        def `data`:
            {:.{}{}}: false
            f: false
            e: false
        def `_check_sort_order`:
            Can't modify PyTableModel when it's sorted: false
    class `VariableListModel`:
        application/x-Orange-VariableList: false
        def `data`:
            None: Brez
        def `variable_labels_tooltip`:
            %s = %s: false
            <br/>Variable Labels:<br/>: <br/>Oznake spremenljivke:<br/>
            <br/>: false
        def `discrete_variable_tooltip`:
            '<b>%s</b><br/>Categorical with %i values: ': '<b>%s</b><br/>Kategorična, %i vrednost(i): '
            ', ': false
            %r: false
        def `time_variable_toltip`:
            <b>%s</b><br/>Time: <b>%s</b><br/>Časovna
        def `continuous_variable_toltip`:
            <b>%s</b><br/>Numeric: <b>%s</b><br/>Številska
        def `string_variable_tooltip`:
            <b>%s</b><br/>Text: <b>%s</b><br/>Besedilna
    class `DomainModel`:
        def `prevent_modification`:
            def `e`:
                {} can be modified only by calling 'set_domain': false
    <: false
    &lt;: false
    >: false
    &gt;: false
    class `TableModel`:
        Column: false
        var: false
        role: false
        background: false
        format: false
        Basket: false
        vars: false
        density: false
        def `__init__`:
            def `format_sparse`:
                ', ': false
                {}={}: false
            def `format_sparse_bool`:
                ', ': false
            len(sourcedata) > 2 ** 31 - 1: false
        def `columnSortKeyData`:
            Orange.widgets.utils.itemmodels.TableModel.sortColumnData: false
        def `headerData`:
            {...}: false
        def `_tooltip`:
            <b>%s</b>: false
            <br/>: false
            %s = %s: false
widgets/utils/listfilter.py:
    class `VariablesListItemView`:
        def `acceptsDropEvent`:
            _items: false
    class `VariableFilterProxyModel`:
        def `filter_accepts_variable`:
            ' ': false
            %s=%s: false
    def `variables_filter`:
        def `update_completer_model`:
            %s=%s: false
        def `update_completer_prefix`:
            ' ': false
        Filter the list of available variables.: Filtriraj seznam spremenljivk, ki so na voljo
        Filter: true
widgets/utils/matplotlib_export.py:
    scatterplot_code: false
    scene_code: false
widgets/utils/messages.py:
    UnboundMsg: false
    MessageGroup: false
    MessagesMixin: false
    WidgetMessagesMixin: false
widgets/utils/overlay.py:
    OverlayWidget: false
    MessageWidget: false
    MessageOverlayWidget: false
widgets/utils/owbasesql.py:
    class `OWBaseSql`:
        class `Outputs`:
            Data: Podatki
        class `Error`:
            {}: true
        def `_setup_gui`:
            Server: Strežnik
            {}:{}: true
            Database[/Schema]: Baza[/Shema]
            Database or optionally Database/Schema: Baza ali, opcijsko, Baza/Shema
            {}/{}: true
            Username: Uporabniško ime
            Password: Geslo
            Connect: Poveži
        def `_credential_manager`:
            'SQL Table: {}:{}': true
        def `_parse_host_port`:
            :: false
        def `_check_db_settings`:
            /: false
        def `on_connection_success`:
            Host: Strežnik
            Port: Vrata
            Database: Baza
            User name: Uporabniško ime
        def `on_connection_error`:
            \n: true
        def `send_report`:
            No database connection.: Ni povezave z bazo.
            Database: Baza
            Data: Podatki
widgets/utils/owlearnerwidget.py:
    class `OWBaseLearnerMeta`:
        def `__new__`:
            def `abstract_widget`:
                name: false
            def `copy_outputs`:
                Outputs: false
            LEARNER: false
            "'{}' must declare attribute LEARNER": false
    class `OWBaseLearner`:
        class `Error`:
            {}: false
            Fitting failed.\n{}: Učenje ni uspelo.\n{}
            Sparse data is not supported.: Redki podatki niso podprti.
            Out of memory.: Premalo pomnilnika.
        class `Warning`:
            Press Apply to submit changes.: Pritisnite Uveljavi za uveljavitev sprememb
        class `Information`:
            Ignoring default preprocessing.\n: Ignoriram privzete predprocesorje.\n
            'Default preprocessing, such as scaling, one-hot encoding and ': 'Privzeto predprocesiranje, kot je skaliranje, kodiranje z indikatorji in '
            'treatment of missing data, has been replaced with user-specified ': 'vstavljanje manjkajočih vrednosti, je zamenjano s predprocesorji, ki jih je '
            'preprocessors. Problems may occur if these are inadequate ': določil uporabnik. Če ti niso ustrezni za te podatke, bo modeliranje neuspešno.
            for the given data.: ""
        class `Inputs`:
            Data: Podatki
            Preprocessor: Predprocesor
        class `Outputs`:
            Learner: Učni algoritem
            Model: Model
            Classifier: Klasifikator
            Predictor: Prediktor
        def `__init__`:
            unconditional_apply: false
        def `set_data`:
            Data contains multiple target variables.\n: Podatki vsebujejo več ciljnih spremenljivk.\n
            Select a single one with the Select Columns widget.: Izberite eno od njih z gradnikom Izberi stolpce.
            Data has no target variable.\n: Podatki nimajo ciljne spremenljivke.\n
            Select one with the Select Columns widget.: Izberete jo lahko z gradnikom Izberi stolpce.
        def `handleNewSignals`:
            use_default_preprocessors: false
            preprocessors: false
        def `check_data`:
            Dataset is empty.: Tabela primerov je prazna
            Data contains a single target value.: Podatki vsebujejo eno samo ciljno vrednost.
            Data has no features to learn from.: Poatki nimajo spremenljivk za učenje.
        def `send_report`:
            Name: Ime
            Model parameters: Parametri modela
            Data: Podatki
        def `setup_layout`:
            Classification: Klasifikacija
            Regression: Regresija
        def `add_learner_name_widget`:
            learner_name: false
            Name: Ime
            The name will identify this model in other widgets: Ime, pod katerim je algoritem viden v sledečih gradnikih
        def `get_widget_description`:
            outputs: false
            inputs: false
widgets/utils/pathutils.py:
    class `PathItem`:
        def `from_dict`:
            PathItem: false
            type: false
            AbsPath: false
            path: false
            VarPath: false
            name: false
            relpath: false
            '{type_}: unknown type': false
        AbsPath: false
        VarPath: false
    class `AbsPath`:
        AbsPath: false
        path: false
        def `__new__`:
            nt: false
            /: false
        def `as_dict`:
            type: false
            AbsPath: false
            path: false
    class `VarPath`:
        VarPath: false
        name: false
        relpath: false
        def `__new__`:
            invalid relpath '{}': false
            nt: false
            /: false
        def `as_dict`:
            type: false
            VarPath: false
            name: false
            relpath: false
    def `prettyfypath`:
        ~/: false
        ~: false
widgets/utils/progressbar.py:
    ProgressBarMixin: false
    def `_warn_deprecated_arg`:
        "'processEvents' argument is deprecated.\n": false
        'It does nothing and will be removed in the future (passing it ': false
        will raise a TypeError).: false
widgets/utils/saveplot.py:
    save_plot: false
widgets/utils/settings.py:
    _T: false
    def `QSettings_readArray`:
        def `normalize_spec`:
            len(spec) != 2: false
widgets/utils/signals.py:
    Input: false
    Output: false
    InputSignal: false
    OutputSignal: false
    Single: false
    Multiple: false
    Default: false
    NonDefault: false
    Explicit: false
    Dynamic: false
    WidgetSignalsMixin: false
    AttributeList: false
widgets/utils/slidergraph.py:
    class `SliderGraph`:
        def `__init__`:
            bottom: false
            left: false
        def `_update_horizontal_lines`:
            {:.3f}: false
widgets/utils/spinbox.py:
    class `DoubleSpinBox`:
        def `__init__`:
            stepType: false
        def `textFromValue`:
            f: false
        def `__adaptiveDecimalStep`:
            1.01: false
        stepType: false
        def `sizeHint`:
            X: false
            .: false
            ' ': false
            -: false
widgets/utils/sql.py:
    Download (and sample if necessary) the SQL data first: false
    def `check_sql_input`:
        def `new_f`:
            download_sql_data: false
    def `check_sql_input_sequence`:
        def `new_f`:
            download_sql_data: false
widgets/utils/state_summary.py:
    def `format_variables_string`:
        —: true
        categorical: kategorična
        numeric: številska
        time: časovna
        string: besedilna
        {i} {j}: {i} {plsi(i, dict(kategorična="kategorična|kategorični|kategorične|kategoričnih", številska="številska|številski|številske|številskih", besedilna="besedilna|besedilni|besedilne|besedilnih", časovna="časovna|časovni|časovne|časovnih")[j])}
        {sum(counts)} ({", ".join(var_string)}): false
        {counts[0]} {attrs[0]}: {counts[0]} {plsi(counts[0], dict(kategorična="kategorična|kategorični|kategorične|kategoričnih", številska="številska|številski|številske|številskih", besedilna="besedilna|besedilni|besedilne|besedilnih", časovna="časovna|časovni|časovne|časovnih")[attrs[0]])}
    def `format_summary_details`:
        name: false
        untitled: nepoimenovano
        '{len(data):n} {pl(len(data), "instance")}, ': '{len(data):n} {plsi(len(data), "primer")}, '
        {n_features} {pl(n_features, "variable")}: {n_features} {plsi(n_features, "spremenljivka")}
        'Features: {features}{features_missing}': Spremenljivke: {features} {features_missing}
        'Target: {targets}': Ciljna spremenljivka: {targets}
        'Metas: {metas}': Meta: {metas}
        '{name}: ': true
        'Table with ': 'Tabela: '
        {basic}\n{features}\n{targets}: true
        \n{metas}: true
        '<b><u>{escape(name)}</u></b>: {basic}': true
        Table with {basic}: Tabela: {basic}
        <br/>: false
    def `missing_values`:
        ' ({value*100:.1f}% missing values)': ({value*100:.1f}% manjkajočih vrednosti)
        ' (no missing values)': (brez manjkajočih vrednosti)
    def `format_multiple_summaries`:
        input: vhodu
        def `new_line`:
            \n: false
            <br>: false
        No data on {type_io}.: Ni podatkov na {type_io}
        {name}:<br>{details}: false
        <hr>: false
    def `_name_of`:
        name: false
    def `_nobr`:
        <nobr>{s}</nobr>: false
    def `summarize_table`:
        length: false
        ?: false
        missing: false
        domain: false
        data available, but not prepared yet: false
    def `summarize_matrix`:
        {w}×{h}: false
        {w}×{h} distance matrix: {w}×{h} matrika razdalj
    def `summarize_results`:
        {nmethods}×{ninstances}: false
        "{nmethods} {pl(nmethods, 'method')} ": "{nmethods} {plsi(nmethods, 'metoda')} "
        on {ninstances} test {pl(ninstances, 'instance')}: na {ninstances} {plsi(ninstances, 'testnem primeru|testnih primerih|testnih primerih')}
    def `summarize_attributes`:
        empty list: prazen seznam
        ', ': false
        ' and {n - 2} others': ' in še {n - 2} {plsi(n - 2, "spremenljivka|spremenljivki|druge spremenljivke|drugih spremenljivk")}'
    def `summarize_preprocessor`:
        <br/>: false
        {_name_of(preprocessor)} (empty): (brez predprocesorjev)
        🄿: false
    &#9924;: false
    🄼: false
    🄻: false
    🅂: false
widgets/utils/stdpaths.py:
    {__name__} module is deprecated.: false
widgets/utils/stickygraphicsview.py:
    StickyGraphicsView: false
    class `_OverlayWidget`:
        def `__init__`:
            sticky-view-shadow: false
        def `changeEvent`:
            sticky-view-shadow: false
    class `StickyGraphicsView`:
        def `setupViewport`:
            sticky-header-view: false
            sticky-footer-view: false
            sticky-header-overlay-container: false
            sticky-footer-overlay-container: false
    def `main`:
        Zoom in: false
        Zoom out: false
        Reset: false
    __main__: false
widgets/utils/tableview.py:
    def `table_view_compact`:
        X: false
    class `TableView`:
        def `__init__`:
            horizontalScrollMode: false
            verticalScrollMode: false
    def `table_selection_to_mime_data`:
        excel: false
        utf-8: false
        excel-tab: false
        text/csv: false
        text/tab-separated-values: false
        text/plain: false
    def `lines_to_csv_string`:
        excel: false
widgets/utils/textimport.py:
    ColumnType: false
    RowSpec: false
    CSVOptionsWidget: false
    CSVImportWidget: false
    _A: false
    _B: false
    class `Dialect`:
        def `__init__`:
            \r\n: false
        def `__repr__`:
            ', ': false
            {!r}: false
            Dialect(: false
            ): false
    class `ColumnType`:
        Skip: Preskoči
        Auto: true
        Numeric: Numerično
        Categorical: Kategorično
        Text: Besedilo
        Time: Čas
    class `LineEdit`:
        def `sizeHint`:
            X: false
    class `CSVOptionsWidget`:
        Tab: Tabulator
        \t: false
        Comma: Vejica
        ,: false
        Semicolon: Podpičje
        ;: false
        Space: Presledek
        ' ': false
        def `__init__`:
            ,: true
            '|': true
            \": true
            selectedEncoding: false
            utf-8: false
            encoding-combo-box: false
            Select file text encoding: Kodiranje datoteke
            delimiter-combo-box: false
            Select cell delimiter character.: Ločilo med celicami tabele
            Other: Drugo
            .: true
            custom-delimiter-edit: false
            quote-edit-combo-box: false
            "'": true
            Encoding: 'Kodiranje: '
            Cell delimiter: 'Ločilo med celicami: '
            Quote character: 'Narekovaj (za označevanje celic): '
        def `setSelectedEncoding`:
            separator: false
        def `encoding`:
            latin-1: latin-2
        def `__show_encodings_widget`:
            -encoding-selection-tool-window: false
            Customize Encodings List: Izberi oblike kodiranja
        def `__set_visible_codecs`:
            ascii: false
            Customize Encodings List...: Izberi oblike kodiranja...
    class `CSVImportWidget`:
        def `__init__`:
            X: true
            grouping-separator-combo-box: false
            Thousands group separator: Ločilo med tisočicami
            None: Brez
            No separator: Ni ločila
            .: false
            ,: false
            Space: Presledek
            ' ': false
            "'": false
            (\.|,| |')?: false
            decimal-separator-combo-box: false
            Decimal separator: Ločilo za decimalni del
            (\.|,): false
            Grouping:: 'Skupine: '
            Decimal:: 'Decimalni del: '
            Number separators:: 'Ločila med števkami: '
            column-type-edit-combo-box: false
            Auto: (prepoznaj)
            'The type will be determined automatically based ': 'Tip bo prepoznan samodejno '
            on column contents.: glede na vsebino
            Numeric: Številka
            Categorical: Kategorije
            Text: Besedilo
            Datetime: Datum/Ura
            separator: false
            Ignore: Izpusti
            The column will not be loaded: Stolpca ni mogoče naložiti
            Column type: Vrsta podatka
            -error-overlay: false
            -error-text-label: false
        def `numbersFormat`:
            group: false
            decimal: false
        def `__decimal_sep_activated`:
            .: false
            ,: false
        def `__group_sep_activated`:
            .: false
            ,: false
        def `__resetPreview`:
            surrogateescape: false
        def `__run_row_menu`:
            Skip: Izpusti
            Header: Glava
        def `__run_type_columns_menu`:
            separator: false
        def `__setColumnType`:
            group: false
            decimal: false
    def `is_surrogate_escaped`:
        \udc80: false
        \udcff: false
    class `PreviewItemDelegate`:
        def `initStyleOption`:
            ...: false
    def `icon_for_column_type`:
        N: false
        red: false
        C: false
        green: false
        S: false
        black: false
        T: false
        deepskyblue: false
    class `ColumnValidateItemDelegate`:
        def `validate`:
            NA: false
            Na: false
            na: false
            n/a: false
            N/A: false
            ?: false
            .: false
    def `number_parser`:
        .: false
    def `format_exception_csv`:
        'CSV parsing error: ': 'Napaka pri branju: '
    '\
 ,A,B,C,D
1,a,1,1,
2,b,2,2,
3,c,3,3,
4,d,4,4,,\
': false
    def `main`:
        rb: false
    __main__: false
widgets/utils/webview.py:
    WebviewWidget: false
widgets/utils/widgetpreview.py:
    WidgetPreview: false
widgets/utils/localization/__init__.py:
    pl: false
widgets/utils/plot/owpalette.py:
    create_palette: false
    OWPalette: false
widgets/utils/plot/owplotgui.py:
    variables_selection: false
    OrientedWidget: false
    OWToolbar: false
    StateButtonContainer: false
    OWAction: false
    OWButton: false
    OWPlotGUI: false
    class `VariableSelectionModel`:
        def `mimeData`:
            'see properties: item_index': false
            item_index: false
        def `dropMimeData`:
            item_index: false
    class `VariablesDelegate`:
        def `paint`:
            ' Add ': ' Dodaj '
            ' Remove ': ' Odstrani '
    class `OWAction`:
        def `__init__`:
            ../../icons: false
            .png: false
    class `OWPlotGUI`:
        def `__init__`:
            (Same color): (Enaka barva)
            (Same shape): (Enaka oblika)
            (Same size): (Enaka velikost)
            (No labels): (Brez oznak)
        Zoom: Povečava
        state: false
        Dlg_zoom: false
        Reset zoom: Ponastavi povečavo
        Dlg_zoom_reset: false
        Pan: Pomik
        Dlg_pan_hand: false
        Select: Izberi
        Dlg_arrow: false
        Add to selection: Dodaj k izboru
        selection_behavior: false
        Dlg_select_add: false
        Remove from selection: Odstrani iz izbora
        Dlg_select_remove: false
        Toggle selection: Preklopi izbor
        Dlg_select_toggle: false
        Replace selection: Zamenjaj izbor
        Send selection: Pošlji izbor
        send_selection: false
        Dlg_send: false
        Clear selection: Počisti izbor
        clear_selection: false
        Dlg_clear: false
        ShufflePoints: Premešaj točke
        shuffle_points: false
        Dlg_sort: false
        Animate plot: Animiraj sliko
        animate_plot: false
        update_animations: false
        Animate points: Animiraj točke
        animate_points: false
        Antialias plot: Zmehčaj sliko
        antialias_plot: false
        update_antialiasing: false
        Antialias points: Zmehčaj točke
        antialias_points: false
        Antialias lines: Zmehčaj črte
        antialias_lines: false
        Disable effects for large datasets: Izključi grafične učinke za velike podatke
        auto_adjust_performance: false
        update_performance: false
        def `antialiasing_check_box`:
            use_antialiasing: false
            Use antialiasing: Uporabi mehčanje
            update_antialiasing: false
        def `jitter_size_slider`:
            'Jittering: ': 'Tresenje: '
            jitter_size: false
            jitter_sizes: false
        def `jitter_numeric_check_box`:
            jitter_continuous: false
            Jitter numeric values: Pretresi številske vrednosti
            update_jittering: false
        def `show_legend_check_box`:
            show_legend: false
            Show legend: Pokaži legendo
            update_legend_visibility: false
        def `tooltip_shows_all_check_box`:
            tooltip_shows_all: false
            Show all data on mouse hover: Ob prehodu z miško pokaži vse podatke
        def `class_density_check_box`:
            class_density: false
            Show color regions: Pokaži barvna področja
        def `regression_line_check_box`:
            show_reg_line: false
            Show regression line: Pokaži regresijsko premico
        def `label_only_selected_check_box`:
            label_only_selected: false
            Label only selection and subset: Označi samo izbor in podmnožico
        def `filled_symbols_check_box`:
            show_filled_symbols: false
            Show filled symbols: Pokaži polne simbole
            update_filled_symbols: false
        def `grid_lines_check_box`:
            show_grid: false
            Show gridlines: Pokaži mrežo
            update_grid_visibility: false
        def `animations_check_box`:
            use_animations: false
            Use animations: Animiraj
            update_animations: false
        def `point_size_slider`:
            'Symbol size: ': 'Velikost točk: '
            point_width: false
            sizes_changed: false
        def `alpha_value_slider`:
            'Opacity: ': 'Neprosojnost: '
            alpha_value: false
            colors_changed: false
        def `color_value_combo`:
            'Color: ': 'Barva: '
            attr_color: false
            colors_changed: false
        def `shape_value_combo`:
            'Shape: ': 'Oblika: '
            attr_shape: false
            shapes_changed: false
        def `size_value_combo`:
            'Size: ': 'Velikost: '
            attr_size: false
            sizes_changed: false
        def `label_value_combo`:
            'Label: ': 'Oznaka: '
            attr_label: false
            labels_changed: false
        def `point_properties_box`:
            Attributes: Izgled
        def `zoom_select_toolbar`:
            Zoom / Select: Povečava / Izbor
        def `theme_combo_box`:
            theme_name: false
            Theme: Tema
            Default: Privzeta
            Light: Svetla
            Dark: Temna
        def `box_zoom_select`:
            Zoom/Select: Povečava/Izbor
widgets/utils/plot/owplotgui_obsolete.py:
    class `AddVariablesDialog`:
        def `__init__`:
            Hidden Axes: false
            Add: false
            Cancel: false
    class `VariablesSelection`:
        def `__call__`:
            sizePolicy: false
            selectionMode: false
            dragEnabled: false
            defaultDropAction: false
            dragDropOverwriteMode: false
            dragDropMode: false
            Displayed Axes: false
            Delete: false
            +: false
            Add new class label: false
            MINUS SIGN: false
            Remove selected class label: false
    class `OWAction`:
        def `__init__`:
            ../../icons: false
            .png: false
    class `OWPlotGUI`:
        def `__init__`:
            (Same color): false
            (Same shape): false
            (Same size): false
            (No labels): false
        Overlap: false
        Zoom: false
        state: false
        Dlg_zoom: false
        Reset zoom: false
        Dlg_zoom_reset: false
        Pan: false
        Dlg_pan_hand: false
        Select: false
        Dlg_arrow: false
        Add to selection: false
        selection_behavior: false
        Dlg_select_add: false
        Remove from selection: false
        Dlg_select_remove: false
        Toggle selection: false
        Dlg_select_toggle: false
        Replace selection: false
        Send selection: false
        send_selection: false
        Dlg_send: false
        Clear selection: false
        clear_selection: false
        Dlg_clear: false
        ShufflePoints: false
        shuffle_points: false
        Dlg_sort: false
        Animate plot: false
        animate_plot: false
        update_animations: false
        Animate points: false
        animate_points: false
        Antialias plot: false
        antialias_plot: false
        update_antialiasing: false
        Antialias points: false
        antialias_points: false
        Antialias lines: false
        antialias_lines: false
        Disable effects for large datasets: false
        auto_adjust_performance: false
        update_performance: false
        def `antialiasing_check_box`:
            use_antialiasing: false
            Use antialiasing: false
            update_antialiasing: false
        def `jitter_size_slider`:
            jitter_sizes: false
            jitter_size: false
            'Jittering: ': false
            None: false
            %.1f %%: false
            %d %%: false
        def `jitter_numeric_check_box`:
            jitter_continuous: false
            Jitter numeric values: false
        def `show_legend_check_box`:
            show_legend: false
            Show legend: false
            update_legend: false
        def `tooltip_shows_all_check_box`:
            tooltip_shows_all: false
            Show all data on mouse hover: false
            cb_tooltip_shows_all: false
        def `class_density_check_box`:
            class_density: false
            Show class density: false
        def `regression_line_check_box`:
            show_reg_line: false
            Show regression line: false
        def `label_only_selected_check_box`:
            label_only_selected: false
            Label only selected points: false
        def `filled_symbols_check_box`:
            show_filled_symbols: false
            Show filled symbols: false
            update_filled_symbols: false
        def `grid_lines_check_box`:
            show_grid: false
            Show gridlines: false
            update_grid: false
        def `animations_check_box`:
            use_animations: false
            Use animations: false
            update_animations: false
        def `point_size_slider`:
            point_width: false
            'Symbol size:   ': false
            update_point_size: false
        def `alpha_value_slider`:
            alpha_value: false
            'Opacity: ': false
            update_alpha_value: false
        def `color_value_combo`:
            attr_color: false
            'Color: ': false
            update_colors: false
        def `shape_value_combo`:
            attr_shape: false
            'Shape: ': false
            update_shapes: false
        def `size_value_combo`:
            attr_size: false
            'Size: ': false
            update_sizes: false
        def `label_value_combo`:
            attr_label: false
            'Label: ': false
            update_labels: false
        def `point_properties_box`:
            Points: false
        def `plot_properties_box`:
            Plot Properties: false
        def `zoom_select_toolbar`:
            Zoom / Select: false
        def `effects_box`:
            Visual effects: false
        def `theme_combo_box`:
            theme_name: false
            Theme: false
            Default: false
            Light: false
            Dark: false
widgets/utils/save/owsavebase.py:
    ~{os.sep}: false
    class `OWSaveBase`:
        class `Information`:
            Empty input; nothing was saved.: Ni podatkov.
        class `Warning`:
            Auto save disabled.\n: Samodejno shranjevanje je onemogočeno.\n
            'Due to security reasons auto save is only restored for paths ': 'Zaradi varnostnih razlogov se samodejno shranjevanje obnovi samo za poti, '
            'that are in the same directory as the workflow file or in a ': 'ki so v istem imeniku kot delotok ali v '
            subtree of that directory.: poddrevesu tega imenika.
        class `Error`:
            File name is not set.: Ime datoteke ni določeno.
            File format is unsupported.\n{}: Format datoteke ni podprt.\n{}
            {}: false
        def `__init__`:
            auto_save: false
            Autosave when receiving new data: Samodejno shrani ob prejemu novih podatkov
            Save as {self.stored_name}: Shrani kot {self.stored_name}
            Save: Shrani
            Save as ...: Shrani kot ...
        def `last_dir`:
            basedir: false
            ..: false
        def `_abs_path_from_setting`:
            basedir: false
        def `workflowEnvChanged`:
            basedir: false
        def `save_file_as`:
            Save as {self.stored_name}: Shrani kot {self.stored_name}
        def `_replace_extension`:
            .: false
        def `_extension_from_filter`:
            .*\(\*?(\..*)\)$: false
        def `migrate_settings`:
            last_dir: false
            stored_path: false
            filename: false
            stored_name: false
        darwin: false
        win32: false
        def `get_save_filename`:
            Save File: Shrani datoteko
            ;;: false
widgets/utils/tests/concurrent_example.py:
    def `run`:
        Calculating...: false
    class `OWConcurrentWidget`:
        Projection: false
        def `_add_controls`:
            param: false
            Parameter:: false
            Param A: false
            Param B: false
            Start: false
        def `_toggle_run`:
            Resume: false
        def `_run`:
            Stop: false
        def `on_done`:
            Start: false
    __main__: false
    iris: false
widgets/visualize/__init__.py:
    Visualize: Vizualizacija
    orange.widgets.visualize: false
    Data visualization: Vizualizacija podatkov
    '#FFB7B1': false
    icons/Category-Visualize.svg: false
widgets/visualize/owbarplot.py:
    class `ParameterSetter`:
        Gridlines: Mreža
        Show: Pokaži
        Bottom axis: Spodnja os
        Group axis: Os skupin
        Vertical ticks: Navpične oznake
        def `update_setters`:
            def `update_bottom_axis`:
                bottom: false
        def `axis_items`:
            item: false
    class `BarPlotGraph`:
        def `__init__`:
            bottom: false
            left: false
        def `update_axes`:
            left: false
            bottom: false
        def `reset_view`:
            height: false
        def `select_by_rectangle`:
            x: false
            height: false
        def `__get_index_at`:
            height: false
        def `__select_bars`:
            height: false
    class `OWBarPlot`:
        Bar Plot: Palice
        Visualizes comparisons among categorical variables.: Vizualna primerjava kategoričnih spremenljivk.
        icons/BarPlot.svg: false
        bar plot, chart: bar plot, chart, stolpčni diagram, grafikon
        class `Inputs`:
            Data: Podatki
            Data Subset: Podmnožica podatkov
        class `Outputs`:
            Selected Data: Izbrani podatki
        graph.plotItem: false
        class `Error`:
            Plotting requires a numeric feature.: Podatki ne vsebujejo številskih spremenljivk.
        class `Information`:
            Data has too many instances. Only first {}: Podatki vsebujejo preveč primerov. Kažem samo prvih {}.
            ' are shown.': ""
        Enumeration: Zaporedne številke
        def `_add_controls`:
            selected_var: false
            Values:: Vrednosti:
            None: (Brez)
            group_var: false
            Group by:: Skupine:
            annot_var: false
            Annotations:: Oznake:
            (Same color): (Enaka barva)
            color_var: false
            Color:: Barva:
            auto_commit: false
        def `grouped_indices`:
            mergesort: false
        def `init_attr_values`:
            selected_var: false
            group_var: false
            annot_var: false
            color_var: false
        def `get_tooltip`:
            <br/>: false
            {} = {}: false
            <b>{}</b><br/><br/>{}: false
    __main__: false
    iris: false
widgets/visualize/owboxplot.py:
    ContDataRange: false
    low: false
    high: false
    group_value: false
    DiscDataRange: false
    value: false
    class `BoxData`:
        def `__init__`:
            midpoint: false
    class `OWBoxPlot`:
        Box Plot: Škatla z brki
        Visualize the distribution of feature values in a box plot.: Prikaži porazdelitev vrednosti spremenljivke v škatli z brki.
        icons/BoxPlot.svg: false
        box plot, whisker: box plot, whisker
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Selected Data: Izbrani podatki
        class `Warning`:
            Data contains no categorical or numeric variables: Podatki ne vsebujejo kategoričnih ali številskih spremenljivk.
        median: false
        mean: false
        box_scene: false
        def `__init__`:
            Variable: Spremenljivka
            order_by_importance: false
            Order by relevance to subgroups: Uredi glede na različnost po skupinah
            Order by 𝜒² or ANOVA over the subgroups: Uredi glede na vrednost 𝜒² ali ANOVA med skupinami
            None: Brez
            Subgroups: Skupine
            order_grouping_by_importance: false
            Order by relevance to variable: Uredi glede na pomembnost spremenljivke
            Order by 𝜒² or ANOVA over the variable values: Uredi glede na vrednost 𝜒² ali ANOVA za vrednosti spremenljivke
            Display: Prikaz
            show_annotations: false
            Annotate: Oznake
            compare: false
            No comparison: Brez primerjanja
            Compare medians: Primerjaj srednje vrednosti
            Compare means: Primerjaj povprečja
            stretched: false
            Stretch bars: Raztegni črte
            show_labels: false
            Show box labels: Pokaži oznake črt
            sort_freqs: false
            Sort by subgroup frequencies: Uredi po pogostosti skupin
        def `reset_attrs`:
            hidden: false
        def `reset_groups`:
            hidden: false
        def `compute_box_data`:
            missing '{self.group_var.name}': (neznana vrednost)
        def `_display_changed_disc`:
            {int(sum(cont))}: false
        def `_compute_tests_cont`:
            'At least one group has just one instance, ': 'Vsaj ena skupina ima zgolj en primer, '
            cannot compute significance: zato ne morem izračunati pomembnosti.
            "Student's t: {t:.3f} (p={p:.3f}, N={n})": Studentov t-test: {t:.3f} (p={p:.3f}, N={n})
            'ANOVA: {F:.3f} (p={p:.3f}, N={n})': true
        def `_compute_tests_disc`:
            'χ²: {chi:.2f} (p={p:.3f}, dof={dof})': true
        def `mean_label`:
            ' \u00b1 ': true
            %.*f: true
            ': ': true
        def `draw_axis`:
            ?: true
        def `strudel`:
            missing '{attr.name}': (neznana vrednost)
            add_lpad: false
            add_rpad: false
            '{value}: {100 * freq / total:.2f}%': true
            '{value}: ({int(freq)})': true
        def `_show_posthoc`:
            median: false
            mean: false
        def `send_report`:
            "Box plot for attribute '{self.attribute.name}' ": "Škatla z brki za spremenljivko '{self.attribute.name}' "
            grouped by '{self.group_var.name}': urejeno po '{self.group_var.name}'
    __main__: false
    heart_disease.tab: false
widgets/visualize/owdistributions.py:
    class `ScatterPlotItem`:
        def `paint`:
            pxMode: false
            antialias: false
    class `AshCurve`:
        def `pdf`:
            same: false
    class `ElidedAxisNoUnits`:
        def `labelString`:
            ;: true
            '{k}: {v}': true
            <span style='{style}'>{self.labelText}</span>: false
    class `OWDistributions`:
        Distributions: Porazdelitve
        Display value distributions of a data feature in a graph.: Pokaži porazdelitev vrednosti spremenljivke.
        icons/Distribution.svg: false
        distributions, histogram: distributions, histogram
        class `Inputs`:
            Data: Podatki
            Set the input dataset: Določi vhodne podatke
        class `Outputs`:
            Selected Data: Izbrani podatki
            Histogram Data: Podatki o porazdelitvi
        class `Error`:
            Variable '{}' does not have any defined values: Spremenljivke '{}' nima definiranih vrednosti.
            No data instances with '{}' and '{}' defined: Nobena vrstica nima znanih vrednosti za '{}' in '{}'.
        class `Warning`:
            Data instances with missing values are ignored: Podatki z neznanimi vrednostmi so izločeni.
        plot: false
        None: (brez)
        Normal: Normalna
        loc: false
        scale: false
        μ: true
        σ: true
        Beta: true
        a: false
        b: false
        α: true
        β: true
        -loc: false
        -scale: false
        Gamma: Gama
        Rayleigh: true
        Pareto: true
        Exponential: Eksponentna
        λ: true
        Kernel density: Jedra
        def `__init__`:
            var: false
            Variable: Spremenljivka
            sort_by_freq: false
            Sort categories by frequency: Uredi kategorije po velikosti
            Distribution: Porazdelitev
            fitted_distribution: false
            Fitted distribution: Prilagodi porazdelitev
            number_of_bins: false
            Bin width: Širina koša
            kde_smoothing: false
            Smoothing: Glajenje
            hide_bars: false
            Hide bars: Skrij stolpce
            Columns: Stolpci
            cvar: false
            Split by: Razdeli po
            (None): (Ne deli)
            stacked_columns: false
            Stack columns: Naloži stolpce
            show_probs: false
            Show probabilities: Pokaži verjetnosti
            cumulative_distr: false
            Show cumulative distribution: Pokaži kumulativno porazdelitev
        def `_setup_plots`:
            def `add_new_plot`:
                right: false
            bottom: false
            left: false
        def `_on_show_probabilities_changed`:
            Fitted probability: Prilagojena verjetnost
            Chosen distribution is used to compute Bayesian probabilities: Izbrana porazdelitev je uporabljena za izračun Bayesovkih verjenosti
            Fitted distribution: Prilagojena porazdelitev
        def `_set_axis_names`:
            bottom: false
            left: false
            Probability of '{self.cvar.name}' at given '{self.var.name}': Verjetnost '{self.cvar.name}' pri podani '{self.var.name}'
            Frequency: Pogostost
        def `_disc_plot`:
            bottom: false
            <p style='white-space:pre;'>: true
            '<b>{escape(desc)}</b>: {int(freq)} ': true
            '({100 * freq / len(self.valid_data):.2f} %) ': true
        def `_disc_split_plot`:
            bottom: false
        def `_cont_plot`:
            <p style='white-space:pre;'>: true
            '<b>{escape(desc)}</b>: ': true
            {freq} ({100 * freq / total:.2f} %)</p>: true
        def `_set_cont_ticks`:
            bottom: false
        def `_fit_approximation`:
            def `join_pars`:
                ', ': true
                {sname}={strv(val)}: true
            def `str_params`:
                -: true
                ' ({par})': true
        def `_set_curve_brushes`:
            pen: false
        def `_split_tooltip`:
            'white-space:pre; text-align: right;': true
            "style='{cs} padding-left: 1em'": true
            style='{cs}': false
            "<table style='border-collapse: collapse'>": true
            <tr><th {s}>{escape(valname)}:</th>: true
            <td {snp}><b>{int(tot_group)}</b></td>: true
            <td/>: true
            <td {s}><b>{100 * tot_group / total:.2f} %</b></td></tr>: true
            <tr><td/><td/><td {s}>(in group)</td><td {s}>(overall)</td>: true
            </tr>: true
            <tr>: true
            <th {s}>{value}:</th>: true
            <td {snp}><b>{int(freq)}</b></td>: true
            <td {s}>{100 * freq / div_group:.2f} %</td>: true
            <td {s}>{100 * freq / total:.2f} %</td>: true
            </table>: true
        def `_display_legend`:
            s: false
            ' ({desc})': true
        def `str_int`:
            {var.name} < {sx1}: true
            {var.name} = {sx0}: true
            {var.name} ≥ {sx0}: true
            {sx0} ≤ {var.name} < {sx1}: true
        def `show_selection`:
            <p style='white-space:pre;'>: true
            '<b>{escape(valname)}</b>: ': true
            {inside} ({100 * inside / total:.2f} %): true
        def `migrate_context`:
            selection: false
            selected_bars: false
        def `apply`:
            Bin: Koš
        def `_get_histogram_table`:
            Bin: Koš
            Count: Število
        def `_get_cont_baritem_indices`:
            ignore: false
        def `send_report`:
            Cummulative distribution of '{self.var.name}': Kumulativna porazdelitev '{self.var.name}'
            Distribution of '{self.var.name}': Porazdelitev '{self.var.name}'
            " with columns split by '{self.cvar.name}'": " s stolpci, razdeljenimi po '{self.cvar.name}'"
    __main__: false
    heart_disease.tab: false
widgets/visualize/owfreeviz.py:
    def `run_freeviz`:
        Calculating...: Računam...
    class `InitType`:
        def `items`:
            Circular: Krožna
            Random: Naključna
    class `OWFreeViz`:
        FreeViz: Prostoskop
        Displays FreeViz projection: Pokaže projekcijo s Prostoskopom.
        icons/Freeviz.svg: false
        freeviz, viz: freeviz, viz
        class `Error`:
            Data must have a target variable.: Podatki morajo imeti ciljno spremenljivko.
            Data must have a single target variable.: Podatki morajo imeti eno ciljno spremenljivko.
            Target variable must have at least two unique values.: Ciljna spremenljivka mora imeti vsaj dve različni vrednosti.
            Number of features exceeds the number of instances.: Število spremenljivk presega število primerov.
            Data is too large.: Podatkov je preveč.
            All data columns are constant.: Vsi stolpci so konstantni.
            At least two features are required.: Potrebni sta vsaj dve spremenljivki.
        class `Warning`:
            Categorical features with more than: Kategorične spremenljivke z več kot dvema
            ' two values are not shown.': ' vrednostima niso prikazane.'
        def `_add_controls`:
            Hide radius:: Skriti krog:
            hide_radius: false
        def `__add_controls_start_box`:
            Optimize: Izris
            initialization: false
            Initialization:: Začetna pozicija:
            balance: false
            Gravity: Gravitacija
            gravity_index: false
            Start: Začni
        def `_toggle_run`:
            Resume: Nadaljuj
        def `_run`:
            Stop: Stoj
        def `on_done`:
            Start: Začni
        def `on_exception`:
            Start: Začni
        def `enable_controls`:
            Start: Začni
        def `migrate_settings`:
            radius: false
            graph: false
            hide_radius: false
        def `migrate_context`:
            attr_color: false
            graph: false
            attr_size: false
            attr_shape: false
            attr_label: false
    __main__: false
    zoo: false
widgets/visualize/owheatmap.py:
    def `split_domain`:
        N/A: NN
    None: Brez
    No clustering: Brez gručenja
    Clustering: Gručenje
    Apply hierarchical clustering: Uporabi hierarhično gručenje
    Clustering (opt. ordering): Gručenje z urejanjem
    'Apply hierarchical clustering with optimal leaf ': Uporabi hierarhično gručenje z urejanjem listov.
    ordering.: ""
    Top: Zgoraj
    Bottom: Spodaj
    Top and Bottom: Zgoraj in spodaj
    class `OWHeatMap`:
        Heat Map: Topla greda
        Plot a data matrix heatmap.: Pokaži podatke v topli gredi.
        icons/Heatmap.svg: false
        heat map: heat map
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Selected Data: Izbrani podatki
        scene: false
        class `Information`:
            Data has been sampled: Podatki so vzorčeni.
            Categorical features are ignored.: Kategoričnih spremenljivk ne kažem.
            {}: false
            Showing this data may require a lot of memory: Prikaz teh podatkov lahko zahteva veliko pomnilnika.
        class `Error`:
            No numeric features: Ni številskih spremenljivk.
            Not enough features for column clustering: Ni dovolj spremenljivk za gručenje stolpcev.
            Not enough instances for clustering: Ni dovolj podatkov za gručenje vrstic.
            Not enough instances for k-means merging: Ni dovolj podatkov za združevanje.
            Not enough memory to show this data: Premalo pomnilnika za prikaz podatkov.
        class `Warning`:
            Empty clusters were removed: Prazne gruče so odstranjene.
        'For data with a meaningful mid-point, ': 'Za podatke, ki imajo nevtralno, sredinsko vrednost '
        choose one of diverging palettes.: izberite divergentno barvno paleto.
        diverging_palette: false
        def `__init__`:
            Color: Barva
            Merge: Združevanje
            merge_kmeans: false
            Merge by k-means: Združi v skupine (k-means)
            merge_kmeans_k: false
            Clusters:: Skupin:
            Clustering: Gručenje
            row_clustering: false
            col_clustering: false
            Rows:: Vrstice:
            Columns:: Stolpci:
            Split By: Razdelitev
            (None): (Brez)
            Split the heatmap vertically by a categorical column: Navpična delitev glede na kategorično spremenljivko
            split_by_var: false
            Split the heatmap horizontally by column annotation: Vodoravna delitev glede na oznake stolpcev
            split_columns_var: false
            Annotation && Legends: Oznake in legenda
            legend: false
            Show legend: Pokaži legendo
            averages: false
            Stripes with averages: Trak s poprečji
            Row Annotations: Oznake vrstic
            annotation_var: false
            annotation_color_var: false
            Text: Besedilo
            Column annotations: Oznake stolpcev
            column_annotation_color_var: false
            column_label_pos: false
            Position: Položaj
            keep_aspect: false
            Keep aspect ratio: Ohrani razmerje
            Resize: Povečava
            auto_commit: false
            Increase Font: Povečaj pisavo
            ctrl+>: true
            Decrease Font: Zmanjšaj pisavo
            ctrl+<: true
            setShortcutVisibleInContextMenu: false
        def `set_dataset`:
            hidden: false
        def `_make_parts`:
            N/A: NN
        def `cluster_rows`:
            Parts: false
        def `cluster_columns`:
            Parts: false
        def `construct_heatmaps`:
            Parts: false
        def `construct_heatmaps_scene`:
            Parts: false
            _T: false
        def `__update_clustering_enable_state`:
            Parts: false
            'Row cluster ordering was disabled due to the ': Urejanje gruč vrstic
            estimated runtime cost: ' je ustavljeno, ker bi zahtevalo preveč časa.'
            'Row clustering was was disabled due to the ': Gručenje vrstic
            'Column cluster ordering was disabled due to ': Urejanje gruč stolpcev
            'Column clustering was disabled due to the ': Gručenje stolpcev
        def `update_annotations`:
            ', ': false
            ' ({} more)': ' (in še {})'
        def `_on_view_context_menu`:
            Keep aspect ratio: false
        def `send_report`:
            Columns:: Stolpci
            Clustering: Gručenje
            No sorting: Brez urejanja
            Rows:: Vrstice
            Split:: Delitev
            Row annotation: Oznake vrstic
        def `migrate_settings`:
            row_clustering: false
            col_clustering: false
            row_clustering_method: false
            col_clustering_method: false
    def `join_elided`:
        ...: true
    def `colorize`:
        N/A: NN
    def `aggregate`:
        ', ': false
        ' ({} more)': ' (in še {})'
    def `agg_join_str`:
        ' ({} more)': ' (in še {})'
        ', ': false
    _T: false
    __main__: false
    brown-selected.tab: false
widgets/visualize/owlinearprojection.py:
    class `OWLinProjGraph`:
        def `update_anchors`:
            <b>{label}</b>: false
            ...: true
    Placement: false
    class `OWLinearProjection`:
        Linear Projection: Linearna projekcija
        'A multi-axis projection of data onto ': 'Projekcija večdimenzionalnih podatkov '
        a two-dimensional plane.: v dve dimenziji.
        icons/LinearProjection.svg: false
        linear projection: linear projection
        Circular Placement: Krožna postavitev
        Linear Discriminant Analysis: Linearna diskriminantna analiza
        Principal Component Analysis: Analiza osnovnih komponent
        class `Error`:
            Plotting requires numeric features: Podatki ne vsebujejo številskih spremenljivk.
        class `Information`:
            LDA placement is disabled due to unsuitable target.\n{}: Razporejanje z LDA je izključeno, ker ni primerne ciljne spremenljivke.\n{}
        def `_add_controls`:
            Features: Spremenljivke
            Hide radius:: Skriti krog
            hide_radius: false
        def `_add_controls_variables`:
            Suggest Features: Predlagaj spremenljivke
        def `_add_controls_placement`:
            placement: false
        def `_add_buttons`:
            auto_commit: false
        def `store_vizrank_n_attrs`:
            n_attrs: false
        def `_check_options`:
            Current data has no target variable: Podatki nimajo ciljne spremenljivke.
            {class_var.name} is not categorical: {class_var.name} ni kategorična spremenljivka.
            Data has no defined values for {class_var.name}: Podatki nimajo definiranih vrednosti za {class_var.name}.
            ' and ': ' in '
            "'{class_var.values[int(i)]}'": false
            "Data contains just {['one', 'two'][nclasses - 1]} distinct ": "Podatki vsebujejo le {plsi(nclasses - 1, 'eno vrednost|dve vrednosti|')} "
            "{pl(nclasses, 'value')} ({vals}) for '{class_var.name}'; ": "spremenljivke '{class_var.name}'; "
            at least three are required.: LDA potrebuje vsaj tri.
        def `init_vizrank`:
            There is no data.: Ni podatkov.
            Color variable has to be selected: Potrebno je izbrati spremenljivko za barvo.
            'Suggest Features does not work for Linear ': 'Predlaganje spremenljivk ne deluje '
            'Discriminant Analysis Projection when ': 'za diskriminantno analizo pri barvanju '
            continuous color variable is selected.: s številsko spremenljivko.
            Not enough available continuous variables: Ni dovolj številskih spremenljivk.
            Not enough valid data instances: Ni dovolj podatkov.
        def `init_projection`:
            eigen: false
        def `_get_send_report_caption`:
            Projection: Projekcija
            Color: Barva
            Label: Oznake
            Shape: Oblika
            Size: Velikost
            Jittering: Tresenje
            {} %: false
        def `migrate_settings`:
            point_width: false
            point_size: false
            jitter_size: false
            jitter_value: false
            alpha_value: false
            class_density: false
            graph: false
            radius: false
            hide_radius: false
            selection_indices: false
            selection: false
            placement: false
        def `migrate_context`:
            color_index: false
            attr_color: false
            shape_index: false
            attr_shape: false
            size_index: false
            attr_size: false
            graph: false
            attr_label: false
            selected_vars: false
    __main__: false
    iris: false
widgets/visualize/owlineplot.py:
    class `ParameterSetter`:
        Mean: Srednja vrednost
        Lines: Črte
        Lines (missing value): Črte (manjkajoče vrednosti)
        Selected lines: Izbrane črte
        Selected lines (missing value): Izbrane črte (manjkajoče vrednosti)
        Range: Razpon
        Selected range: Razpon izbora
        def `update_setters`:
            Dash line: Prekinjena črta
        def `axis_items`:
            item: false
    class `LinePlotGraph`:
        def `__init__`:
            bottom: false
            left: false
        def `update_legend`:
            s: false
        def `reset`:
            bottom: false
    class `ProfileGroup`:
        def `update_profiles_color`:
            pen: false
        def `update_sel_profiles_color`:
            pen: false
    class `OWLinePlot`:
        Line Plot: Črtni diagram
        Visualization of data profiles (e.g., time series).: Vizualizacija profilov podatkov, na primer časovnih vrst.
        icons/LinePlot.svg: false
        line plot: line plot
        class `Inputs`:
            Data: Podatki
            Data Subset: Podmnožica podatkov
        class `Outputs`:
            Selected Data: Izbrani podatki
        graph.plotItem: false
        class `Error`:
            Need at least one numeric feature.: Potrebna je vsaj ena številska spremenljivka.
        class `Warning`:
            No display option is selected.: Izberite vsaj en element za prikaz.
        class `Information`:
            Data has too many features. Only first {}: Podatki imajo preveč spremenljivk. Prikazanih je prvih {}.
            ' are shown.': ""
        def `_add_controls`:
            Display: Prikaz
            show_profiles: false
            Lines: Črte
            Plot lines: Pokaži črte.
            show_range: false
            Range: Razpon
            Plot range between 10th and 90th percentile: Pokaži razpon med 10. in 90. percentilom.
            show_mean: false
            Mean: Srednja vrednost
            Plot mean curve: Črta s poprečno vrednostjo.
            show_error: false
            Error bars: Standardna deviacija
            Show standard deviation: Pokaži standardno deviacijo.
            None: (Brez skupin)
            group_var: false
            Group by: Skupine
            auto_commit: false
        def `__show_profiles_changed`:
            profiles: false
        def `__show_range_changed`:
            range: false
        def `__show_mean_changed`:
            mean: false
        def `__show_error_changed`:
            error: false
        def `setup_plot`:
            bottom: false
        def `__get_visibility_flags`:
            show_profiles: false
            show_range: false
            show_mean: false
            show_error: false
        def `_update_visibility`:
            set_visible_{}: false
        def `send_report`:
            Group by: Skupine glede na
    __main__: false
    brown-selected: false
widgets/visualize/owmosaic.py:
    class `MosaicVizRank`:
        def `__init__`:
            'Score Mosaics with ': Oceni Mozaike
            a single variable: z eno spremenljivko
            two variables: z dvema spremenljivkama
            three variables: s tremi spremenljivkami
            four variables: s štirimi spremenljivkami
            at most two variables: z največ dvema spremenljivkama
            at most three variables: z največ tremi spremenljivkami
            at most four variables: z največ štirimi spremenljivkami
        def `on_attrs_changed`:
            Restart with new settings: Poženi z novimi nastavitvami
        def `score_attributes`:
            name: false
        def `compute_score`:
            -: false
        def `row_for_state`:
            ', ': false
        def `emit_run_state_changed`:
            attr_range_index: false
    class `OWMosaicDisplay`:
        Mosaic Display: Mozaik
        Display data in a mosaic plot.: Pokaži mozaik za podatke.
        icons/MosaicDisplay.svg: false
        mosaic display: mosaic display
        class `Inputs`:
            Data: Podatki
            Data Subset: Podmnožica podatkov
        class `Outputs`:
            Selected Data: Izbrani podatki
        canvas: false
        class `Warning`:
            Data subset is incompatible with Data: Podmnožica podatkov ni združljiva z vhodnimi podatki.
            No valid data: Ni uporabnih podatkov.
            Selection of numeric features on SQL is not supported: Izbor številskih podatkov iz SQL ni podprt.
        def `__init__`:
            (None): (Prazno)
            variable{}: false
            Find Informative Mosaics: Poišči informativne mozaike
            Interior Coloring: Barva notranjosti
            (Pearson residuals): (Pearsonovi residuali)
            variable_color: false
            use_boxes: false
            Compare with total: Primerjaj s celoto
        def `store_vizrank_attr_range`:
            attr_range_index: false
        def `init_vizrank`:
            Not enough data: Ni dovolj podatkov
        def `update_graph`:
            def `get_counts`:
                -: true
            def `draw_data`:
                -: true
                '{}&nbsp;&nbsp;&nbsp;&nbsp;{}: <b>{}</b><br/>': false
            def `add_rect`:
                <hr/>: false
                'Expected instances: %.1f<br>': Pričakovanih primerov: %.1f<br>
                'Actual instances: %d<br>': Dejanskih primerov: %d<br>
                'Standardized (Pearson) residual: %.1f': Standardiziran (Pearsonov) residual: %.1f
                -: true
                <br/>: false
                '<b>%s</b>: %d / %.1f%% (Expected %.1f / %.1f%%)': <b>%s</b>: %d / %.1f%% (Pričakovano %.1f / %.1f%%)
                '{}<hr>Instances: {}<br><br>{}': {}<hr>Primerov: {}<br><br>{}
            def `create_legend`:
                <-8: false
                -8:-4: false
                -4:-2: false
                -2:2: false
                2:4: false
                4:8: false
                >8: false
                Residuals:: Residuali:
            Feature {} has no values: Spremenljivka {} nima vrednosti
        def `migrate_context`:
            (None): false
    def `get_conditional_distribution`:
        COUNT(*): false
        ?: false
        None: false
        -: false
    __main__: false
    zoo: false
widgets/visualize/ownomogram.py:
    class `SortBy`:
        def `items`:
            Original order: Originalni
            Alphabetically: Abecedni
            Absolute importance: Absolutna pomembnost
            Positive influence: Pozitivni vpliv
            Negative influence: Negativni vpliv
    class `DotItem`:
        'ul {margin-top: 1px; margin-bottom: 1px;}': false
        '<html><head><style type="text/css">{}</style>
    </head><body><b>{}</b><hr/>{}</body></html>
    ': false
    class `ProbabilitiesDotItem`:
        def `get_tooltip_text`:
            'Total: {} <br/>Probability: {:.0%}': Vsota: {} <br/>Verjetnost: {:.0%}
    class `DiscreteMovableDotItem`:
        def `get_tooltip_text`:
            'Points: {}': Točke: {}
            '{}: {:.0%}<br/>': false
        def `_get_tooltip_labels_with_percentages`:
            <: false
            &lt;: false
    class `GraphicsColorAnimator`:
        def `__init__`:
            brushColor: false
    class `ContinuousItemMixin`:
        def `get_tooltip_text`:
            'Points: {}': Točke: {}
            'Value: {}': Vrednost: {}
    class `ProbabilitiesRulerItem`:
        def `__init__`:
            Total: Vsota
            ' ': false
    class `OWNomogram`:
        Nomogram: true
        ' Nomograms for Visualization of Naive Bayesian': 'Nomogram za prikaz '
        ' and Logistic Regression Classifiers.': naivnega Bayesovega modela in logistične regresije.
        icons/Nomogram.svg: false
        nomogram: nomogram
        class `Inputs`:
            Classifier: Model
            Data: Podatki
        class `Outputs`:
            Features: Značilke
        scene: false
        class `Error`:
            'Nomogram accepts only Naive Bayes and ': 'Nomogram sprejema zgolj naivni Bayesov '
            Logistic Regression classifiers.: klasifikator in logistično regresijo.
        def `__init__`:
            target_class_index: false
            'Target class: ': 'Ciljni razred: '
            normalize_probabilities: false
            Normalize probabilities: Normiraj verjetnosti
            For multiclass data 1 vs. all probabilities do not: Za večrazredne podatke 'eden proti vsem' se posamične napovedane verjetnosti
            ' sum to 1 and therefore could be normalized.': ' ne seštejejo v 1.'
            'margin-bottom: 12px': false
            scale: false
            'Scale: ': 'Lestvica: '
            Point scale: Točkovna lestvica
            Log odds ratios: Razmerje logaritmov obetov
            Displayed features: Prikazane spremenljivke
            sort_index: false
            'Order: ': 'Vrstni red: '
            display_index: false
            All features: Vse značilke
            Best ranked:: Prvih:
            n_attributes: false
            'Show: ': 'Pokaži: '
            cont_feature_dim_index: false
            Numeric features:: Številske spremenljivke:
            1D projection: 1D projekcija
            2D curve: 2D krivulja
            class `GraphicsView`:
                def `__init__`:
                    'QGraphicsView {background: white}': false
        def `_class_combo_changed`:
            ignore: false
        def `update_scene`:
            Points: Točke
            Probabilities (%): Verjetnosti (%)
        def `create_footer_nomogram`:
            {}='{}': false
        def `reconstruct_domain`:
            variable: false
        def `reset_settings`:
            ignore: false
            combo box 'target_class_index' is empty: false
    __main__: false
    heart_disease: false
widgets/visualize/owpythagorastree.py:
    class `OWPythagorasTree`:
        Pythagorean Tree: Pitagorovo drevo
        Pythagorean Tree visualization for tree like-structures.: Prikaz drevesne strukture s Pitagorovim drevesom.
        icons/PythagoreanTree.svg: false
        pythagorean tree, fractal: pythagorean tree, fractal, fraktal
        class `Inputs`:
            Tree: Drevo
        class `Outputs`:
            Selected Data: Izbrani podatki
        scene: false
        corner: false
        offset: false
        def `__init__`:
            Normal: Sorazmerna
            Square root: Kvadratni koren
            Logarithmic: Logaritmična
            Tree Info: Podatki o drevesu
            Display Settings: Nastavitve prikaza
            depth_limit: false
            Depth: Globina
            target_class_index: false
            Target class: Ciljni razred:
            size_calc_idx: false
            Size: Velikost:
            size_log_scale: false
            Log scale factor: Logaritmični faktor
            Plot Properties: Lastnosti prikaza
            tooltips_enabled: false
            Enable tooltips: Kaži namige pod miško
            show_legend: false
            Show legend: Pokaži legendo
            Redraw: Ponovno izriši
        def `set_tree`:
            meta_target_class_index: false
            meta_size_calc_idx: false
            meta_depth_limit: false
        def `_update_info_box`:
            'Nodes: {}\nDepth: {}': Število vozlišč: {}, globina: {}
        def `_update_log_scale_slider`:
            Logarithmic: Logaritmična
        def `_clear_info_box`:
            No tree on input: Na vhodu ni drevesa.
        def `_update_target_class_combo`:
            Target class: Ciljni razred:
            None: (Vsi razredi)
            Node color: Barva:
        def `_classification_update_legend_colors`:
            other: false
            '#ffffff': false
    __main__: false
    iris: false
widgets/visualize/owpythagoreanforest.py:
    '
<style>
* {
  box-sizing: border-box;
}

.forest_model_row {
  display: flex;
  flex-wrap: wrap;
  padding: 0 4px;
}

.forest_model_col {
  flex: 10%;
  max-width: 10%;
  padding: 0 4px;
}

.forest_model_col img {
  margin-top: 8px;
  vertical-align: middle;
}

@media screen and (max-width: 2200px) {
  .forest_model_col {
    flex: 25%;
    max-width: 25%;
  }
}

@media screen and (max-width: 1200px) {
  .forest_model_col {
    flex: 50%;
    max-width: 50%;
  }
}

@media screen and (max-width: 600px) {
  .forest_model_col {
    flex: 100%;
    max-width: 100%;
  }
}
</style>
': false
    class `PythagoreanForestModel`:
        def `data`:
            tree: false
            scene: false
        def `update_tree_views`:
            tree: false
    class `PythagorasTreeDelegate`:
        def `paint`:
            '#ebebeb': false
    class `OWPythagoreanForest`:
        Pythagorean Forest: Pitagorov gozd
        Pythagorean forest for visualising random forests.: Prikaz naključnega gozda s Pitagorovimi drevesi.
        icons/PythagoreanForest.svg: false
        pythagorean forest, fractal: pythagorean forest, fractal, fraktal, drevesa
        class `Inputs`:
            Random Forest: Naključni gozd
            Random forest: Naključni gozd
        class `Outputs`:
            Tree: Drevo
        Normal: Sorazmerna
        Square root: Kvadratni koren
        Logarithmic: Logaritmična
        def `migrate_settings`:
            selected_tree_index: false
            zoom: false
        def `__init__`:
            Forest: Gozd
            Display: Prikaz
            depth_limit: false
            Depth: Globina:
            target_class_index: false
            Target class: Ciljni razred:
            size_calc_idx: false
            Size: Velikost:
            zoom: false
            Zoom: Povečava
        def `_update_info_box`:
            'Trees: {}': Drevesa: {}
        def `_update_target_class_combo`:
            Target class: Ciljni razred:
            None: (Vsi razredi)
            Node color: Barva:
        def `_clear_info_box`:
            No forest on input.: Na vhodu ni gozda.
        def `send_report`:
            def `item_html`:
                utf-8: false
                '<img style="width:100%" ': false
                src="data:image/png;base64,{img_encoded}"/>: false
            <div class='forest_model_row'>: false
            <div class='forest_model_col'>: false
            </div>: false
            <p>. . .</p>: false
    __main__: false
    iris: false
widgets/visualize/owradviz.py:
    class `RadvizVizRank`:
        def `__init__`:
            'Maximum number of variables: ': 'Največje število spremenljivk: '
        def `compute_score`:
            ignore: false
    class `OWRadvizGraph`:
        def `update_anchors`:
            <b>{label}</b>: false
            ' ': false
            \n: false
            ...: false
    class `OWRadviz`:
        Radviz: Radviz
        Display Radviz projection: Projekcija z Radvizom.
        icons/Radviz.svg: false
        radviz, viz: radviz, viz
        class `Warning`:
            Categorical variables with more than two values are not shown.: Kategorične spremenljivke z več kot dvema vrednostima niso prikazane.
            Maximum number of selected variables reached.: Doseženo je največje možno število izbranih spremenljivk.
        def `_add_controls`:
            Features: Spremenljivke
            Suggest features: Predlagaj spremenljivke
        def `_add_buttons`:
            auto_commit: false
        def `store_vizrank_n_attrs`:
            n_attrs: false
        def `init_vizrank`:
            No data: Ni podatkov.
            Not enough variables: Ni dovolj spremenljivk.
            Color is not set.: Barva ni nastavljena.
            No rows with defined color variable: Ni vrstic z definirano vrednostjo {self.attr_color.name}.
            Not enough rows without missing data: Ni dovolj vrstic brez manjkajočih podatkov.
            Constant data: Konstantni podatki.
        def `_send_components_metas`:
            angle: false
        def `migrate_context`:
            attr_color: false
            graph: false
            attr_size: false
            attr_shape: false
            attr_label: false
            selected_vars: false
    __main__: false
    brown-selected: false
widgets/visualize/owruleviewer.py:
    class `OWRuleViewer`:
        CN2 Rule Viewer: Pregledovalnik pravil CN2
        Review rules induced from data.: Pregled pravil, sestavljenih iz podatkov.
        icons/CN2RuleViewer.svg: false
        cn2 rule viewer: cn2 rule viewer
        class `Inputs`:
            Data: Podatki
            Classifier: Klasifikator
        class `Outputs`:
            Selected Data: Pokriti primeri
        def `__init__`:
            IF conditions: Pogoj
            THEN class: Napoved
            Distribution: Porazdelitev
            Probabilities [%]: Verjetnosti [%]
            Quality: Kvaliteta
            Length: Dolžina
            compact_view: false
            Compact view: Stisnjen pregled
            Restore original order: Izvirni vrstni red
        def `set_classifier`:
            rule_list: false
        def `copy_to_clipboard`:
            \n: false
        def `send_report`:
            Induced rules: Pravila
    class `CustomRuleViewerTableModel`:
        ==: false
        =: false
        !=: false
        ≠: false
        <=: false
        ≤: false
        >=: false
        ≥: false
        def `data`:
            def `_display_role`:
                ' AND ': ' IN '
                ' AND\n': ' IN \n'
                TRUE: Sicer
                →: false
                =: false
                .1f: false
                ' : ': false
                {:.{}{}}: false
                f: false
                e: false
            def `_tooltip_role`:
                ' AND ': ' IN '
                ' AND\n': ' IN\n'
                \n: false
                ': ': false
                {:.1f}: false
                %: false
    __main__: false
    iris: false
widgets/visualize/owscatterplot.py:
    class `ParameterSetter`:
        def `axis_items`:
            item: false
        def `reg_line_label_items`:
            label: false
    class `OWScatterPlotGraph`:
        def `_regression_line`:
            r = {rvalue:.2f}: true
        def `_add_line`:
            label: false
        def `update_reg_line_label_colors`:
            label: false
        def `update_regression_line`:
            '#505050': false
    class `OWScatterPlot`:
        Scatter Plot: Razsevni diagram
        'Interactive scatter plot visualization with ': Interaktivni prikaz podatkov z razsevnim diagramom.
        intelligent data visualization enhancements.: ""
        icons/ScatterPlot.svg: false
        scatter plot: scatter plot, grafikon
        class `Inputs`:
            Features: Spremenljivki
        class `Outputs`:
            Features: Spremenljivki
        class `Warning`:
            "Plot cannot be displayed because '{}' or '{}' ": "Diagrama ni mogoče pokazati, ker '{}' ali '{}' "
            is missing for all data points.: nima nobene znane vrednosti.
        class `Information`:
            Large SQL table; showing a sample.: Velika tabela SQL; kažem vzorec.
            Points with missing '{}' or '{}' are not displayed: Točke z manjkajočo vrednostjo '{}' ali '{}' niso prikazane.
        def `_add_controls`:
            graph.orthonormal_regression: false
            Treat variables as independent: Obravnavaj spremenljivki kot neodvisni
            If checked, fit line to group (minimize distance from points);\n: Če je opcija izbrana, je črta postavljena čim bližje točkam;
            otherwise fit y as a function of x (minimize vertical distances): sicer pa minimizira samo razdaljo v smeri y.
        def `_add_controls_axis`:
            Axes: Osi
            attr_x: false
            Axis x:: Os x:
            attr_y: false
            Axis y:: Os y:
            Find Informative Projections: Poišči informativne projekcije
        def `_add_controls_sampling`:
            auto_sample: false
            Sample: Vzorec
            Sampling: Vzorčenje
        def `init_vizrank`:
            No data on input: Ni podatkov.
            Data is sparse: Podatki so v redki tabeli.
            Not enough features for ranking: Ni dovolj spremenljivk za rangiranje.
            Color variable is not selected: Barva ni izbrana.
            Color variable has no values: Spremenljivka {self.attr_color} nima znanih vrednosti.
        def `_point_tooltip`:
            <br/>: false
            {} = {}: false
            <b>{}</b><br/><br/>{}: false
        def `set_subset_data`:
            Data subset does not support large Sql tables: V velikih tabelah iz SQL ni možno izbirati primerov.
        def `get_axes`:
            bottom: false
            left: false
        def `get_widget_name_extension`:
            {} vs {}: {} in {}
        def `_get_send_report_caption`:
            Color: Barva
            Label: Oznake
            Shape: Oblika
            Size: Velikost
            Jittering: Tresenje
        def `migrate_settings`:
            selection: false
            selection_group: false
            auto_send_selection: false
            auto_commit: false
            graph: false
            jitter_continuous: false
        def `migrate_context`:
            attr_color: false
            graph: false
            attr_size: false
            attr_shape: false
            attr_label: false
            attr_x: false
            attr_y: false
    __main__: false
    iris: false
widgets/visualize/owscatterplotgraph.py:
    class `LegendItem`:
        def `addItem`:
            left: false
    class `ScatterPlotItem`:
        def `setCoordinates`:
            pen: false
            brush: false
            size: false
            symbol: false
            data: false
    def `_define_symbols`:
        ?: false
        +: false
        t: false
        x: false
    class `AxisItem`:
        def `tickStrings`:
            %Y: true
            %Y %b: true
            %Y %b %d: true
            %Hh: true
            %d %Hh: true
            %H:%M: true
            %H:%M:%S: true
            %S.%f: true
    class `ScatterBaseParameterSetter`:
        Categorical legend: Kategorična legenda
        Numerical legend: Številska legenda
    class `OWScatterPlotBase`:
        o x t + d star ?: false
        def `__init__`:
            left: false
            bottom: false
        def `_create_drag_tooltip`:
            '{}: Append to group': {}: Dodaj k skupini
            Cmd: true
            darwin: false
            Ctrl: true
            'Shift: Add group': Shift: Dodaj skupino
            'Alt: Remove': Alt: Odstrani
            <center>: false
            ', ': false
            </center>: false
            <b>{}</b>: false
        def `get_sizes`:
            ignore: false
        def `update_sizes`:
            impute_sizes: false
            size: false
        def `update_density`:
            pen: false
        def `get_shapes`:
            impute_shapes: false
        def `_update_color_legend`:
            o: false
widgets/visualize/owsieve.py:
    class `ChiSqStats`:
        def `__init__`:
            ignore: false
    class `OWSieveDiagram`:
        Sieve Diagram: Sievov diagram
        'Visualize the observed and expected frequencies ': 'Prikaz pričakovanih in opaženih pogostosti '
        for a combination of values.: za kombinacije spremenljivk.
        icons/SieveDiagram.svg: falase
        sieve diagram: sieve diagram, grafikon
        class `Inputs`:
            Data: Podatki
            Features: Spremenljivki
        class `Outputs`:
            Selected Data: Izbrani podatki
        canvas: false
        def `__init__`:
            attr_x: false
            \u2717: true
            attr_y: false
            Score Combinations: Oceni kombinacije
        def `migrate_context`:
            attrX: false
            attr_x: false
            attrY: false
            attr_y: false
        def `init_vizrank`:
            No data: Ni podatkov.
            Not enough data: Ni dovolj podatkov.
            Data is sparse: Podatki so v redki tabeli.
        def `resolve_shown_attributes`:
            Features from the input signal are not present in the data: Spremenljivk na vhodnem signalu ni v vhodni tabeli.
        def `update_graph`:
            def `text`:
                max_width: false
            def `fmt`:
                {:.2f}: false
            def `make_tooltip`:
                def `_oper`:
                    ' = ': false
                    ' ': false
                    <≥: false
                    ' in ': ' znotraj '
                '<b>{attr}{eq}{val_name}</b>: {obs}/{n} ({p:.0f} %)': false
                '<b>combination of values: </b><br/>
                   &nbsp;&nbsp;&nbsp;expected {exp} ({p_exp:.0f} %)<br/>
                   &nbsp;&nbsp;&nbsp;observed {obs} ({p_obs:.0f} %)': '<b>kombinacija vrednosti: </b><br/>
   &nbsp;&nbsp;&nbsp;pričakovanih {exp} ({p_exp:.0f} %)<br/>
   &nbsp;&nbsp;&nbsp;opaženih {obs} ({p_obs:.0f} %)'
                {xt}<br/>{yt}<hr/>{ct}: false
            Features {} and {} have no values: Spremenljivki {} in {} nimata znanih vrednosti.
            Feature {} has no values: Spremenljivka {} nima znanih vrednosti.
            χ²={:.2f}, p={:.3f}: true
            'N = ': true
        def `get_widget_name_extension`:
            {} vs {}: {} in {}
    __main__: false
    zoo: false
widgets/visualize/owsilhouetteplot.py:
    class `NoGroupVariable`:
        Input does not have any suitable labels: Vhodni podatki nimajo primerne spremenljivke za oznake
    class `OWSilhouettePlot`:
        Silhouette Plot: Silhuete
        'Visually assess cluster quality and ': Pokaže kvaliteto gručenja oz. skupin in pripadnost skupinam.
        the degree of cluster membership.: ""
        icons/SilhouettePlot.svg: false
        silhouette plot: silhouette plot
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Selected Data: Izbrani podatki
        orangecontrib.prototypes.widgets.owsilhouetteplot.OWSilhouettePlot: false
        Orange.widgets.unsupervised.owsilhouetteplot.OWSilhouettePlot: false
        Euclidean: Evklidska
        Manhattan: Manhattanska
        Cosine: Kosinusna
        scene: false
        class `Error`:
            Need at least two non-empty clusters: Potrebni sta vsaj dve neprazni skupini
            All clusters are singletons: Vse skupine imajo le en sam element.
            Not enough memory: Premalo pomnilnika
            "Distances could not be computed: '{}'": Razdalj ni mogoče izračunati: '{}'
            {}: false
            Distance matrix is not symmetric.: Matrika razdalj ni simetrična.
        class `Warning`:
            {} instance{s} omitted (missing cluster assignment): {} primer(ov) je izpuščenih (skupina ni znana)
            {} instance{s} omitted (undefined distances): {} primer(ov) je izpuščenih (nedefinirana razdalja)
            Ignoring categorical features: Ignoriram kategorične spremenljivke
        def `__init__`:
            Distance: Razdalja
            distance_idx: false
            Grouping: Skupine
            (None): (Brez)
            cluster_var: false
            group_by_cluster: false
            Show in groups: Pokaži v skupinah
            Bars: Črte
            Bar width:: Širina črt:
            bar_size: false
            Annotations:: Oznake:
            annotation_var: false
            (increase the width to show): (povečajte širino, da bodo vidne)
            auto_commit: false
        def `_set_distances`:
            Distance matrix is not symmetric.: Matrika razdalj ni simetrična.
            Input matrix does not have associated data: Matrika razdalj ne vsebuje podatkov.
        def `_ensure_matrix`:
            invalid state: false
        def `_update`:
            precomputed: false
            s: false
        def `commit`:
            strictly increasing: false
            Silhouette ({}): Silhueta ({})
        def `send_report`:
            'Silhouette plot ': 'Silhueta '
            '({self.Distances[self.distance_idx][0]} distance), ': '({self.Distances[self.distance_idx][0]} razdalja), '
            clustered by '{self.cluster_var.name}': skupine glede na '{self.cluster_var.name}'
            , annotated with '{self.annotation_var.name}': , označene z '{self.annotation_var.name}'
        def `migrate_context`:
            cluster_var_idx: false
            cluster_var: false
            annotation_var_idx: false
            annotation_var: false
    def `show_tool_tip`:
        QTipLabel: false
        <span>{etext}</span>: false
    class `SilhouettePlot`:
        def `setScores`:
            scores and labels must be 1 dimensional: false
            scores and labels must have the same shape: false
            rownames must have the same size as scores: false
            All indices in `labels` must be in `range(len(values))`: false
        def `__setup`:
            top: false
            ' ({np.mean(group.scores):.3f})': false
            bottom: false
    class `Line`:
        def `__init__`:
            sizePolicy: false
    class `BarPlotItem`:
        def `__init__`:
            '#3FCFCF': false
    __main__: false
    brown-selected: false
widgets/visualize/owtreeviewer.py:
    class `TreeNode`:
        def `rect`:
            _rect: false
        def `boundingRect`:
            attr: false
    class `OWTreeGraph`:
        Tree Viewer: Drevogled
        icons/TreeViewer.svg: false
        tree viewer: tree viewer
        class `Inputs`:
            Tree: Drevo
            Classification Tree: false
            Regression Tree: false
        class `Outputs`:
            Selected Data: Izbrani podatki
            selected-data: false
            annotated-data: false
        Orange.widgets.classify.owclassificationtreegraph.OWClassificationTreeGraph: false
        Orange.widgets.classify.owregressiontreegraph.OWRegressionTreeGraph: false
        Default: Privzeto
        Number of instances: Število primerov
        Mean value: Srednja vrednost
        Variance: Varianca
        def `__init__`:
            'Target class: ': 'Ciljni razred: '
            show_intermediate: false
            Show details in non-leaves: Podrobnosti v notranjih vozliščih
        def `_update_node_info_attr_name`:
            <hr/>: false
        def `ctree`:
            No tree.: Ni drevesa.
            'Target class: ': 'Ciljni razred: '
            None: Brez
            'Color by: ': 'Obarvaj po: '
            {nodes} {pl(nodes, "node")}, {leaves} {pl(leaves, "leaf|leaves")}: {nodes} {plsi(nodes, "vozlišče|vozlišči|vozlišča|vozlišč")}, {leaves} {plsi(leaves, "list")}
        def `node_tooltip`:
            &nbsp;&nbsp;&nbsp;: false
            <p style='white-space:pre'>: false
            <br/>: false
            {indent}– {to_html(str(rule))}: false
            <p><b>Selection</b></p><p>{rule}</p>: <p><b>Kriterij</b></p><p>{rule}</p>
            {nbp}<b>Distribution of</b> '{name}'</p><p>: <p><b>Porazdelitev</b></p><p>{rule}</p>
            <table>: false
            <tr>: false
            "<td><span style='color: {color_to_hex(color)}'>◼</span> ": false
            {escape(value)}</td>: false
            <td>{indent}</td>: false
            <td align='right'>{prop:g}</td>: false
            <td align='right'>{prop / total * 100:.1f} %</td>: false
            </tr>: false
            </table>: false
            {nbp}{class_var.name} = {mean:.3g} ± {var:.3g}<br/>: false
            ({self.tree_adapter.num_samples(node.node_inst)} instances)</p>: ({self.tree_adapter.num_samples(node.node_inst)} {plsi(self.tree_adapter.num_samples(node.node_inst), "primer")})
            "<p style='white-space:pre'><b>Next split: </b>{split}</p>": <p style='white-space:pre'><b>Naslednja delitev: </b>{split}</p>
            <hr/>: false
        def `send_report`:
            Tree size: Velikost drevesa
            Edge widths: Širina vej
            Fixed: Enaka
            Relative to root: Relativna glede na koren
            Relative to parent: Relativna glede na starša
            Target class: Ciljni razred
            Color by: Obarvaj po
        def `update_node_info`:
            '<p style="line-height: 120%; margin-bottom: 0">{text}</p>': false
        def `node_content_cls`:
            <b>{self.domain.class_vars[0].values[int(modus)]}</b><br/>: false
            100%, {total}/{total}: false
            {100 * tabs:2.1f}%, {int(total * tabs)}/{total}: false
        def `node_content_reg`:
            <b>{mean:.1f}</b> ± {var:.1f}<br/>: false
            {insts} instances: {insts} {plsi(insts, "primer")}
    __main__: false
    titanic: false
widgets/visualize/owtreeviewer2d.py:
    class `GraphNode`:
        def `__init__`:
            edges: false
    class `TextTreeNode`:
        def `backgroundBrush`:
            _background_brush: false
            defaultItemBrush: false
        QBrush: false
        Background brush: false
        def `setHtml`:
            <body>: false
            </body>: false
        def `rect`:
            _rect: false
        def `boundingRect`:
            _rect: false
    class `TreeGraphicsView`:
        resized: false
    class `OWTreeViewer2D`:
        scene: false
        def `__init__`:
            Tree: Drevo
            No tree.: Ni drevesa.
            Display: Prikaz
            'Zoom: ': 'Povečava: '
            zoom: false
            'Width: ': 'Širina: '
            max_node_width: false
            'Depth: ': 'Globina: '
            max_tree_depth: false
            Unlimited: Neomejena
            {x} levels: {x} {plsi(x, "nivo|nivoja|nivoji|nivojev")}
            'Edge width: ': 'Širina povezav: '
            line_width_method: false
            Fixed: Enaka
            Relative to root: Relativna glede na koren
            Relative to parent: Relativna glede na starša
            'QToolTip { padding: 3px;
                                                    border: 1px solid #C0C0C0;
                                      }': false
        def `send_report`:
            Tree: Drevo
            .svg: false
        def `node_tooltip`:
            tree node: vozlišče drevesa
widgets/visualize/owvenndiagram.py:
    _InputData: false
    key: false
    name: false
    table: false
    _ItemSet: false
    title: false
    items: false
    Instance identity: Identiteta vrstic
    Instance equality: Enakost vrstic
    class `OWVennDiagram`:
        Venn Diagram: Vennov diagram
        'A graphical visualization of the overlap of data instances ': 'Grafični prikaz skupnih podatkov v '
        from a collection of input datasets.: različnih tabelah.
        icons/VennDiagram.svg: false
        venn diagram: venn diagram, grafikon
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Selected Data: Izbrani podatki
        class `Error`:
            Data sets do not contain the same instances.: Vhodni podatki ne vsebujejo istih primeov.
            Venn diagram accepts at most five datasets.: Vennov diagram lahko sprejme največ pet tabel.
        class `Warning`:
            'Some variables have been renamed ': 'Nekatere spremenljivke so preimenovane v izogib '
            to avoid duplicates.\n{}: ponavljanju imen.\n{}
        scene: false
        attributes: false
        metas: false
        class_vars: false
        X: false
        Y: false
        x: false
        y: false
        def `__init__`:
            rowwise: false
            Columns (features): Stolpci (spremenljivke)
            Rows (instances), matched by: Vrstice (primeri), ujemanje glede na
            selected_feature: false
            'Instances are identical if originally coming from the ': Vrstici sta "enaki", če izvirata iz iste vrstice neke tabele.
            same row of the same table.\n: ""
            'Instances can be check for equality only if described by ': Enakost vrstic je možno primerjati le, če sta opisani z istimi spremenljivkami.
            the same variables.: ""
            output_duplicates: false
            Output duplicates: Ponovljeni primeri na izhodu.
            autocommit: false
        def `_createDiagram`:
            '{} <i>(all: {})</i>': {} <i>(vsi: {})</i>
            {}: false
            {0}: false
            <h4>|{}| = {}</h4>: false
            <span>: false
            ', ': false
            </br>({len(area_items) - 32} items not shown): ' </br>in še {z_besedo(len(area_items) - 32, 1, "f")} {plsi(len(area_items) - 32, "druga spremenljivka|drugi spremenljivki|druge spremenljivke|drugih spremenljivk")}'
            </span>: false
        def `merge_data`:
            ', ': false
            attributes: false
            metas: false
            class_vars: false
        def `extract_columnwise`:
            {var_name.name} ({idx}): false
            attributes: false
            Selected: false
            ', ': false
        def `create_from_columns`:
            attributes: false
        def `extract_rowwise`:
            {} ({}): false
            ', ': false
        def `get_indices`:
            metas: false
        def `extract_rowwise_duplicates`:
            name: false
            attributes: false
            metas: false
            class_vars: false
        def `migrate_settings`:
            selected_feature: false
    def `disjoint_set_label`:
        INTERSECTION: false
        c: false
        def `label_for_index`:
            A: false
        <sup>: false
        </sup>: false
    class `VennDiagram`:
        <center><h4>{0}</h4>{1}</center>: false
        def `_on_editingStarted`:
            <br/>: false
    def `append_column`:
        X: false
        Y: false
        M: false
    def `main`:
        brown-selected: false
        test_rows: false
        M: false
        Test: false
        A: false
    __main__: false
widgets/visualize/owviolinplot.py:
    class `ParameterSetter`:
        Bottom axis: Spodnja os
        Vertical tick text: Navpično besedilo
        def `axis_items`:
            item: false
        def `bottom_axis`:
            bottom: false
    class `ViolinItem`:
        RugPlot: false
        support, density: false
    class `ViolinPlot`:
        def `__init__`:
            bottom: false
            left: false
        def `order_items`:
            bottom: false
            left: false
        def `_set_axes`:
            left: false
            bottom: false
        def `_clear_axes`:
            left: false
            bottom: false
    class `OWViolinPlot`:
        Violin Plot: Violine
        Visualize the distribution of feature: Porazdelitev vrednosti v
        ' values in a violin plot.': ' vizualizaciji z violinami.'
        icons/ViolinPlot.svg: false
        violin plot, kernel, density: violin plot, kernel, density, jedro, gostota, porazdelitev
        class `Inputs`:
            Data: Podatki
        class `Outputs`:
            Selected Data: Izbrani podatki
        class `Error`:
            Plotting requires a numeric feature.: Risati je mogoče le številske spremenljivke.
            Plotting requires at least two instances.: Risanje zahteva vsaj dva primera.
        gaussian: false
        epanechnikov: false
        linear: false
        Normal: Normalno
        Epanechnikov: Epanechikovo
        Linear: Linearno
        Area: Površina
        Count: Število primerov
        Width: Širina
        graph.plotItem: false
        def `_add_controls`:
            None: (Brez skupin)
            Variable: Spremenljivka
            order_by_importance: false
            Order by relevance to subgroups: Uredi glede na različnost po skupinah
            Order by 𝜒² or ANOVA over the subgroups: Uredi glede na vrednost 𝜒² ali ANOVA med skupinami
            Subgroups: Skupine
            order_grouping_by_importance: false
            Order by relevance to variable: Uredi glede na pomembnost spremenljivke
            Order by 𝜒² or ANOVA over the variable values: Uredi glede na vrednost 𝜒² ali ANOVA med vrednostmi spremenljivke
            Display: Prikaz
            show_box_plot: false
            Box plot: Škatla z brki
            show_strip_plot: false
            Density dots: Preproga točk
            show_rug_plot: false
            Density lines: Proge
            order_violins: false
            Order subgroups: Uredi skupine
            show_grid: false
            Show grid: Pokaži mrežo
            orientation_index: false
            Horizontal: Vodoravna
            Vertical: Navpična
            'Orientation: ': 'Smer: '
            Density Estimation: Ocenjevanje gostote
            kernel_index: false
            Kernel:: Jedro:
            scale_index: false
            Scale:: Velikost:
        def `init_list_view`:
            hidden: false
    __main__: false
    heart_disease: false
widgets/visualize/pythagorastreeviewer.py:
    Square: false
    center: false
    length: false
    angle: false
    Point: false
    x: false
    y: false
    class `PythagorasTreeViewer`:
        def `__init__`:
            interactive: false
            target_class_index: false
            weight_adjustment: false
    class `SquareGraphicsItem`:
        def `__init__`:
            brush: false
            '#297A1F': false
            zvalue: false
    class `TreeNode`:
        def `_rules_str`:
            <br>: false
            <br><b>%s</b>: false
    class `DiscreteTreeNode`:
        def `tooltip`:
            <br>: false
            <p>: false
            {}/{} samples ({:2.3f}%): {}/{} primerov ({:2.3f}%)
            <hr>: false
            'Split by ': Delitev glede na
            <br><br>: false
            </p>: false
    class `ContinuousTreeNode`:
        None: (Enaka barva)
        Mean: Povprečje
        Standard deviation: Standardni odklon
        def `tooltip`:
            '<p>Mean: {:2.3f}': <p>Povprečje: {:2.3f}
            '<br>Standard deviation: {:2.3f}': <br>Standardni odklon: {:2.3f}
            <br>{} samples: <br>{} primerov
            <hr>: false
            'Split by ': Delitev glede na
            <br><br>: false
            </p>: false
widgets/visualize/utils/__init__.py:
    class `VizRankDialog`:
        class `Information`:
            There is nothing to rank.: Ni česa rangirati.
        def `__init__`:
            Orange.widgets.visualize.utils.vizrank.VizRankDialog: false
            Filter ...: false
            Start: Začni
        def `initialize`:
            Start: Začni
        def `on_done`:
            Finished: Končano
        def `toggle`:
            Pause: Počakaj
            Continue: Nadaljuj
    def `run_vizrank`:
        Getting combinations...: Sestavljam kombinacije...
        Getting scores...: Ocenjujem...
    class `VizRankDialogAttrPair`:
        def `__init__`:
            xy_changed_manually: false
        def `row_for_state`:
            name: false
            ', ': false
    class `CanvasText`:
        def `elide`:
            ...: true
    class `ViewWithPress`:
        def `__init__`:
            handler: false
widgets/visualize/utils/component.py:
    class `AnchorParameterSetter`:
        Anchor: Sidro
widgets/visualize/utils/customizableplot.py:
    def `available_font_families`:
        .: false
    class `Updater`:
        Font family: Pisava
        Font size: Velikost pisave
        Italic: Poševno
        Width: Širina
        Opacity: Neprosojnost
        Style: Slog
        Antialias: Mehčanje
        Solid line: Polna črta
        Dash line: Prekinjena črta
        Dot line: Pikčasta črta
        Dash dot line: Črta - pika
        Dash dot dot line: Črta - pika - pika
        def `update_axes_titles_font`:
            foreground: false
            normal: false
            italic: false
            font-size: false
            {font.pointSize()}pt: false
            font-family: false
            {font.family()}: false
            color: false
            font-style: false
            {fstyle}: false
        def `update_axes_ticks_font`:
            tickFont: false
        def `update_legend_font`:
            size: false
        def `update_lines`:
            pen: false
        def `update_inf_lines`:
            label: false
    class `CommonParameterSetter`:
        Fonts: Pisave
        Annotations: Oznake
        Figure: Slika
        Font family: Oblika pisave
        Axis title: Ime osi
        Axis ticks: Črte na osi
        Legend: Legenda
        Label: Oznake
        Line label: Oznaka črte
        x-axis title: false
        y-axis title: false
        Title: Naslov
        Lines: Črte
        def `__init__`:
            bottom: false
            left: false
widgets/visualize/utils/heatmap.py:
    class `ColorMap`:
        def `replace`:
            ColorMap: false
    class `CategoricalColorMap`:
        def `replace`:
            CategoricalColorMap: false
            colortable: false
            names: false
    class `GradientColorMap`:
        def `adjust_levels`:
            low > high ({low} > {high}): false
        def `apply`:
            ignore: false
            unsafe: false
        def `replace`:
            GradientColorMap: false
            colortable: false
            thresholds: false
            center: false
            span: false
    def `normalized_indices`:
        RowItem: false
        ColumnItem: false
    class `HeatmapGridWidget`:
        class `Parts`:
            RowItem: false
            ColumnItem: false
        def `setHeatmaps`:
            Parts: false
            row-labels-right: false
            column-labels-top: false
            column-labels-bottom: false
            annotation-legend-container: false
            row-annotation-legend-container: false
            col-annotation-legend-container: false
        def `heatmapAtPos`:
            GraphicsHeatmapWidget: false
    class `GraphicsHeatmapWidget`:
        def `heatmapCellToolTip`:
            '{}, {}: {:g}': false
    class `_GradientLegendAxisItem`:
        def `boundingRect`:
            top: false
            bottom: false
            tickFont: false
            0.0000000: false
    class `GradientLegendWidget`:
        def `__init__`:
            sizePolicy: false
            top: false
        def `__update`:
            {:.6g}: false
    class `CategoricalColorLegend`:
        def `__init__`:
            sizePolicy: false
        def `_setup`:
            X: false
        def `_updateFont`:
            X: false
widgets/visualize/utils/lac.py:
    def `create_sql_contingency`:
        %s IS NOT NULL: false
        COUNT(%s): false
        float: false
    def `lac`:
        Initializing: false
        Done: false
    def `get_bin_centers`:
        []()<>=≥: false
        -: false
widgets/visualize/utils/owlegend.py:
    class `Anchorable`:
        topLeft: false
        topRight: false
        bottomLeft: false
        bottomRight: false
        def `__init__`:
            bottomRight: false
    class `ContinuousLegendItem`:
        def `_format_values`:
            {:.3f}: false
    class `OWDiscreteLegend`:
        def `set_domain`:
            '[OWDiscreteLegend] The class var provided ': false
            was not discrete.: false
    class `OWContinuousLegend`:
        def `__init__`:
            range: false
        def `set_domain`:
            '[OWContinuousLegend] The class var provided ': false
            was not continuous.: false
widgets/visualize/utils/plotutils.py:
    class `TextItem`:
        setAnchor: false
    class `InteractiveViewBox`:
        def `mouseDragEvent`:
            def `select`:
                unsuspend_jittering: false
                suspend_jittering: false
            mouseMode: false
    class `PaletteItemSample`:
        def `__init__`:
            {{:.{}f}}: false
            {} - {}: false
    class `StyledAxisItem`:
        def `__clear_labelStyle_color`:
            color: false
    class `AxisItem`:
        def `__init__`:
            rotateTicks: false
        def `setRotateTicks`:
            rotateTicks: false
        def `drawPicture`:
            bottom: false
            top: false
            rotateTicks: false
            tickFont: false
            tickTextOffset: false
    class `PlotWidget`:
        def `__init__`:
            axisItems: false
            left: false
            bottom: false
    class `PlotItem`:
        def `__init__`:
            axisItems: false
            left: false
            bottom: false
widgets/visualize/utils/scene.py:
    class `UpdateItemsOnSelectGraphicsScene`:
        def `__handle_selection`:
            selection_changed: false
widgets/visualize/utils/vizrank.py:
    class `VizRankDialog`:
        Score Plots: Oceni prikaze
        Start: Začni
        Pause: Počakaj
        Continue: Nadaljuj
        Finished: Končano
        def `__init__`:
            Filter ...: true
            Start: Začni
        def `set_run_state`:
            {self.captionTitle} (paused at {self._progress}%): {self.captionTitle} (čaka pri {self._progress}%)
    def `VizRankMixin`:
        {vizrank_class.__name__}Mixin: false
    class `VizRankDialogAttrs`:
        def `__init__`:
            Orange.data.Table: false
            Orange.data.Variable: false
        def `attr_order`:
            Orange.data.Variable: false
        def `row_for_state`:
            ', ': true
        def `auto_select`:
            Orange.data.Variable: false
    class `VizRankDialogNAttrs`:
        def `__init__`:
            Orange.data.Table: false
            Orange.data.Variable: false
            'Number of variables: ': 'Število spremenljivk: '
        def `on_n_attrs_changed`:
            Restart with {new_attrs} variables: Ponovno poženi {plsi_sz(new_attrs)} {z_besedo(new_attrs, 6, "f")} {plsi(new_attrs, "spremenljivko|spremenljivkama|spremenljivkami")}
        def `emit_run_state_changed`:
            n_attrs: false
widgets/visualize/utils/widget.py:
    class `OWProjectionWidgetBase`:
        class `Information`:
            Points with undefined '{}' are shown in smaller size: Točke z neznano vrednostjo '{}' so manjše.
            Points with undefined '{}' are shown as crossed circles: Točke z neznano vrednostjo '{}' so prečrtane.
        def `init_attr_values`:
            attr_color: false
            attr_shape: false
            attr_size: false
            attr_label: false
        def `get_column`:
            Other: Drugo
        def `_point_tooltip`:
            def `show_part`:
                {} = {}: false
                ... and {over} {pl(over, 'other')}: ... in še {over}
                <b>{name}</b>:<br/>: false
                <br/>: false
            {pl(len(dom.class_vars), 'Class|Classes')}: {plsi(len(dom.class_vars), 'Razred|Razreda|Razredi')}
            {pl(len(dom.metas), 'Meta')}: Meta {plsi(len(dom.metas), 'spremenljivka|spremenljivki|spremenljivki')}
            {pl(len(dom.attributes), 'Feature')}: {plsi(len(dom.attributes), 'Atribut|Atributa|Atributi')}
            <br/>: false
        def `get_tooltip`:
            <hr/>: false
            {len(point_ids)} instances<hr/>{text}<hr/>...: {len(point_ids)} {plsi(len(point_ids), "primer")}<hr/>{text}<hr/>...
    class `OWDataProjectionWidget`:
        class `Inputs`:
            Data: Podatki
            Data Subset: Podmnožica podatkov
        class `Outputs`:
            Selected Data: Izbrani podatki
        class `Warning`:
            Too many labels to show (zoom in or label only selected): Preveč oznak (povečaj ali izberi 'Označi samo izbor in podmnožico')
            'Subset data contains some instances that do not appear in ': 'Podmnožica podatkov vsebuje nekatere primere, ki niso med '
            input data: vhodnimi podatki
            No subset data instances appear in input data: Vhodni podatki ne vsebujejo nobenega podatke iz podane podmnožice.
            Increase opacity if subset is difficult to see: Če je podmnožico težko videti, zmanjšaj prosojnost.
        graph.plot_widget.plotItem: false
        proj-x: false
        proj-y: false
        def `_add_buttons`:
            auto_commit: false
        def `_get_selected_data`:
            Group: Skupina
        def `_get_send_report_caption`:
            Color: Barva
            Label: Oznaka
            Shape: Oblika
            Size: Velikost
            Jittering: Pretresanje
            {} %: false
    class `OWAnchorProjectionWidget`:
        class `Outputs`:
            Components: Komponente
        class `Error`:
            Sparse data is not supported: Redki podatki niso podprti
            No projection due to no valid data: Ni veljavnih podatkov, ni projekcije.
            At least two data instances are required: Potrebna sta vsaj dva primera.
            An error occurred while projecting data.\n{}: Napaka med projeciranjem podatkov.\n{}
        def `send_components`:
            component: false
            components: komponente
    __main__: false
    class `OWProjectionWidgetWithName`:
        projection: false
    iris: false
widgets/visualize/utils/tree/rules.py:
    class `DiscreteRule`:
        def `merge_with`:
            Merged two discrete rules `%s` and `%s`: false
        def `description`:
            {} {}: false
            =: false
            ≠: false
        def `__str__`:
            {} {} {}: false
            =: false
            ≠: false
        def `__repr__`:
            DiscreteRule(attr_name='%s', equals=%s, value=%s): false
    class `ContinuousRule`:
        def `merge_with`:
            'Continuous rules can currently only be ': false
            merged with other continuous rules: false
        def `description`:
            %s %.3f: false
            >: false
            ≤: false
        def `__str__`:
            %s %s %.3f: false
            >: false
            ≤: false
        def `__repr__`:
            "ContinuousRule(attr_name='%s', greater=%s, value=%s, ": false
            inclusive=%s): false
    class `IntervalRule`:
        def `__init__`:
            'The left rule must be an instance of the `ContinuousRule` ': false
            class.: false
            'The right rule must be an instance of the `ContinuousRule` ': false
        def `description`:
            ∈ %s%.3f, %.3f%s: false
            [: false
            (: false
            ]: false
            ): false
        def `__str__`:
            %s ∈ %s%.3f, %.3f%s: false
            [: false
            (: false
            ]: false
            ): false
        def `__repr__`:
            IntervalRule(attr_name='%s', left_rule=%s, right_rule=%s): false
widgets/visualize/utils/tree/skltreeadapter.py:
    class `SklTreeAdapter`:
        def `rules`:
            values: false
            _: false
